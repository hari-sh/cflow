main()
    sio0_init()
    ep_init()
        syncdelay()
            NOP()
    gpif_init()
        syncdelay()
    interrupt_init()
    io_init()
    delay_ms()
        delay_1ms()
    command_loop()
        execute_command()
            jtag_scan_in()
                jtag_clock_tms()
                GET_TDO()
            jtag_scan_out()
                jtag_clock_tms()
            jtag_scan_io()
                jtag_clock_tms()
                GET_TDO()
            jtag_clock_tms()
            jtag_clock_tck()
            jtag_slow_scan_in()
                jtag_slow_clock_tms()
                GET_TDO()
            jtag_slow_scan_out()
                jtag_slow_clock_tms()
            jtag_slow_scan_io()
                jtag_slow_clock_tms()
                GET_TDO()
            jtag_slow_clock_tms()
            jtag_slow_clock_tck()
            delay_us()
                delay_5us()
                    NOP()
            delay_ms()
            jtag_get_signals()
                GET_TDO()
                GET_BRKOUT()
                GET_TRAP()
                GET_RTCK()
            jtag_set_signals()
            jtag_configure_tck_delay()
            execute_set_led_command()
                SET_RUN_LED()
                SET_COM_LED()
                CLEAR_RUN_LED()
                CLEAR_COM_LED()
        syncdelay()
        SET_COM_LED()
        CLEAR_COM_LED()
    insert()
        list_add_tail()
    assert()
    lookup_id()
        list_for_each_entry()
        lh()
    lookup_tcb()
        list_for_each_entry()
        lh()
    remove()
        list_del()
    list_empty()
    LOG_WARNING()
    is_gpio_valid()
    LOG_ERROR()
    setup_sysfs_gpio()
        is_gpio_valid()
        snprintf()
        open_write_close()
            open()
            write()
            strlen()
            close()
        LOG_WARNING()
        LOG_ERROR()
        perror()
        unexport_sysfs_gpio()
            is_gpio_valid()
            snprintf()
            open_write_close()
            LOG_ERROR()
        open()
    setvbuf()
    process_remote_protocol()
        getchar()
        sysfsgpio_reset()
            write()
            LOG_WARNING()
        sysfsgpio_write()
            write()
            LOG_WARNING()
        putchar()
        sysfsgpio_read()
            lseek()
            read()
            LOG_WARNING()
        LOG_ERROR()
    cleanup_all_fds()
        cleanup_fd()
            close()
            unexport_sysfs_gpio()
    getopt()
    fopen()
    perror()
    atoi()
    fprintf()
    basename()
    getc()
    fgetc()
    printf()
    show_timestamp()
        printf()
        fgetc()
        strerror()
    show_reserved()
        printf()
        fgetc()
        strerror()
    show_hard()
        printf()
        read_varlen()
            printf()
            memset()
            fread()
            strerror()
    show_swit()
        read_varlen()
        printf()
    dbg_write_str()
        dbg_write()
            asm()
    dbg_write_char()
        dbg_write()
    dbg_write_u32()
        dbg_write()
        TARGET_REQ_DEBUGMSG_HEXMSG()
    dbg_write_u16()
        dbg_write()
        TARGET_REQ_DEBUGMSG_HEXMSG()
    dbg_write_u8()
        dbg_write()
        TARGET_REQ_DEBUGMSG_HEXMSG()
    dbg_trace_point()
        dbg_write()
    msp432_flash_init()
        MAP_FLASH_CTL_A_GET_WAIT_STATE()
        MAP_PCM_GET_CORE_VOLTAGE_LEVEL()
        MAP_PCM_GET_POWER_STATE()
        MAP_PCM_SET_POWER_STATE()
        MAP_FLASH_CTL_A_SET_WAIT_STATE()
        MAP_FLASH_CTL_GET_WAIT_STATE()
        MAP_FLASH_CTL_SET_WAIT_STATE()
    msp432_flash_mass_erase()
        unlock_flash_sectors()
            MAP_FLASH_CTL_A_UNPROTECT_MEMORY()
            MAP_SYS_CTL_A_GET_FLASH_SIZE()
            MAP_SYS_CTL_A_GET_INFO_FLASH_SIZE()
            MAP_FLASH_CTL_UNPROTECT_SECTOR()
        ROM_FLASH_CTL_A_PERFORM_MASS_ERASE()
        lock_all_flash_sectors()
            MAP_FLASH_CTL_A_PROTECT_MEMORY()
            MAP_SYS_CTL_A_GET_FLASH_SIZE()
            MAP_SYS_CTL_A_GET_INFO_FLASH_SIZE()
            MAP_FLASH_CTL_PROTECT_SECTOR()
        MAP_FLASH_CTL_PERFORM_MASS_ERASE()
    msp432_flash_sector_erase()
        unlock_all_flash_sectors()
            MAP_FLASH_CTL_A_UNPROTECT_MEMORY()
            MAP_SYS_CTL_A_GET_FLASH_SIZE()
            MAP_SYS_CTL_A_GET_INFO_FLASH_SIZE()
            MAP_FLASH_CTL_UNPROTECT_SECTOR()
        MAP_FLASH_CTL_A_ERASE_SECTOR()
        lock_all_flash_sectors()
        MAP_FLASH_CTL_ERASE_SECTOR()
    msp432_flash_continous_write()
        unlock_all_flash_sectors()
        program_device()
            MAP_FLASH_CTL_A_PROGRAM_MEMORY()
        lock_all_flash_sectors()
        program_device()
            MAP_FLASH_CTL_PROGRAM_MEMORY()
    msp432_flash_exit()
        MAP_FLASH_CTL_A_SET_WAIT_STATE()
        MAP_PCM_SET_POWER_STATE()
        MAP_PCM_SET_CORE_VOLTAGE_LEVEL()
        MAP_FLASH_CTL_SET_WAIT_STATE()
    MAP_WDT_A_HOLD_TIMER()
    cpu_cpsid()
    msp432_flash_write()
        unlock_all_flash_sectors()
        program_device()
        lock_all_flash_sectors()
        program_device()
    flashloader_init()
        memset()
    disable_flash_cache()
        HWREG()
    flashloader_erase_all()
        flash_bank_erase()
            enable_sectors_for_write()
                trim_for_write()
                    HWREG()
                    scale_cycle_values()
                set_write_mode()
                    HWREG()
                HWREG()
            issue_fsm_command()
                HWREG()
            HWREG()
            flash_check_fsm_for_ready()
            flash_check_fsm_for_error()
            flash_disable_sectors_for_write()
                set_read_mode()
                    HWREG()
                HWREG()
            flash_size_get()
            flash_sector_size_get()
            flash_program()
                func_pntr()
                HWREGBITW()
        memset()
    flashloader_program()
        flash_program()
    flashloader_erase_and_program()
        flashloader_erase_sectors()
            flashloader_address_to_sector()
            flash_sector_erase()
                HWREGBITW()
        flashloader_program()
    flashloader_program_with_retain()
        flashloader_address_to_sector()
        memset()
        memcpy()
        flashloader_erase_and_program()
    flashloader_erase_sectors()
    restore_cache_state()
        HWREG()
    write()
    dcc_rd()
        asm()
    dcc_wr()
        asm()
    flash_init()
        inr()
    flash_erase_all()
        flash_erase_plane()
            inr()
            outr()
    cmd_flash()
        dcc_rd()
        dcc_wr()
        flash_page_program()
            inr()
            outr()
        flash_verify()
    mPORTDClearBits()
    mPORTDSetPinsDigitalOut()
    mPORTDToggleBits()
    delay()
    openocd_main()
        setup_command_handler()
            log_init()
                getenv()
                parse_int()
                timeval_ms()
                    gettimeofday()
                        GetSystemTimeAsFileTime()
            LOG_DEBUG()
            command_init()
                calloc()
                malloc()
                INIT_LIST_HEAD()
                Jim_CreateInterp()
                Jim_RegisterCoreCommands()
                Jim_InitStaticExtensions()
                register_commands()
                Jim_SetAssocData()
                Jim_Eval_Named()
                LOG_ERROR()
                Jim_MakeErrorMessage()
                LOG_USER_N()
                Jim_GetString()
                Jim_GetResult()
                exit()
                Jim_DeleteAssocData()
            openocd_register_commands()
                register_commands()
            server_register_commands()
                telnet_register_commands()
                    strdup()
                    register_commands()
                tcl_register_commands()
                    strdup()
                    register_commands()
                jsp_register_commands()
                    strdup()
                    register_commands()
                register_commands()
            gdb_register_commands()
                strdup()
                register_commands()
            log_register_commands()
                register_commands()
            rtt_server_register_commands()
                register_commands()
            transport_register_commands()
                register_commands()
            adapter_register_commands()
                register_commands()
            target_register_commands()
                register_commands()
            flash_register_commands()
                register_commands()
            nand_register_commands()
                register_commands()
            pld_register_commands()
                register_commands()
            cti_register_commands()
                register_commands()
            dap_register_commands()
                register_commands()
            arm_tpiu_swo_register_commands()
                register_commands()
            command_done()
                free()
            LOG_OUTPUT()
        util_init()
            register_commands()
        rtt_init()
            calloc()
        LOG_OUTPUT()
        command_context_mode()
        command_set_output_handler()
        configuration_output_handler()
            LOG_USER_N()
        server_host_os_entry()
            MAKEWORD()
            WSAStartup()
            LOG_ERROR()
        openocd_thread()
            parse_cmdline_args()
                getopt_long()
                alloc_printf()
                    va_start()
                    alloc_vprintf()
                        va_copy()
                        vsnprintf()
                        va_end()
                        malloc()
                    va_end()
                add_config_command()
                    realloc()
                    strdup()
                free()
                add_script_search_dir()
                    realloc()
                    strdup()
                    LOG_DEBUG()
                command_run_linef()
                    va_start()
                    alloc_vprintf()
                    command_run_line()
                        Jim_GetAssocData()
                        Jim_DeleteAssocData()
                        Jim_SetAssocData()
                        Jim_Eval_Named()
                        Jim_GetString()
                        Jim_GetResult()
                        command_output_text()
                        Jim_MakeErrorMessage()
                        LOG_USER()
                    free()
                    va_end()
                LOG_OUTPUT()
                exit()
                add_default_dirs()
                    find_exe_path()
                        malloc()
                        GetModuleFileName()
                        proc_pidpath()
                        getpid()
                        free()
                        sysctl()
                        ARRAY_SIZE()
                        realpath()
                        strrchr()
                        LOG_WARNING()
                        LOG_DEBUG()
                        strdup()
                    find_relative_path()
                        strchr()
                        malloc()
                        strlen()
                        strcat()
                    LOG_DEBUG()
                    getenv()
                    add_script_search_dir()
                    add_user_dirs()
                        getenv()
                        alloc_printf()
                        add_script_search_dir()
                        free()
                    alloc_printf()
                    free()
            server_preinit()
                SetConsoleCtrlHandler()
                control_handler()
                signal()
                sig_handler()
                    LOG_DEBUG()
                sigkey_handler()
                    tcgetpgrp()
                    sig_handler()
                    LOG_DEBUG()
            parse_config_file()
                command_run_line()
            server_quit()
                remove_services()
                    remove_connections()
                        remove_connection()
                            close_socket()
                            command_done()
                            free()
                    free()
                    close()
                target_quit()
                    free()
                SetConsoleCtrlHandler()
                control_handler()
            server_init()
                tcl_init()
                    strcmp()
                    LOG_INFO()
                    add_service()
                        malloc()
                        strdup()
                        strcmp()
                        strtol()
                        parse_long()
                        socket()
                        LOG_ERROR()
                        strerror()
                        free_service()
                            free()
                        setsockopt()
                        socket_nonblock()
                        memset()
                        htonl()
                        gethostbyname()
                        close_socket()
                        memcpy()
                        htons()
                        bind()
                        listen()
                        getsockname()
                        LOG_INFO()
                        ntohs()
                        fileno()
                        LOG_WARNING()
                        open()
                telnet_init()
                    strcmp()
                    LOG_INFO()
                    malloc()
                    LOG_ERROR()
                    add_service()
                    free()
                remove_services()
            command_run_line()
            server_loop()
                timeval_ms()
                signal()
                LOG_ERROR()
                FD_ZERO()
                FD_SET()
                socket_select()
                WSAGetLastError()
                strerror()
                target_call_timer_callbacks()
                    target_call_timer_callbacks_check_time()
                        keep_alive()
                            timeval_ms()
                            gdb_timeout_warning()
                                gdb_get_actual_connections()
                                LOG_WARNING()
                                LOG_DEBUG()
                            server_keep_clients_alive()
                        timeval_ms()
                        free()
                        target_call_timer_callback()
                            target_timer_callback_periodic_restart()
                            target_unregister_timer_callback()
                target_timer_next_event()
                process_jim_events()
                    Jim_ProcessEvents()
                target_got_message()
                FD_ISSET()
                add_connection()
                    malloc()
                    memset()
                    copy_command_context()
                        malloc()
                    accept()
                    setsockopt()
                    LOG_INFO()
                    close_socket()
                    LOG_ERROR()
                    command_done()
                    free()
                    fileno()
                    SetConsoleCtrlHandler()
                    alloc_printf()
                    open()
                accept()
                close_socket()
                LOG_INFO()
                remove_connection()
                PeekMessage()
                command_run_line()
        flash_free_all_banks()
            LOG_WARNING()
            strcmp()
            free()
        gdb_service_free()
            free()
        arm_tpiu_swo_cleanup_all()
            list_for_each_entry_safe()
            lh()
            arm_tpiu_swo_handle_event()
            arm_tpiu_swo_close_output()
                fclose()
                remove_service()
                    strcmp()
                    remove_connections()
                    close_socket()
                    free()
                    free_service()
            target_unregister_timer_callback()
            arm_tpiu_swo_poll_trace()
                adapter_poll_trace()
                target_call_trace_callbacks()
                    list_for_each_entry()
                fwrite()
                fflush()
                LOG_ERROR()
                list_for_each_entry()
                lh()
                connection_write()
                    write_socket()
                    write()
            adapter_config_trace()
                LOG_ERROR()
            LOG_ERROR()
            Jim_DecrRefCount()
            free()
            dap_put_ap()
                LOG_ERROR()
                LOG_DEBUG()
                is_ap_in_use()
        server_free()
            tcl_service_free()
                free()
            telnet_service_free()
                free()
            jsp_service_free()
                free()
            free()
        unregister_all_commands()
        help_del_all_commands()
            list_for_each_entry_safe()
            lh()
            list_del()
            free()
        arm_cti_cleanup_all()
            list_for_each_entry_safe()
            lh()
            dap_put_ap()
            free()
        dap_cleanup_all()
            list_for_each_entry_safe()
            lh()
            LOG_ERROR()
            free()
        adapter_quit()
            is_adapter_initialized()
            LOG_ERROR()
            free()
            jtag_all_taps()
            jtag_tap_free()
                jtag_unregister_event_callback()
                    free()
                jtag_reset_callback()
                    buf_set_ones()
                        memset()
                Jim_DecrRefCount()
                free()
        server_host_os_close()
            WSACleanup()
        command_exit()
            Jim_FreeInterp()
            free()
            command_done()
        rtt_exit()
            free()
        free_config()
            free()
        log_exit()
            fclose()
        exit_on_signal()
            signal()
            kill()
            getpid()
    usb_init()
        delay_ms()
COMMAND_HELPER()
COMMAND_HELPER()
    calloc()
    strcmp()
    strdup()
    LOG_ERROR()
    free()
    snprintf()
    command_print()
        va_start()
        alloc_vprintf()
        strcat()
        Jim_AppendString()
        free()
        va_end()
    COMMAND_PARSE_NUMBER()
    LOG_WARNING()
    get_flash_bank_by_name()
        get_flash_bank_by_name_noprobe()
            get_flash_name_index()
                strrchr()
                parse_uint()
            strcmp()
            flash_driver_name_matches()
                strlen()
                strncmp()
        LOG_ERROR()
    get_flash_bank_by_name_noprobe()
    get_flash_bank_by_num()
        get_flash_bank_by_num_noprobe()
            LOG_ERROR()
        LOG_ERROR()
    get_flash_bank_by_num_noprobe()
    CALL_COMMAND_HANDLER()
    nand_fileio_init()
        memset()
    nand_fileio_start()
        command_print()
        duration_start()
            gettimeofday()
        fileio_open()
            malloc()
            strdup()
            fileio_open_local()
                strcpy()
                LOG_ERROR()
                strcat()
                open_file_from_path()
                    fopen()
                    find_file()
                        alloc_printf()
                        fopen()
                        free()
                        fclose()
                        LOG_DEBUG()
                    free()
                fseek()
                ftell()
                fileio_close_local()
                    fclose()
                    LOG_ERROR()
                    strerror()
            free()
        malloc()
    fileio_size()
    get_nand_device_by_name()
        get_flash_name_index()
        strcmp()
        flash_driver_name_matches()
    get_nand_device_by_num()
COMMAND_HELPER()
    list_for_each_entry()
    lh()
    CALL_COMMAND_HANDLER()
    strchr()
    strstr()
    strlen()
    alloc_printf()
    command_help_show_wrap()
        HELP_LINE_WIDTH()
        command_help_show_indent()
            LOG_USER_N()
        LOG_USER()
    free()
    LOG_ERROR()
    Jim_Eval()
    Jim_GetString()
    Jim_GetResult()
    strcmp()
    command_parse_bool_arg()
        command_parse_bool()
    LOG_INFO()
COMMAND_HELPER()
    command_print()
COMMAND_HELPER()
    RISCV013_INFO()
    riscv_print_info_line()
    get_field()
    dmstatus_read()
        dmstatus_read_timeout()
            dmi_op_timeout()
                select_dmi()
                    select_dmi_via_bscan()
                        jtag_add_ir_scan()
                            assert()
                            jtag_add_scan_check()
                            jtag_add_ir_scan_noverify_callback()
                                jtag_add_ir_scan_noverify()
                                    jtag_prelude()
                                        jtag_checks()
                                            assert()
                                        assert()
                                    interface_jtag_add_ir_scan()
                                        jtag_tap_count_enabled()
                                            jtag_all_taps()
                                        cmd_queue_alloc()
                                            malloc()
                                        jtag_queue_command()
                                            transport_is_jtag()
                                                get_current_transport()
                                            LOG_ERROR()
                                            assert()
                                        assert()
                                    jtag_set_error()
                            jtag_add_ir_scan_noverify()
                        jtag_add_dr_scan()
                            assert()
                            jtag_prelude()
                            interface_jtag_add_dr_scan()
                                cmd_queue_alloc()
                                jtag_queue_command()
                                assert()
                            jtag_set_error()
                    jtag_add_ir_scan()
                LOG_ERROR()
                keep_alive()
                time()
                dmi_scan()
                    get_info()
                        assert()
                    RISCV_INFO()
                    memset()
                    assert()
                    buf_set_u32()
                    riscv_add_bscan_tunneled_scan()
                        jtag_add_ir_scan()
                        memset()
                        jtag_add_dr_scan()
                        ARRAY_SIZE()
                    jtag_add_dr_scan()
                    jtag_add_runtest()
                        jtag_prelude()
                        jtag_set_error()
                        interface_jtag_add_runtest()
                            cmd_queue_alloc()
                            jtag_queue_command()
                    jtag_execute_queue()
                        jtag_execute_queue_noclear()
                            jtag_set_error()
                            interface_jtag_execute_queue()
                                assert()
                                default_interface_jtag_execute_queue()
                                    is_adapter_initialized()
                                    LOG_ERROR()
                                    transport_is_jtag()
                                    LOG_DEBUG_IO()
                                    tap_state_name()
                                        ARRAY_SIZE()
                                jtag_command_queue_reset()
                                    cmd_queue_free()
                                        free()
                                jtag_callback_queue_reset()
                            usleep()
                        jtag_error_clear()
                    LOG_ERROR()
                    buffer_shr()
                        memmove()
                        memset()
                    buf_get_u32()
                    dump_field()
                        assert()
                        buf_get_u64()
                        get_field()
                        log_printf_lf()
                            va_start()
                            log_vprintf_lf()
                                alloc_vprintf()
                                strcat()
                                log_puts()
                                    fputs()
                                    fflush()
                                    strrchr()
                                    timeval_ms()
                                    mallinfo()
                                    fprintf()
                                    log_forward()
                                free()
                            va_end()
                increase_dmi_busy_delay()
                    get_info()
                    LOG_DEBUG()
                    dtmcontrol_scan()
                        dtmcontrol_scan_via_bscan()
                            buf_set_u32()
                            jtag_add_ir_scan()
                            jtag_add_dr_scan()
                            ARRAY_SIZE()
                            select_dmi_via_bscan()
                            jtag_execute_queue()
                            LOG_ERROR()
                            buf_get_u32()
                            LOG_DEBUG()
                        buf_set_u32()
                        jtag_add_ir_scan()
                        jtag_add_dr_scan()
                        select_dmi()
                        jtag_execute_queue()
                        LOG_ERROR()
                        buf_get_u32()
                        LOG_DEBUG()
                dtmcontrol_scan()
            get_field()
            LOG_ERROR()
COMMAND_HELPER()
    COMMAND_PARSE_NUMBER()
    malloc()
    DIV_ROUND_UP()
    LOG_ERROR()
    str_to_buf()
        str_radix_guess()
        strndup()
            strnlen()
                memchr()
            malloc()
            memcpy()
        ceil_f_to_u32()
        calloc()
        DIV_ROUND_UP()
        free()
    strlen()
    strdup()
    alloc_printf()
    LOG_DEBUG()
    nvp_name2value()
        strcmp()
    realloc()
    LOG_WARNING()
    nvp_unknown_command_print()
        command_print_sameline()
            va_start()
            alloc_vprintf()
            Jim_AppendString()
            free()
            va_end()
        command_print()
    transport_is_jtag()
    command_print()
COMMAND_HELPER()
    get_target()
        target_name()
        strcmp()
        parse_uint()
        LOG_WARNING()
    LOG_ERROR()
    register_commands()
    malloc()
    strdup()
    CALL_COMMAND_HANDLER()
    free()
    LOG_DEBUG()
    nand_device_add()
COMMAND_HELPER()
    riscv_print_info_line()
    dbus_read()
        dbus_scan()
            get_info()
                assert()
            assert()
            buf_set_u64()
            jtag_add_dr_scan()
            jtag_add_runtest()
            jtag_execute_queue()
            LOG_ERROR()
            buf_get_u64()
            buf_get_u32()
            dump_field()
                buf_get_u64()
                log_printf_lf()
        increase_dbus_busy_delay()
            get_info()
            LOG_DEBUG()
            dtmcontrol_scan()
                buf_set_u32()
                jtag_add_ir_scan()
                jtag_add_dr_scan()
                jtag_execute_queue()
                LOG_ERROR()
                buf_get_u32()
                LOG_DEBUG()
        LOG_ERROR()
    get_field()
COMMAND_HELPER()
    command_print()
    strcasecmp()
COMMAND_HELPER()
    nvp_name2value()
    strlen()
    command_print()
    strcpy()
    COMMAND_PARSE_NUMBER()
    nvp_unknown_command_print()
    strdup()
    LOG_ERROR()
    validate_register()
    get_current_target()
        get_current_target_or_null()
        LOG_ERROR()
        exit()
    arc_reg_add()
        assert()
        target_to_arc()
        list_for_each_entry()
        strncmp()
        list_add_tail()
        LOG_DEBUG()
COMMAND_HELPER()
    COMMAND_PARSE_ADDRESS()
    get_current_target()
    LOG_ERROR()
    duration_start()
    image_open()
        identify_image_type()
            strcmp()
            autodetect_image_type()
                fileio_open()
                fileio_read()
                    fileio_local_read()
                        fread()
                fileio_close()
                    fileio_close_local()
                    free()
                LOG_DEBUG()
                strncmp()
                isxdigit()
        malloc()
        fileio_open()
        fileio_size()
        fileio_close()
        image_ihex_buffer_complete()
            malloc()
            LOG_ERROR()
            free()
            image_ihex_buffer_complete_inner()
                fileio_size()
                malloc()
                fileio_feof()
                    feof()
                fileio_fgets()
                    fileio_local_fgets()
                        fgets()
                strlen()
                strspn()
                sscanf()
                LOG_ERROR()
                be_to_h_u32()
                LOG_WARNING()
        LOG_ERROR()
        image_elf_read_headers()
            fileio_read()
            LOG_ERROR()
            strncmp()
            LOG_DEBUG()
            image_elf32_read_headers()
                fileio_seek()
                    fseek()
                    LOG_ERROR()
                    strerror()
                LOG_ERROR()
                malloc()
                fileio_read()
                field16()
                field32()
            image_elf64_read_headers()
                fileio_seek()
                LOG_ERROR()
                malloc()
                fileio_read()
                field16()
                field64()
                field32()
        get_target()
        image_mot_buffer_complete()
            malloc()
            LOG_ERROR()
            free()
            image_mot_buffer_complete_inner()
                fileio_size()
                malloc()
                fileio_feof()
                fileio_fgets()
                strlen()
                strspn()
                sscanf()
                LOG_ERROR()
                LOG_WARNING()
    malloc()
    command_print()
    image_read_section()
        LOG_DEBUG()
        fileio_seek()
        fileio_read()
        memcpy()
        image_elf_read_section()
            image_elf64_read_section()
                LOG_DEBUG()
                field64()
                MIN()
                fileio_seek()
                LOG_ERROR()
                fileio_read()
            image_elf32_read_section()
                LOG_DEBUG()
                field32()
                MIN()
                fileio_seek()
                LOG_ERROR()
                fileio_read()
        malloc()
        target_read_buffer()
            LOG_DEBUG()
            target_was_examined()
            LOG_ERROR()
        free()
    free()
    image_calculate_checksum()
        LOG_DEBUG()
        keep_alive()
    target_checksum_memory()
        target_was_examined()
        LOG_ERROR()
        target_name()
        malloc()
        target_read_buffer()
        free()
        target_buffer_get_u32()
            le_to_h_u32()
            be_to_h_u32()
        target_buffer_set_u32()
            h_u32_to_le()
            h_u32_to_be()
        image_calculate_checksum()
    target_read_buffer()
    keep_alive()
    duration_measure()
        gettimeofday()
        timeval_subtract()
    duration_elapsed()
    duration_kbps()
        duration_elapsed()
    image_close()
        fileio_close()
        free()
COMMAND_HELPER()
    strcmp()
    command_print()
    COMMAND_PARSE_NUMBER()
    COMMAND_PARSE_ENABLE()
COMMAND_HELPER()
    target_to_xtensa()
    strlen()
    LOG_ERROR()
    memset()
    strtoul()
    xtensa_write_dirty_registers()
        target_to_xtensa()
        LOG_TARGET_DEBUG()
        xtensa_reg_get()
            target_to_xtensa()
            xtensa_reg_get_value()
                buf_get_u32()
        xtensa_queue_dbg_reg_write()
        xtensa_queue_exec_ins()
            xtensa_queue_dbg_reg_write()
        XT_INS_RSR()
        XT_INS_WUR()
        XT_INS_WFR()
        XT_INS_WSR()
        XT_INS_JX()
        xtensa_mark_register_dirty()
        xtensa_queue_dbg_reg_read()
        xtensa_dm_queue_execute()
        xtensa_core_status_check()
            target_to_xtensa()
            xtensa_dm_core_status_read()
                xtensa_dm_queue_enable()
                xtensa_dm_queue_tdi_idle()
                xtensa_dm_queue_execute()
                buf_get_u32()
            xtensa_dm_core_status_get()
            LOG_TARGET_DEBUG()
            LOG_TARGET_ERROR()
            xtensa_imprecise_exception_occurred()
                target_to_xtensa()
            target_name()
            xtensa_dm_core_status_clear()
                xtensa_dm_queue_tdi_idle()
                xtensa_dm_queue_execute()
            xtensa_imprecise_exception_clear()
                target_to_xtensa()
        buf_get_u32()
        xtensa_window_state_save()
            target_to_xtensa()
            xtensa_queue_exec_ins()
            XT_INS_RSR()
            XT_INS_WSR()
            xtensa_queue_dbg_reg_read()
            xtensa_dm_queue_execute()
            LOG_TARGET_ERROR()
            xtensa_core_status_check()
            buf_get_u32()
            LOG_TARGET_DEBUG()
            xtensa_queue_dbg_reg_write()
        xtensa_windowbase_offset_to_canonical()
            LOG_ERROR()
        memcmp()
        xtensa_scratch_regs_fixup()
            LOG_DEBUG()
            memcpy()
        LOG_WARNING()
        XT_INS_ROTW()
        xtensa_window_state_restore()
            target_to_xtensa()
            xtensa_queue_dbg_reg_write()
            xtensa_queue_exec_ins()
            XT_INS_RSR()
            XT_INS_WSR()
            LOG_TARGET_DEBUG()
    target_name()
    xtensa_reg_get()
    xtensa_queue_dbg_reg_write()
    xtensa_queue_exec_ins()
    XT_INS_RSR()
    XT_INS_WSR()
    LOG_TARGET_DEBUG()
    xtensa_queue_exec_ins_wide()
        memcpy()
        memset()
        DIV_ROUND_UP()
        xtensa_queue_dbg_reg_write()
        target_buffer_get_u32()
    xtensa_dm_queue_execute()
    LOG_TARGET_ERROR()
    xtensa_core_status_check()
    xtensa_fetch_all_regs()
        target_to_xtensa()
        LOG_LEVEL_IS()
        calloc()
        LOG_TARGET_ERROR()
        free()
        LOG_TARGET_DEBUG()
        xtensa_queue_exec_ins()
        XT_INS_WSR()
        xtensa_queue_dbg_reg_read()
        XT_INS_RSR()
        xtensa_queue_dbg_reg_write()
        xtensa_window_state_save()
        XT_INS_ROTW()
        xtensa_window_state_restore()
        xtensa_dm_queue_execute()
        LOG_ERROR()
        xtensa_core_status_check()
        buf_get_u32()
        xtensa_reg_set()
            target_to_xtensa()
            xtensa_reg_get_value()
            xtensa_reg_set_value()
                buf_set_u32()
        xtensa_reg_is_readable()
            BIT()
        XT_INS_RUR()
        XT_INS_RFR()
        XT_INS_CALL0()
        xtensa_canonical_to_windowbase_offset()
            xtensa_windowbase_offset_to_canonical()
        buf_cpy()
            memcpy()
            DIV_ROUND_UP()
        LOG_DEBUG()
        LOG_INFO()
        xtensa_windowbase_offset_to_canonical()
        xtensa_mark_register_dirty()
        sprintf()
    xtensa_reg_set()
    strcasecmp()
    strtol()
    xtensa_cmd_xtopt_legal_val()
        LOG_ERROR()
    LOG_WARNING()
    calloc()
    strcmp()
    strdup()
    LOG_DEBUG()
    assert()
    CALL_COMMAND_HANDLER()
    command_print()
    xtensa_dm_perfmon_enable()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
    snprintf()
    xtensa_dm_perfmon_dump()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        stat()
        buf_get_u32()
    LOG_INFO()
    xtensa_smpbreak_set()
        target_to_xtensa()
        target_was_examined()
        xtensa_smpbreak_write()
            LOG_TARGET_DEBUG()
            xtensa_queue_dbg_reg_write()
            xtensa_dm_queue_tdi_idle()
            xtensa_dm_queue_execute()
        LOG_TARGET_DEBUG()
    xtensa_smpbreak_read()
        xtensa_queue_dbg_reg_read()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        buf_get_u32()
    xtensa_dm_trace_status_read()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        buf_get_u32()
    xtensa_dm_trace_stop()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        buf_get_u32()
        xtensa_dm_trace_status_read()
        LOG_ERROR()
    xtensa_dm_trace_start()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
    xtensa_dm_trace_config_read()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        buf_get_u32()
    malloc()
    xtensa_dm_trace_data_read()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
    free()
    open()
    write()
    close()
FLASH_BANK_COMMAND_HANDLER()
    malloc()
    COMMAND_PARSE_NUMBER()
    calloc()
    LOG_ERROR()
    strcmp()
    free()
    str7x_build_block_list()
        LOG_ERROR()
        exit()
        malloc()
    LOG_DEBUG()
    LOG_INFO()
    rsl10_get_chip()
        flash_bank_list()
    assert()
    LOG_WARNING()
    memset()
    cfi_flash_bank_cmd()
        LOG_ERROR()
        calloc()
        strcmp()
    rpchf_target_read_memory()
        rpc_hf_xfer()
            rpc_hf_wait_tend()
                timeval_ms()
                target_read_u32()
                    target_was_examined()
                    LOG_ERROR()
                    target_read_memory()
                        target_was_examined()
                        LOG_ERROR()
                        target_name()
                    target_buffer_get_u32()
                    LOG_DEBUG()
                alive_sleep()
                    usleep()
                    keep_alive()
                LOG_ERROR()
            LOG_ERROR()
            target_write_u32()
                target_was_examined()
                LOG_ERROR()
                LOG_DEBUG()
                target_buffer_set_u32()
                target_write_memory()
                    target_was_examined()
                    LOG_ERROR()
                    target_name()
            target_write_memory()
            clrsetbits_u32()
                target_read_u32()
                target_write_u32()
            RPC_CMNCR_BSZ()
            rpc_hf_mode()
                rpc_hf_wait_tend()
                LOG_ERROR()
                clrsetbits_u32()
                RPC_PHYCNT_MEM()
                RPC_CMNCR_BSZ()
                target_write_u32()
                RPC_DRCR_RBURST()
                RPC_DRCMR_CMD()
                RPC_DRENR_CDB()
                RPC_DRENR_OCDB()
                RPC_DRENR_ADB()
                RPC_DRENR_SPIDB()
                RPC_DRENR_ADE()
                RPC_DRDMCR_DMCYC()
                target_read_u32()
            RPC_SMCMR_CMD()
            RPC_SMENR_CDB()
            RPC_SMENR_OCDB()
            RPC_SMENR_ADB()
            RPC_SMENR_SPIDB()
            RPC_SMENR_OPDB()
            RPC_SMENR_ADE()
            buf_bswap32()
            RPC_SMDMCR_DMCYC()
            target_read_u32()
    rpchf_target_write_memory()
        rpc_hf_xfer()
    target_to_arm7_9()
    is_arm7_9()
    str9x_build_block_list()
        LOG_ERROR()
        exit()
        malloc()
    alloc_block_array()
        calloc()
    strdup()
    fm4_name_match()
        tolower()
    mb9bf_bank_setup()
        fm4_name_match()
        LOG_WARNING()
    s6e2cc_bank_setup()
        fm4_name_match()
        LOG_WARNING()
    efm32x_get_bank_index()
    COMMAND_PARSE_ADDRESS()
    jtag_tap_by_position()
        jtag_all_taps()
    str9xpec_build_block_list()
        LOG_ERROR()
        exit()
        malloc()
    buf_set_u32()
    dsp5680xx_build_sector_list()
        malloc()
        LOG_USER()
    aduc702x_build_sector_list()
        malloc()
    nrf5_get_chip()
        flash_bank_list()
    get_target()
    get_flash_bank_by_name_noprobe()
    aducm360_build_sector_list()
        malloc()
    register_commands()
    kinetis_get_chip()
        flash_bank_list()
    kinetis_chip_options()
NAND_DEVICE_COMMAND_HANDLER()
    CALL_S3C24XX_DEVICE_COMMAND()
    COMMAND_PARSE_NUMBER()
    malloc()
    LOG_WARNING()
    LOG_ERROR()
    strcmp()
    calloc()
    nand_read_page_raw()
        nand_page_command()
            alive_sleep()
        nand_read_data_page()
    davinci_write_page_ecc1()
        davinci_write_pagecmd()
            target_write_u8()
                target_was_examined()
                LOG_ERROR()
                LOG_DEBUG()
                target_write_memory()
        target_read_u32()
        target_write_u32()
        davinci_write_block_data()
            halted()
                LOG_ERROR()
            arm_nandwrite()
                is_armv7m()
                target_to_armv7m()
                arm_code_to_working_area()
                    target_alloc_working_area()
                        target_alloc_working_area_try()
                            LOG_DEBUG()
                            LOG_ERROR()
                            malloc()
                            ALIGN_DOWN()
                            ALIGN_UP()
                            target_split_working_area()
                                assert()
                                malloc()
                                free()
                            target_read_memory()
                            print_wa_layout()
                                LOG_DEBUG()
                        LOG_WARNING()
                    LOG_DEBUG()
                    target_buffer_set_u32_array()
                        target_buffer_set_u32()
                    target_write_memory()
                target_write_buffer()
                    LOG_DEBUG()
                    target_was_examined()
                    LOG_ERROR()
                init_reg_param()
                    malloc()
                    DIV_ROUND_UP()
                buf_set_u32()
                target_run_algorithm()
                    target_was_examined()
                    LOG_ERROR()
                    target_type_name()
                LOG_ERROR()
                destroy_reg_param()
                    free()
            le_to_h_u32()
            target_write_u32()
            target_write_u8()
        davinci_writepage_tail()
            davinci_write_block_data()
            target_write_u8()
            davinci_nand_ready()
                halted()
                target_read_u32()
                alive_sleep()
            nand_read_status()
                alive_sleep()
            LOG_ERROR()
    davinci_write_page_ecc4()
        davinci_write_pagecmd()
        target_read_u32()
        target_write_u32()
        davinci_write_block_data()
        davinci_writepage_tail()
    davinci_read_page_ecc4infix()
        davinci_write_pagecmd()
        davinci_command()
            halted()
            target_write_u8()
        davinci_nand_ready()
        davinci_seek_column()
            target_write_u8()
            davinci_nand_ready()
        davinci_read_block_data()
            halted()
            target_read_u32()
            target_read_u8()
                target_was_examined()
                LOG_ERROR()
                target_read_memory()
                LOG_DEBUG()
    davinci_write_page_ecc4infix()
        davinci_write_pagecmd()
        target_read_u32()
        target_write_u32()
        davinci_write_block_data()
        davinci_writepage_tail()
    LOG_DEBUG()
PLD_CREATE_COMMAND_HANDLER()
    strcmp()
    jtag_tap_by_string()
        jtag_all_taps()
        strcmp()
        parse_uint()
        jtag_tap_by_position()
        LOG_WARNING()
    command_print()
    malloc()
    LOG_ERROR()
    strcasecmp()
S3C24XX_DEVICE_COMMAND()
    malloc()
    LOG_ERROR()
aarch64_add_breakpoint()
    target_to_aarch64()
    LOG_INFO()
    aarch64_set_breakpoint()
        target_to_aarch64()
        LOG_WARNING()
        LOG_ERROR()
        breakpoint_hw_set()
        aarch64_dap_write_memap_register_u32()
            target_to_armv8()
            mem_ap_write_atomic_u32()
                mem_ap_write_u32()
                    mem_ap_setup_transfer()
                        mem_ap_setup_csw()
                            dap_queue_ap_write()
                            MEM_AP_REG_CSW()
                        mem_ap_setup_tar()
                            dap_queue_ap_write()
                            MEM_AP_REG_TAR()
                            is_64bit_ap()
                            MEM_AP_REG_TAR64()
                    dap_queue_ap_write()
                    MEM_AP_REG_BD0()
                dap_run()
        LOG_DEBUG()
        armv8_dpm_get_core_state()
        ARMV8_HLT()
        ARMV8_HLT_A1()
        ARMV8_HLT_T1()
        buf_set_u32()
        target_read_memory()
        armv8_cache_d_inner_flush_virt()
            va_end()
            armv8_d_cache_sanity_check()
            armv8_opcode()
            LOG_ERROR()
        target_write_memory()
        armv8_cache_i_inner_inval_virt()
            va_end()
            armv8_i_cache_sanity_check()
            armv8_opcode()
            LOG_ERROR()
        aarch64_set_dscr_bits()
            target_to_armv8()
            armv8_set_dbgreg_bits()
                mem_ap_read_atomic_u32()
                    mem_ap_read_u32()
                        mem_ap_setup_transfer()
                        dap_queue_ap_read()
                        MEM_AP_REG_BD0()
                    dap_run()
                mem_ap_write_atomic_u32()
aarch64_add_context_breakpoint()
    target_to_aarch64()
    LOG_INFO()
    aarch64_set_context_breakpoint()
        target_to_aarch64()
        LOG_WARNING()
        LOG_ERROR()
        breakpoint_hw_set()
        aarch64_dap_write_memap_register_u32()
        LOG_DEBUG()
aarch64_add_hybrid_breakpoint()
    target_to_aarch64()
    LOG_INFO()
    aarch64_set_hybrid_breakpoint()
        target_to_aarch64()
        LOG_WARNING()
        LOG_DEBUG()
        LOG_ERROR()
        breakpoint_hw_set()
        aarch64_dap_write_memap_register_u32()
aarch64_add_watchpoint()
    target_to_aarch64()
    LOG_INFO()
    aarch64_set_watchpoint()
        target_to_aarch64()
        LOG_WARNING()
        LOG_ERROR()
        aarch64_dap_write_memap_register_u32()
        LOG_DEBUG()
        aarch64_set_dscr_bits()
        watchpoint_set()
aarch64_assert_reset()
    target_to_armv8()
    jtag_get_reset_config()
    LOG_DEBUG()
    target_has_event_action()
    target_handle_event()
        LOG_DEBUG()
        target_name()
        target_type_name()
        target_event_name()
            jim_nvp_value2name_simple()
            LOG_ERROR()
        Jim_GetString()
        current_command_context()
            Jim_GetAssocData()
        Jim_EvalObj()
        Jim_MakeErrorMessage()
        LOG_USER()
        Jim_GetResult()
        Jim_Eval()
    target_was_examined()
    adapter_assert_reset()
        transport_is_jtag()
        jtag_add_reset()
            legacy_jtag_add_reset()
                LOG_ERROR()
                jtag_set_error()
                interface_jtag_add_reset()
                    cmd_queue_alloc()
                    jtag_queue_command()
                jtag_execute_queue()
                LOG_DEBUG()
                jtag_add_sleep()
                    keep_alive()
                    jtag_set_error()
                    interface_jtag_add_sleep()
                        cmd_queue_alloc()
                        jtag_queue_command()
                jtag_add_tlr()
                    jtag_prelude()
                    jtag_set_error()
                    interface_jtag_add_tlr()
                        cmd_queue_alloc()
                        jtag_queue_command()
                    jtag_call_event_callbacks()
                        LOG_DEBUG()
                    jtag_notify_event()
                        jtag_all_taps()
                        jtag_tap_handle_event()
                            jim_nvp_value2name_simple()
                            LOG_DEBUG()
                            Jim_GetString()
                            Jim_EvalObj()
                            Jim_MakeErrorMessage()
                            LOG_USER()
                            Jim_GetResult()
                            LOG_INFO()
                tap_set_state()
                jtag_call_event_callbacks()
                jtag_notify_event()
            LOG_ERROR()
            jtag_set_error()
            jtag_execute_queue()
            LOG_DEBUG()
            jtag_add_sleep()
            jtag_add_tlr()
            tap_set_state()
            jtag_call_event_callbacks()
            jtag_notify_event()
        transport_is_swd()
            get_current_transport()
        transport_is_hla()
            get_current_transport()
        transport_is_dapdirect_jtag()
            get_current_transport()
        transport_is_dapdirect_swd()
            get_current_transport()
        transport_is_swim()
            get_current_transport()
        adapter_system_reset()
            LOG_ERROR()
            LOG_DEBUG()
            jtag_sleep()
                usleep()
                alive_sleep()
        get_current_transport()
        LOG_ERROR()
    mem_ap_write_atomic_u32()
    aarch64_enable_reset_catch()
        target_to_armv8()
        mem_ap_read_atomic_u32()
        LOG_DEBUG()
        mem_ap_write_atomic_u32()
    LOG_WARNING()
    target_name()
    LOG_ERROR()
    register_cache_invalidate()
aarch64_deassert_reset()
    LOG_DEBUG()
    adapter_deassert_reset()
        transport_is_jtag()
        jtag_add_reset()
        transport_is_swd()
        transport_is_hla()
        transport_is_dapdirect_jtag()
        transport_is_dapdirect_swd()
        transport_is_swim()
        adapter_system_reset()
        get_current_transport()
        LOG_ERROR()
    target_was_examined()
    aarch64_init_debug_access()
        target_to_armv8()
        LOG_DEBUG()
        target_name()
        mem_ap_write_atomic_u32()
        mem_ap_read_atomic_u32()
        arm_cti_enable()
            mem_ap_write_atomic_u32()
        arm_cti_write_reg()
            mem_ap_write_atomic_u32()
        CTI_CHNL()
    aarch64_poll()
        aarch64_check_state_one()
            target_to_armv8()
            mem_ap_read_atomic_u32()
        LOG_DEBUG()
        target_name()
        aarch64_debug_entry()
            target_to_armv8()
            mem_ap_write_atomic_u32()
            mem_ap_read_atomic_u32()
            arm_cti_ack_events()
                mem_ap_write_atomic_u32()
                timeval_ms()
                mem_ap_read_atomic_u32()
                LOG_ERROR()
            CTI_TRIG()
            LOG_DEBUG()
            target_name()
            armv8_dpm_get_core_state()
            armv8_select_opcodes()
            armv8_select_reg_access()
                armv8_read_reg()
                    ARMV8_MSR_GP()
                    ARMV8_MOVFSP_64()
                    ARMV8_MRS_DLR()
                    ARMV8_MRS_DSPSR()
                    ARMV8_MRS_FPSR()
                    ARMV8_MRS_FPCR()
                    ARMV8_MRS()
                    armv8_get_pauth_mask()
                        armv8_read_ttbcr()
                            target_to_armv8()
                            memset()
                            armv8_curel_from_core_mode()
                            ARMV8_MRS()
                            armv8_pa_size()
                                LOG_INFO()
                            armv8_dpm_modeswitch()
                                buf_get_u32()
                                LOG_DEBUG()
                                LOG_ERROR()
                                armv8_opcode()
                                armv8_dpm_handle_exception()
                                    LOG_ERROR()
                                    mem_ap_write_u32()
                                    LOG_DEBUG()
                                    armv8_dpm_get_core_state()
                                    armv8_select_opcodes()
                                    armv8_select_reg_access()
                                    armv8_dpm_modeswitch()
                                armv8_dpm_get_core_state()
                                ARMV8_MSR_GP_XPSR_T1()
                                LOG_INFO()
                                armv8_select_opcodes()
                                armv8_select_reg_access()
                            LOG_ERROR()
                            LOG_INFO()
                armv8_write_reg()
                    ARMV8_MRS()
                    ARMV8_MOVTSP_64()
                    ARMV8_MSR_DLR()
                    ARMV8_MSR_DSPSR()
                    ARMV8_MSR_FPSR()
                    ARMV8_MSR_FPCR()
                    ARMV8_MSR_GP()
                armv8_read_reg_simdfp_aarch64()
                    ARMV8_MOV_GPR_VFP()
                armv8_write_reg_simdfp_aarch64()
                    ARMV8_MOV_VFP_GPR()
                armv8_read_reg32()
                    ARMV4_5_MCR()
                    ARMV8_MRC_DLR()
                    ARMV8_MRC_DSPSR()
                    ARMV8_MRS_T1()
                    ARMV4_5_MRC()
                    ARMV8_MRS_XPSR_T1()
                    ARMV4_5_VMRS()
                armv8_write_reg32()
                    ARMV4_5_MRC()
                    ARMV8_MCR_DLR()
                    ARMV8_MCR_DSPSR()
                    ARMV8_MSR_GP_T1()
                    ARMV4_5_MCR()
                    ARMV8_MSR_GP_XPSR_T1()
                    ARMV4_5_VMSR()
                armv8_read_reg_simdfp_aarch32()
                    ARMV4_5_VMOV()
                    ARMV4_5_MCR()
                armv8_write_reg_simdfp_aarch32()
                    ARMV4_5_MRC()
                    ARMV4_5_VMOV()
            arm_cti_write_reg()
            armv8_dpm_report_dscr()
                DSCR_ENTRY()
            armv8_dpm_read_current_registers()
                dpmv8_read_reg()
                    buf_set_u64()
                    LOG_DEBUG()
                    LOG_ERROR()
                armv8_opcode()
                armv8_set_cpsr()
                    buf_set_u32()
                    LOG_WARNING()
                    LOG_ERROR()
                    LOG_DEBUG()
                    armv8_mode_name()
                        ARRAY_SIZE()
                        LOG_ERROR()
                armv8_reg_current()
                armv8_curel_from_core_mode()
        update_halt_gdb()
            LOG_DEBUG()
            aarch64_halt_smp()
                aarch64_prepare_halt_smp()
                    LOG_DEBUG()
                    target_name()
                    foreach_smp_target()
                    target_to_armv8()
                    target_was_examined()
                    arm_cti_ungate_channel()
                        arm_cti_mod_reg_bits()
                            mem_ap_read_atomic_u32()
                            mem_ap_write_atomic_u32()
                        CTI_CHNL()
                    aarch64_set_dscr_bits()
                aarch64_halt_one()
                    target_to_armv8()
                    LOG_DEBUG()
                    target_name()
                    aarch64_set_dscr_bits()
                    arm_cti_pulse_channel()
                        arm_cti_write_reg()
                        CTI_CHNL()
                    aarch64_wait_halt_one()
                        timeval_ms()
                        aarch64_check_state_one()
                        LOG_DEBUG()
                        target_name()
                    LOG_ERROR()
                timeval_ms()
                foreach_smp_target()
                target_was_examined()
                aarch64_check_state_one()
            foreach_smp_target()
            target_was_examined()
            aarch64_poll()
        arm_semihosting()
            target_to_arm()
            target_to_armv7a()
            is_arm7_9()
            target_to_arm7_9()
            is_armv7a()
            ARMV4_5_MRC()
            buf_get_u32()
            arm_reg_current()
                LOG_ERROR()
            LOG_ERROR()
            target_read_memory()
            target_buffer_get_u16()
                le_to_h_u16()
                be_to_h_u16()
            target_buffer_get_u32()
            is_armv7m()
            target_to_armv7m()
            target_read_u16()
                target_was_examined()
                LOG_ERROR()
                target_read_memory()
                target_buffer_get_u16()
                LOG_DEBUG()
            is_armv8()
            target_to_armv8()
            buf_get_u64()
            target_read_u32()
            semihosting_common()
                LOG_DEBUG()
                semihosting_opcode_to_str()
                clock()
                semihosting_read_fields()
                    target_read_memory()
                semihosting_get_field()
                    target_buffer_get_u64()
                        le_to_h_u64()
                        be_to_h_u64()
                    target_buffer_get_u32()
                close()
                gdb_get_actual_connections()
                exit()
                fprintf()
                target_call_event_callbacks()
                    target_call_event_callbacks()
                    LOG_DEBUG()
                    target_event_name()
                    target_name()
                    target_handle_event()
                fstat()
                strlen()
                semihosting_set_field()
                    target_buffer_set_u64()
                        h_u64_to_le()
                        h_u64_to_be()
                    target_buffer_set_u32()
                target_write_buffer()
                semihosting_write_fields()
                    target_write_memory()
                memset()
                target_write_memory()
                isatty()
                malloc()
                strcpy()
                target_read_memory()
                free()
                strcmp()
                dup()
                open()
                semihosting_read()
                    semihosting_is_redirected()
                    semihosting_redirect_read()
                        LOG_ERROR()
                        connection_read()
                            read_socket()
                            read()
                        log_socket_error()
                            WSAGetLastError()
                            FormatMessage()
                            LOG_ERROR()
                            strerror()
                    read()
                LOG_ERROR()
                semihosting_getchar()
                    semihosting_is_redirected()
                    semihosting_redirect_read()
                    getchar()
                remove()
                rename()
                lseek()
                system()
                time()
                target_read_buffer()
                semihosting_write()
                    semihosting_is_redirected()
                    semihosting_redirect_write()
                        LOG_ERROR()
                        connection_write()
                        log_socket_error()
                    write()
                semihosting_putchar()
                    semihosting_is_redirected()
                    semihosting_redirect_write()
                    putchar()
                assert()
                target_handle_event()
            arm_semihosting_resume()
                is_armv8()
                target_to_armv8()
                target_resume()
                    target_was_examined()
                    LOG_ERROR()
                    target_call_event_callbacks()
                    jtag_poll_mask()
                    jtag_poll_unmask()
                LOG_ERROR()
        target_call_event_callbacks()
    aarch64_clear_reset_catch()
        target_to_armv8()
        mem_ap_read_atomic_u32()
        LOG_DEBUG()
        mem_ap_write_atomic_u32()
    LOG_WARNING()
    target_name()
    aarch64_enable_reset_catch()
    aarch64_halt_one()
aarch64_deinit_target()
    target_to_aarch64()
    dap_put_ap()
    armv8_free_reg_cache()
        target_to_armv8()
        armv8_free_cache()
            free()
    free()
aarch64_examine()
    target_was_examined()
    aarch64_examine_first()
        target_to_aarch64()
        dap_find_get_ap()
            is_adiv6()
            LOG_DEBUG()
            dap_get_ap()
                LOG_DEBUG()
            dap_queue_ap_read()
            AP_REG_IDR()
            dap_put_ap()
            dap_run()
            ap_type_to_description()
                ARRAY_SIZE()
        LOG_ERROR()
        dap_get_ap()
        mem_ap_init()
            dap_queue_ap_read()
            MEM_AP_REG_CFG()
            dap_run()
            mem_ap_setup_transfer()
            MEM_AP_REG_CSW()
            LOG_DEBUG()
        dap_lookup_cs_component()
            dap_lookup_cs_component_cs_component()
                is_valid_arm_cs_cidr()
                ARM_CS_CIDR_CLASS()
            rtp_ap()
                rtp_ops_ap_header()
                is_adiv6()
                rtp_cs_component()
                    assert()
                    IS_ALIGNED()
                    rtp_read_cs_regs()
                        assert()
                        IS_ALIGNED()
                        dap_queue_read_reg()
                            dap_queue_ap_read()
                            mem_ap_read_u32()
                        dap_run()
                        LOG_DEBUG()
                    rtp_ops_cs_component()
                    is_valid_arm_cs_cidr()
                    ARM_CS_CIDR_CLASS()
                    rtp_rom_loop()
                        assert()
                        IS_ALIGNED()
                        dap_queue_read_reg()
                        dap_run()
                        LOG_DEBUG()
                        is_64bit_ap()
                        rtp_ops_rom_table_entry()
                        dap_get_ap()
                        rtp_ap()
                        dap_put_ap()
                        rtp_cs_component()
                    ARM_CS_PIDR_DESIGNER()
                    ARM_CS_PIDR_PART()
                dap_get_debugbase()
                    dap_queue_ap_read()
                    MEM_AP_REG_CFG()
                    MEM_AP_REG_BASE()
                    AP_REG_IDR()
                    is_64bit_ap()
                    MEM_AP_REG_BASE64()
                    dap_run()
                rtp_ops_mem_ap_header()
                is_64bit_ap()
            LOG_DEBUG()
        LOG_DEBUG()
        mem_ap_write_atomic_u32()
        mem_ap_read_u32()
        dap_run()
        target_name()
        LOG_TARGET_ERROR()
        aarch64_dpm_setup()
            armv8_dpm_setup()
                armv8_dpm_full_context()
                    target_to_arm()
                    armv8_dpm_modeswitch()
                    dpmv8_read_reg()
                armv8_dpm_read_core_reg()
                    target_to_arm()
                    dpmv8_read_reg()
                armv8_dpm_write_core_reg()
                    target_to_arm()
                    dpmv8_write_reg()
                        buf_get_u64()
                        LOG_DEBUG()
                        LOG_ERROR()
                armv8_build_reg_cache()
                    target_to_armv8()
                    register_get_last_cache_p()
                    malloc()
                    calloc()
                    LOG_ERROR()
                dpmv8_mrc()
                    target_to_arm()
                    LOG_DEBUG()
                    ARMV4_5_MRC()
                dpmv8_mcr()
                    target_to_arm()
                    LOG_DEBUG()
                    ARMV4_5_MCR()
                dpmv8_dpm_prepare()
                    timeval_ms()
                    mem_ap_read_atomic_u32()
                    LOG_ERROR()
                    mem_ap_read_u32()
                dpmv8_dpm_finish()
                dpmv8_instr_execute()
                    dpmv8_exec_opcode()
                        timeval_ms()
                        mem_ap_read_atomic_u32()
                        LOG_ERROR()
                        armv8_dpm_get_core_state()
                        T32_FMTITR()
                        mem_ap_write_u32()
                        LOG_DEBUG()
                        armv8_dpm_handle_exception()
                dpmv8_instr_write_data_dcc()
                    dpmv8_write_dcc()
                        mem_ap_write_u32()
                    dpmv8_exec_opcode()
                dpmv8_instr_write_data_dcc_64()
                    dpmv8_write_dcc_64()
                        mem_ap_write_u32()
                    dpmv8_exec_opcode()
                dpmv8_instr_write_data_r0()
                    dpmv8_write_dcc()
                    dpmv8_exec_opcode()
                    armv8_opcode()
                dpmv8_instr_write_data_r0_64()
                    dpmv8_instr_write_data_r0()
                    dpmv8_write_dcc_64()
                    dpmv8_exec_opcode()
                    ARMV8_MRS()
                dpmv8_instr_cpsr_sync()
                    dpmv8_exec_opcode()
                    armv8_opcode()
                dpmv8_instr_read_data_dcc()
                    dpmv8_exec_opcode()
                    dpmv8_read_dcc()
                        timeval_ms()
                        mem_ap_read_atomic_u32()
                        LOG_ERROR()
                dpmv8_instr_read_data_dcc_64()
                    dpmv8_exec_opcode()
                    dpmv8_read_dcc_64()
                        timeval_ms()
                        mem_ap_read_atomic_u32()
                        LOG_ERROR()
                dpmv8_instr_read_data_r0()
                    dpmv8_exec_opcode()
                    armv8_opcode()
                    dpmv8_read_dcc()
                dpmv8_instr_read_data_r0_64()
                    dpmv8_instr_read_data_r0()
                    dpmv8_exec_opcode()
                    ARMV8_MSR_GP()
                    dpmv8_read_dcc_64()
                armv8_reg_current()
                dpmv8_bpwp_disable()
                    LOG_DEBUG()
                    mem_ap_write_atomic_u32()
                dpmv8_add_breakpoint()
                    target_to_arm()
                    LOG_DEBUG()
                    dpmv8_bpwp_setup()
                        LOG_ERROR()
                        LOG_DEBUG()
                dpmv8_remove_breakpoint()
                    target_to_arm()
                dpmv8_add_watchpoint()
                    target_to_arm()
                    dpmv8_watchpoint_setup()
                        LOG_DEBUG()
                        dpmv8_bpwp_setup()
                dpmv8_remove_watchpoint()
                    target_to_arm()
                calloc()
                free()
                LOG_INFO()
                target_name()
            armv8_dpm_initialize()
                LOG_WARNING()
                target_name()
        calloc()
        target_set_examined()
    aarch64_init_debug_access()
    aarch64_poll()
aarch64_halt()
    target_to_armv8()
    aarch64_halt_smp()
    aarch64_halt_one()
aarch64_hit_watchpoint()
    target_to_armv8()
aarch64_init_target()
    arm_semihosting_init()
        target_to_arm()
        assert()
        semihosting_common_init()
            LOG_DEBUG()
            malloc()
            LOG_ERROR()
            memset()
            clock()
            semihosting_common_fileio_info()
            semihosting_common_fileio_end()
        post_result()
            target_to_arm()
            is_arm7_9()
            target_to_arm7_9()
            is_armv7a()
            target_to_armv7a()
            buf_set_u32()
            buf_get_u32()
            arm_reg_current()
            is_armv8()
            target_to_armv8()
            buf_set_u64()
            buf_get_u64()
aarch64_jim_configure()
    calloc()
    adiv5_jim_configure()
        calloc()
        LOG_ERROR()
        adiv5_jim_spot_configure()
            assert()
            Jim_SetEmptyResult()
            jim_nvp_name2value_obj()
                jim_nvp_name2value()
                    jim_nvp_name2value_simple()
                        strcmp()
                Jim_String()
            jim_getopt_obj()
            dap_instance_by_jim_obj()
                Jim_GetString()
                list_for_each_entry()
                lh()
                strcmp()
            Jim_SetResultString()
            adiv5_dap_name()
                container_of()
            jim_getopt_wide()
                jim_getopt_obj()
                Jim_GetWide()
            Jim_SetResult()
            Jim_NewIntObj()
            LOG_WARNING()
            Jim_WrongNumArgs()
        Jim_SetResultString()
    Jim_SetEmptyResult()
    jim_nvp_name2value_obj()
    jim_getopt_obj()
    cti_instance_by_jim_obj()
        Jim_GetString()
        list_for_each_entry()
        lh()
        strcmp()
    Jim_SetResultString()
    Jim_WrongNumArgs()
    arm_cti_name()
aarch64_read_memory()
    aarch64_mmu()
        target_to_aarch64()
        LOG_TARGET_ERROR()
    aarch64_mmu_modify()
        target_to_aarch64()
        LOG_ERROR()
        ARMV8_MSR_GP()
        ARMV4_5_MCR()
        LOG_DEBUG()
        armv8_dpm_modeswitch()
    aarch64_read_cpu_memory()
        target_to_armv8()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        armv8_reg_current()
        mem_ap_read_atomic_u32()
        mem_ap_write_atomic_u32()
        ARMV8_MRS()
        ARMV4_5_MRC()
        aarch64_read_cpu_memory_fast()
            target_to_armv8()
            armv8_reg_current()
            ARMV8_MSR_GP()
            ARMV4_5_MCR()
            mem_ap_write_atomic_u32()
            mem_ap_read_atomic_u32()
            mem_ap_read_buf_noincr()
                mem_ap_read()
                    calloc()
                    LOG_ERROR()
                    max_tar_block_size()
                    mem_ap_setup_csw()
                    mem_ap_setup_tar()
                    dap_queue_ap_read()
                    MEM_AP_REG_DRW()
                    mem_ap_update_tar_cache()
                        mem_ap_get_tar_increment()
                        max_tar_block_size()
                    dap_run()
                    mem_ap_read_tar()
                        dap_queue_ap_read()
                        MEM_AP_REG_TAR()
                        is_64bit_ap()
                        MEM_AP_REG_TAR64()
                        dap_run()
                    free()
            target_buffer_set_u32()
        aarch64_read_cpu_memory_slow()
            target_to_armv8()
            LOG_ERROR()
            armv8_reg_current()
            mem_ap_write_atomic_u32()
            armv8_opcode()
            ARMV8_MSR_GP()
            ARMV4_5_MCR()
            mem_ap_read_atomic_u32()
            target_buffer_set_u16()
                h_u16_to_le()
                h_u16_to_be()
            target_buffer_set_u32()
            target_buffer_set_u64()
        LOG_ERROR()
        armv8_dpm_handle_exception()
aarch64_remove_breakpoint()
    target_to_aarch64()
    LOG_WARNING()
    aarch64_unset_breakpoint()
        target_to_aarch64()
        LOG_WARNING()
        LOG_DEBUG()
        aarch64_dap_write_memap_register_u32()
        armv8_cache_d_inner_flush_virt()
        target_write_memory()
        armv8_cache_i_inner_inval_virt()
aarch64_remove_watchpoint()
    target_to_aarch64()
    aarch64_unset_watchpoint()
        target_to_aarch64()
        LOG_WARNING()
        LOG_DEBUG()
        aarch64_dap_write_memap_register_u32()
aarch64_resume()
    target_to_armv8()
    LOG_TARGET_ERROR()
    aarch64_prep_restart_smp()
        foreach_smp_target()
        target_was_examined()
        aarch64_restore_one()
            target_to_armv8()
            LOG_DEBUG()
            target_name()
            target_free_all_working_areas()
                target_free_all_working_areas_restore()
                    LOG_DEBUG()
                    target_restore_working_area()
                        target_write_memory()
                        LOG_ERROR()
                    target_merge_working_areas()
                        assert()
                        free()
                    print_wa_layout()
                free()
            buf_get_u64()
            LOG_ERROR()
            buf_set_u64()
            aarch64_restore_system_control_reg()
                target_to_aarch64()
                target_to_armv8()
                ARMV8_MSR_GP()
                ARMV4_5_MCR()
                LOG_ERROR()
                armv8_mode_name()
                armv8_dpm_modeswitch()
            aarch64_restore_context()
                target_to_armv8()
                LOG_DEBUG()
                target_name()
                armv8_dpm_write_dirty_registers()
                    dpmv8_add_breakpoint()
                    dpmv8_maybe_update_bpwp()
                        LOG_ERROR()
                        target_name()
                    armv8_dpm_modeswitch()
                    armv8_curel_from_core_mode()
                    dpmv8_write_reg()
                register_cache_invalidate()
        aarch64_prepare_restart_one()
            target_to_armv8()
            LOG_DEBUG()
            target_name()
            mem_ap_read_atomic_u32()
            LOG_ERROR()
            arm_cti_ack_events()
            CTI_TRIG()
            arm_cti_ungate_channel()
            arm_cti_gate_channel()
                arm_cti_mod_reg_bits()
                CTI_CHNL()
            mem_ap_write_atomic_u32()
        LOG_ERROR()
        target_name()
    aarch64_restore_one()
    aarch64_restart_one()
        LOG_DEBUG()
        target_name()
        aarch64_prepare_restart_one()
        aarch64_do_restart_one()
            target_to_armv8()
            LOG_DEBUG()
            target_name()
            arm_cti_pulse_channel()
            timeval_ms()
            aarch64_check_state_one()
            LOG_ERROR()
    timeval_ms()
    foreach_smp_target()
    target_was_examined()
    aarch64_check_state_one()
    target_call_event_callbacks()
    LOG_ERROR()
    target_name()
    aarch64_do_restart_one()
    LOG_DEBUG()
aarch64_step()
    target_to_armv8()
    target_to_aarch64()
    LOG_TARGET_ERROR()
    mem_ap_read_atomic_u32()
    mem_ap_write_atomic_u32()
    aarch64_set_dscr_bits()
    arm_cti_gate_channel()
    aarch64_step_restart_smp()
        LOG_DEBUG()
        target_name()
        aarch64_prep_restart_smp()
        aarch64_do_restart_one()
        timeval_ms()
        foreach_smp_target()
        target_was_examined()
        aarch64_check_state_one()
        target_call_event_callbacks()
        LOG_ERROR()
    LOG_ERROR()
    LOG_DEBUG()
    aarch64_restore_one()
    aarch64_restart_one()
    target_call_event_callbacks()
    timeval_ms()
    aarch64_check_state_one()
    target_name()
    aarch64_halt_one()
    aarch64_poll()
aarch64_target_create()
    adiv5_verify_config()
    calloc()
    LOG_ERROR()
    aarch64_init_arch_info()
        aarch64_post_debug_entry()
            target_to_aarch64()
            ARMV8_MRS()
            ARMV4_5_MRC()
            LOG_ERROR()
            armv8_mode_name()
            armv8_dpm_modeswitch()
            LOG_DEBUG()
            armv8_identify_cache()
                armv8_curel_from_core_mode()
                armv8_dpm_modeswitch()
                armv8_opcode()
                LOG_DEBUG()
                get_cache_info()
                    armv8_opcode()
                decode_cache_reg()
                armv8_handle_inner_cache_info_command()
                    command_print()
                armv8_flush_all_data()
                    target_to_armv8()
                    LOG_ERROR()
                    foreach_smp_target()
                    LOG_INFO()
            armv8_read_mpidr()
                armv8_curel_from_core_mode()
                armv8_dpm_modeswitch()
                armv8_opcode()
                LOG_INFO()
                target_name()
                LOG_ERROR()
        aarch64_read_phys_memory()
            aarch64_mmu_modify()
            aarch64_read_cpu_memory()
        armv8_init_arch_info()
            armv8_setup_semihosting()
        target_register_timer_callback()
            malloc()
            timeval_ms()
            MIN()
        aarch64_handle_target_request()
            target_to_armv8()
            target_was_examined()
            mem_ap_read_atomic_u32()
            target_request()
                assert()
                target_charmsg()
                    LOG_USER_N()
                trace_point()
                    LOG_DEBUG()
                target_asciimsg()
                    malloc()
                    DIV_ROUND_UP()
                    LOG_DEBUG()
                    command_output_text()
                target_hexmsg()
                    malloc()
                    DIV_ROUND_UP()
                    LOG_DEBUG()
                    snprintf()
                    le_to_h_u32()
                    le_to_h_u16()
                    command_output_text()
                    free()
                LOG_ERROR()
aarch64_virt2phys()
    armv8_mmu_translate_va_pa()
        target_to_armv8()
        target_to_arm()
        LOG_TARGET_ERROR()
        armv8_curel_from_core_mode()
        ARMV8_SYS()
        armv8_dpm_modeswitch()
        ARMV8_MRS()
        LOG_ERROR()
        LOG_USER()
aarch64_write_memory()
    aarch64_mmu()
    aarch64_mmu_modify()
    aarch64_write_cpu_memory()
        target_to_armv8()
        LOG_TARGET_ERROR()
        armv8_reg_current()
        mem_ap_read_atomic_u32()
        mem_ap_write_atomic_u32()
        ARMV8_MRS()
        ARMV4_5_MRC()
        aarch64_write_cpu_memory_fast()
            target_to_armv8()
            armv8_reg_current()
            mem_ap_write_atomic_u32()
            mem_ap_write_buf_noincr()
                mem_ap_write()
                    max_tar_block_size()
                    mem_ap_setup_csw()
                    mem_ap_setup_tar()
                    dap_queue_ap_write()
                    MEM_AP_REG_DRW()
                    mem_ap_update_tar_cache()
                    dap_run()
                    mem_ap_read_tar()
                    LOG_ERROR()
        aarch64_write_cpu_memory_slow()
            target_to_armv8()
            LOG_ERROR()
            armv8_reg_current()
            mem_ap_write_atomic_u32()
            target_buffer_get_u16()
            target_buffer_get_u32()
            target_buffer_get_u64()
            ARMV8_MRS()
            ARMV4_5_MRC()
            armv8_opcode()
        LOG_ERROR()
        armv8_dpm_handle_exception()
aarch64_write_phys_memory()
    aarch64_mmu_modify()
    aarch64_write_cpu_memory()
adapter_halt()
    target_to_adapter()
    LOG_DEBUG()
    LOG_WARNING()
adapter_init_target()
    LOG_DEBUG()
    armv7m_build_reg_cache()
        target_to_armv7m()
        register_get_last_cache_p()
        malloc()
        calloc()
        LOG_ERROR()
    arm_semihosting_init()
adapter_poll()
    target_to_adapter()
    target_to_armv7m()
    LOG_ERROR()
    adapter_debug_entry()
        target_to_adapter()
        target_to_armv7m()
        target_read_u32()
        adapter_load_context()
            target_to_armv7m()
        buf_get_u32()
        LOG_DEBUG()
        arm_mode_name()
            ARRAY_SIZE()
            LOG_ERROR()
        target_state_name()
            nvp_value2name()
            LOG_ERROR()
            target_was_examined()
    target_call_event_callbacks()
    arm_semihosting()
    LOG_DEBUG()
    buf_get_u32()
adapter_read_memory()
    target_to_adapter()
    LOG_DEBUG()
adapter_resume()
    target_to_adapter()
    target_to_armv7m()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    target_free_all_working_areas()
    cortex_m_enable_breakpoints()
        cortex_m_set_breakpoint()
            target_to_cm()
            LOG_TARGET_WARNING()
            LOG_TARGET_ERROR()
            breakpoint_hw_set()
            target_write_u32()
            LOG_TARGET_DEBUG()
            cortex_m_enable_fpb()
                target_write_u32()
                target_read_u32()
            buf_set_u32()
            ARMV5_T_BKPT()
            target_read_memory()
            target_write_memory()
    cortex_m_enable_watchpoints()
        cortex_m_set_watchpoint()
            target_to_cm()
            LOG_TARGET_ERROR()
            watchpoint_set()
            target_write_u32()
            LOG_TARGET_DEBUG()
    buf_set_u32()
    breakpoint_find()
    buf_get_u32()
    armv7m_maybe_skip_bkpt_inst()
        target_to_armv7m()
        buf_get_u32()
        target_read_u16()
        buf_set_u32()
        LOG_DEBUG()
    target_write_u32()
    armv7m_restore_context()
        target_to_armv7m()
        LOG_DEBUG()
    register_cache_invalidate()
    cortex_m_unset_breakpoint()
        target_to_cm()
        LOG_TARGET_WARNING()
        LOG_TARGET_DEBUG()
        target_write_u32()
        target_write_memory()
    cortex_m_set_breakpoint()
    target_call_event_callbacks()
adapter_step()
    target_to_adapter()
    target_to_armv7m()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    buf_set_u32()
    buf_get_u32()
    breakpoint_find()
    cortex_m_unset_breakpoint()
    armv7m_maybe_skip_bkpt_inst()
    armv7m_restore_context()
    target_write_u32()
    target_call_event_callbacks()
    register_cache_invalidate()
    cortex_m_set_breakpoint()
    adapter_debug_entry()
    LOG_INFO()
adapter_target_create()
    LOG_DEBUG()
    LOG_ERROR()
    calloc()
    adapter_init_arch_info()
        LOG_DEBUG()
        armv7m_init_arch_info()
            armv7m_setup_semihosting()
            armv7m_read_core_reg()
                target_to_armv7m()
                assert()
                armv7m_map_reg_packing()
                armv7m_read_core_reg()
                buf_cpy()
                armv7m_map_id_to_regsel()
                    LOG_ERROR()
                buf_set_u32()
                buf_get_u64()
                LOG_DEBUG()
            armv7m_write_core_reg()
                target_to_armv7m()
                assert()
                buf_cpy()
                armv7m_map_reg_packing()
                armv7m_read_core_reg()
                armv7m_map_id_to_regsel()
                buf_get_u32()
                buf_get_u64()
                LOG_DEBUG()
                LOG_ERROR()
            arm_init_arch_info()
                arm_set_cpsr()
                    buf_set_u32()
                    arm_mode_to_number()
                        LOG_ERROR()
                    LOG_WARNING()
                    LOG_ERROR()
                    LOG_DEBUG()
                    arm_mode_name()
                arm_full_context()
                    target_to_arm()
                    armv4_5_get_core_reg()
                        LOG_TARGET_ERROR()
                arm_default_mrc()
                    LOG_ERROR()
                    target_type_name()
                arm_default_mcr()
                    LOG_ERROR()
                    target_type_name()
        adapter_load_core_reg_u32()
            target_to_adapter()
        adapter_store_core_reg_u32()
            target_to_adapter()
        adapter_examine_debug_reason()
        target_register_timer_callback()
        hl_handle_target_request()
            target_was_examined()
            target_to_adapter()
            hl_dcc_read()
                LOG_DEBUG()
            target_request()
adapter_write_memory()
    target_to_adapter()
    LOG_DEBUG()
add_current_thread()
aduc702x_erase()
    aduc702x_set_write_enable()
        target_write_u16()
            target_was_examined()
            LOG_ERROR()
            LOG_DEBUG()
            target_buffer_set_u16()
            target_write_memory()
    LOG_DEBUG()
    target_write_u16()
    target_write_u8()
    aduc702x_check_flash_completion()
        timeval_ms()
        target_read_u8()
        alive_sleep()
    LOG_ERROR()
aduc702x_probe()
aduc702x_write()
    aduc702x_write_block()
        LOG_ERROR()
        target_alloc_working_area()
        LOG_WARNING()
        target_buffer_set_u32_array()
        ARRAY_SIZE()
        target_write_buffer()
        target_alloc_working_area_try()
        target_free_working_area()
            target_free_working_area_restore()
                target_restore_working_area()
                LOG_DEBUG()
                target_merge_working_areas()
                print_wa_layout()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        buf_get_u32()
        destroy_reg_param()
    LOG_WARNING()
    aduc702x_write_single()
        aduc702x_set_write_enable()
        target_write_u16()
        target_read_u8()
        target_write_u8()
        aduc702x_check_flash_completion()
        LOG_ERROR()
        LOG_DEBUG()
    LOG_ERROR()
aducm360_erase()
    aducm360_mass_erase()
        target_read_u32()
        aducm360_set_write_enable()
            target_read_u32()
            target_write_u32()
        target_write_u32()
        aducm360_check_flash_completion()
            timeval_ms()
            target_read_u32()
            alive_sleep()
        LOG_ERROR()
    aducm360_page_erase()
        target_read_u32()
        aducm360_set_write_enable()
        target_write_u32()
        aducm360_check_flash_completion()
        LOG_ERROR()
aducm360_probe()
aducm360_write()
    aducm360_write_block()
        aducm360_write_block_sync()
            LOG_DEBUG()
            LOG_ERROR()
            target_alloc_working_area()
            LOG_WARNING()
            target_buffer_set_u32_array()
            ARRAY_SIZE()
            target_write_buffer()
            target_alloc_working_area_try()
            target_free_working_area()
            init_reg_param()
            buf_set_u32()
            target_run_algorithm()
            buf_get_u32()
            destroy_reg_param()
        aducm360_write_block_async()
            LOG_DEBUG()
            LOG_ERROR()
            target_alloc_working_area()
            LOG_WARNING()
            target_buffer_set_u32_array()
            ARRAY_SIZE()
            target_write_buffer()
            target_alloc_working_area_try()
            target_free_working_area()
            init_reg_param()
            buf_set_u32()
            target_run_flash_async_algorithm()
                assert()
                IS_PWR_OF_2()
                target_write_u32()
                target_start_algorithm()
                    target_was_examined()
                    LOG_ERROR()
                    target_type_name()
                LOG_ERROR()
                target_read_u32()
                LOG_DEBUG()
                IS_ALIGNED()
                alive_sleep()
                target_write_buffer()
                keep_alive()
                target_wait_algorithm()
                    LOG_ERROR()
                    target_type_name()
            buf_get_u32()
            destroy_reg_param()
        LOG_ERROR()
    LOG_WARNING()
    aducm360_write_modified()
        LOG_DEBUG()
        aducm360_set_write_enable()
        target_read_u32()
        target_write_u32()
    LOG_ERROR()
am335xgpio_blink()
    is_gpio_config_valid()
    set_gpio_value()
        AM335XGPIO_SET_HIGH()
        AM335XGPIO_SET_LOW()
        AM335XGPIO_SET_INPUT()
        AM335XGPIO_SET_OUTPUT()
am335xgpio_init()
    LOG_INFO()
    adapter_gpio_get_config()
    transport_is_jtag()
    am335xgpio_jtag_mode_possible()
        is_gpio_config_valid()
    LOG_ERROR()
    transport_is_swd()
    am335xgpio_swd_mode_possible()
        is_gpio_config_valid()
    open()
    LOG_DEBUG()
    strerror()
    mmap()
    sysconf()
    am335xgpio_munmap()
        munmap()
        sysconf()
        LOG_ERROR()
        strerror()
    close()
    initialize_gpio()
        is_gpio_config_valid()
        get_gpio_mode()
            AM335XGPIO_READ_REG()
            BIT()
        LOG_DEBUG()
        adapter_gpio_get_name()
        get_gpio_mode_name()
        LOG_WARNING()
        set_gpio_value()
        AM335XGPIO_SET_INPUT()
        AM335XGPIO_SET_OUTPUT()
am335xgpio_khz()
    LOG_DEBUG()
am335xgpio_quit()
    transport_is_jtag()
    restore_gpio()
        is_gpio_config_valid()
        AM335XGPIO_SET_INPUT()
        AM335XGPIO_SET_LOW()
        AM335XGPIO_SET_OUTPUT()
        AM335XGPIO_SET_HIGH()
    transport_is_swd()
    AM335XGPIO_SET_INPUT()
    am335xgpio_munmap()
am335xgpio_read()
    get_gpio_value()
        AM335XGPIO_READ_REG()
am335xgpio_reset()
    is_gpio_config_valid()
    set_gpio_value()
    LOG_DEBUG()
am335xgpio_speed()
am335xgpio_speed_div()
am335xgpio_swd_write()
    set_gpio_value()
    asm()
am335xgpio_swdio_drive()
    is_gpio_config_valid()
    set_gpio_value()
    AM335XGPIO_SET_OUTPUT()
    AM335XGPIO_SET_INPUT()
am335xgpio_swdio_read()
    get_gpio_value()
am335xgpio_write()
    set_gpio_value()
    asm()
ambiqmicro_probe()
    LOG_INFO()
    ambiqmicro_read_part_info()
        target_read_u32()
        LOG_ERROR()
        LOG_DEBUG()
        LOG_INFO()
        ARRAY_SIZE()
    free()
    malloc()
ambiqmicro_protect()
    LOG_INFO()
    LOG_ERROR()
ambiqmicro_protect_check()
    LOG_ERROR()
ambiqmicro_write()
    ambiqmicro_write_block()
        LOG_ERROR()
        LOG_INFO()
        target_write_u32()
        CHECK_STATUS()
        target_write_buffer()
        LOG_DEBUG()
        ambiqmicro_exec_command()
            target_resume()
            CHECK_STATUS()
            target_poll()
                target_was_examined()
                timeval_ms()
                LOG_INFO()
                target_call_event_callbacks()
            alive_sleep()
            LOG_DEBUG()
            LOG_ERROR()
            check_flash_status()
                target_read_u32()
                LOG_DEBUG()
                LOG_ERROR()
    LOG_ERROR()
angie_execute_queue()
    angie_queue_scan()
        jtag_scan_size()
        DIV_ROUND_UP()
        jtag_scan_type()
        calloc()
        jtag_build_buffer()
            jtag_scan_size()
            calloc()
            DIV_ROUND_UP()
            LOG_DEBUG_IO()
            LOG_LEVEL_IS()
            buf_to_hex_str()
                DIV_ROUND_UP()
                calloc()
            LOG_DEBUG()
            free()
            buf_set_buf()
                sb()
                lb()
        angie_set_end_state()
            tap_is_state_stable()
            tap_set_end_state()
            LOG_ERROR()
            tap_state_name()
        tap_get_tms_path_len()
            tap_move_ndx()
                LOG_ERROR()
                tap_state_name()
                exit()
        tap_get_state()
        tap_get_end_state()
        tap_get_tms_path()
            tap_move_ndx()
        tap_set_state()
        tap_set_end_state()
        angie_append_scan_cmd()
            calloc()
            LOG_ERROR()
            free()
            DIV_ROUND_UP()
            angie_allocate_payload()
                calloc()
                LOG_ERROR()
                free()
            angie_append_queue()
                angie_get_queue_size()
                angie_execute_queued_commands()
                    LOG_LEVEL_IS()
                    angie_dump_queue()
                        LOG_DEBUG_IO()
                        angie_dump_command()
                            sprintf()
                            LOG_DEBUG_IO()
                            angie_cmd_id_string()
                    jtag_libusb_bulk_write()
                        libusb_bulk_transfer()
                        LOG_ERROR()
                        libusb_error_name()
                        jtag_libusb_error()
                angie_post_process_queue()
                    angie_post_process_scan()
                        jtag_scan_type()
                        jtag_read_buffer()
                            buf_set_buf()
                            malloc()
                            DIV_ROUND_UP()
                            LOG_LEVEL_IS()
                            buf_to_hex_str()
                            LOG_DEBUG()
                            free()
                            buf_cpy()
                        LOG_ERROR()
                    LOG_ERROR()
                angie_clear_queue()
                    free()
        free()
    angie_queue_tlr_reset()
        angie_append_clock_tms_cmd()
            calloc()
            LOG_ERROR()
            angie_allocate_payload()
            free()
            angie_append_queue()
        tap_set_state()
    angie_queue_runtest()
        tap_get_state()
        angie_set_end_state()
        angie_queue_statemove()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path()
            tap_get_tms_path_len()
            angie_append_clock_tms_cmd()
            tap_set_state()
        angie_append_clock_tck_cmd()
            calloc()
            LOG_ERROR()
            angie_allocate_payload()
            free()
            angie_append_queue()
        tap_set_end_state()
    angie_queue_pathmove()
        tap_state_transition()
            LOG_ERROR()
            exit()
        tap_get_state()
        buf_set_u32()
        LOG_ERROR()
        tap_state_name()
        tap_set_state()
        LOG_INFO()
        angie_append_clock_tms_cmd()
    angie_queue_sleep()
        angie_append_sleep_cmd()
            calloc()
            LOG_ERROR()
            angie_allocate_payload()
            free()
            angie_append_queue()
    angie_queue_stableclocks()
        tap_is_state_stable()
        tap_get_state()
        LOG_ERROR()
        angie_append_set_signals_cmd()
            calloc()
            LOG_ERROR()
            angie_allocate_payload()
            free()
            angie_append_queue()
        angie_append_clock_tck_cmd()
    LOG_ERROR()
    angie_execute_queued_commands()
    angie_post_process_queue()
    angie_clear_queue()
angie_init()
    calloc()
    LOG_ERROR()
    angie_usb_open()
        jtag_libusb_open()
            adapter_get_required_serial()
            libusb_init()
            libusb_get_device_list()
            libusb_get_device_descriptor()
            jtag_libusb_match_ids()
            adapter_usb_get_location()
            jtag_libusb_location_equal()
                libusb_get_port_numbers()
                LOG_WARNING()
                libusb_get_bus_number()
                adapter_usb_location_equal()
                    adapter_usb_get_location()
                    strndup()
                    strnlen()
                    strtok()
                    LOG_WARNING()
                    atoi()
                    free()
            libusb_open()
            LOG_ERROR()
            libusb_error_name()
            jtag_libusb_match_serial()
                string_descriptor_equal()
                    libusb_get_string_descriptor_ascii()
                    LOG_ERROR()
                    strncmp()
                    LOG_DEBUG()
                strcmp()
                LOG_DEBUG()
                free()
            libusb_close()
            libusb_free_device_list()
            LOG_INFO()
            libusb_exit()
    free()
    libusb_get_string_descriptor_ascii()
    strncmp()
    LOG_INFO()
    libusb_claim_interface()
    angie_load_firmware_and_renumerate()
        angie_load_firmware()
            angie_cpu_reset()
                jtag_libusb_control_transfer()
                    libusb_control_transfer()
                    LOG_ERROR()
                    libusb_error_name()
                    jtag_libusb_error()
            LOG_ERROR()
            image_open()
            angie_write_firmware_section()
                LOG_DEBUG()
                image_read_section()
                jtag_libusb_control_transfer()
            image_close()
        angie_usb_close()
            libusb_release_interface()
            jtag_libusb_close()
                libusb_close()
                libusb_exit()
        usleep()
        angie_usb_open()
    angie_quit()
        angie_usb_close()
        free()
    angie_load_bitstream()
        jtag_libusb_control_transfer()
        LOG_ERROR()
        fopen()
        fseek()
        ftell()
        malloc()
        fclose()
        fread()
        free()
        jtag_libusb_bulk_write()
        libusb_strerror()
        LOG_INFO()
    jtag_libusb_choose_interface()
        libusb_get_device()
        libusb_get_config_descriptor()
        libusb_free_config_descriptor()
    angie_clear_queue()
    angie_append_test_cmd()
        calloc()
        LOG_ERROR()
        angie_allocate_payload()
        free()
        angie_append_queue()
    angie_execute_queued_commands()
    jtag_libusb_bulk_write()
    angie_append_get_signals_cmd()
        calloc()
        LOG_ERROR()
        angie_allocate_payload()
        free()
        angie_append_queue()
    angie_dump_signal_states()
        LOG_INFO()
angie_reset()
    tap_set_state()
    angie_append_set_signals_cmd()
    angie_clear_queue()
    angie_execute_queued_commands()
angie_speed()
    angie_khz()
        LOG_ERROR()
        angie_calculate_delay()
            ceilf()
        LOG_DEBUG_IO()
        angie_calculate_frequency()
            roundf()
        angie_append_configure_tck_cmd()
            calloc()
            LOG_ERROR()
            angie_allocate_payload()
            free()
            angie_append_queue()
angie_speed_div()
arc_add_auxreg_actionpoint()
    target_to_arc()
    LOG_ERROR()
    arc_configure_actionpoint()
        target_to_arc()
        LOG_ERROR()
        snprintf()
        CHECK_RETVAL()
        arc_set_register_value()
            LOG_DEBUG()
            LOG_ERROR()
            arc_reg_get_by_name()
                strcmp()
            buf_set_u32()
            CHECK_RETVAL()
arc_add_breakpoint()
    arc_set_breakpoint()
        LOG_WARNING()
        LOG_DEBUG()
        CHECK_RETVAL()
        target_read_buffer()
        arc_write_instruction_u32()
            target_was_examined()
            LOG_ERROR()
            LOG_DEBUG()
            arc_h_u32_to_me()
            h_u32_to_be()
            CHECK_RETVAL()
            target_write_buffer()
        arc_read_instruction_u32()
            target_was_examined()
            LOG_ERROR()
            CHECK_RETVAL()
            target_read_buffer()
            arc_me_to_h_u32()
            be_to_h_u32()
            LOG_DEBUG()
        LOG_ERROR()
        target_write_u16()
        target_read_u16()
        target_to_arc()
        arc_configure_actionpoint()
        breakpoint_hw_set()
        arc_cache_invalidate()
            CHECK_RETVAL()
            arc_icache_invalidate()
                target_to_arc()
                LOG_DEBUG()
                CHECK_RETVAL()
                arc_jtag_write_aux_reg_one()
                    arc_jtag_write_aux_reg()
                        arc_jtag_write_registers()
                            LOG_DEBUG()
                            LOG_ERROR()
                            arc_jtag_enque_reset_transaction()
                                arc_jtag_enque_set_transaction()
                                    assert()
                                    arc_jtag_enque_write_ir()
                                        assert()
                                        buf_get_u32()
                                        buf_set_u32()
                                        jtag_add_ir_scan()
                                    buf_set_u32()
                                    jtag_add_dr_scan()
                            arc_jtag_enque_set_transaction()
                            arc_jtag_enque_register_rw()
                                arc_jtag_enque_write_ir()
                                arc_jtag_enque_write_dr()
                                    assert()
                                    buf_set_u32()
                                    jtag_add_dr_scan()
                                arc_jtag_enque_read_dr()
                                    assert()
                                    jtag_add_dr_scan()
                                arc_jtag_enque_reset_transaction()
                            jtag_execute_queue()
            arc_dcache_invalidate()
                target_to_arc()
                LOG_DEBUG()
                CHECK_RETVAL()
                arc_jtag_read_aux_reg_one()
                    arc_jtag_read_aux_reg()
                        arc_jtag_read_registers()
                            assert()
                            LOG_DEBUG()
                            LOG_ERROR()
                            arc_jtag_enque_reset_transaction()
                            arc_jtag_enque_set_transaction()
                            calloc()
                            arc_jtag_enque_register_rw()
                            jtag_execute_queue()
                            exit()
                            buf_get_u32()
                            free()
                arc_jtag_write_aux_reg_one()
            arc_l2cache_invalidate()
                target_to_arc()
                LOG_DEBUG()
                CHECK_RETVAL()
                arc_jtag_read_aux_reg_one()
                arc_jtag_write_aux_reg_one()
    LOG_TARGET_ERROR()
arc_add_watchpoint()
    LOG_TARGET_ERROR()
    CHECK_RETVAL()
    arc_set_watchpoint()
        target_to_arc()
        LOG_WARNING()
        LOG_ERROR()
        arc_configure_actionpoint()
        watchpoint_set()
        LOG_DEBUG()
arc_arch_state()
    CHECK_RETVAL()
    arc_get_register_value()
        LOG_DEBUG()
        arc_reg_get_by_name()
        CHECK_RETVAL()
        target_buffer_get_u32()
    LOG_DEBUG()
    target_state_name()
arc_assert_reset()
    target_to_arc()
    jtag_get_reset_config()
    LOG_DEBUG()
    target_state_name()
    target_has_event_action()
    target_handle_event()
    register_cache_invalidate()
    CHECK_RETVAL()
    target_resume()
    jtag_add_reset()
    jtag_add_sleep()
    target_halt()
        target_was_examined()
        LOG_ERROR()
        timeval_ms()
arc_deassert_reset()
    LOG_DEBUG()
    target_state_name()
    jtag_add_reset()
arc_deinit_target()
    target_to_arc()
    LOG_DEBUG()
    arc_free_reg_cache()
        free()
    list_for_each_entry_safe_reverse()
    free()
    list_first_entry()
    list_for_each_entry_safe()
    free_reg_desc()
        free()
arc_examine()
    target_to_arc()
    CHECK_RETVAL()
    arc_jtag_startup()
        assert()
        arc_jtag_enque_reset_transaction()
        jtag_execute_queue()
    target_was_examined()
    arc_jtag_status()
        assert()
        arc_jtag_enque_reset_transaction()
        arc_jtag_enque_status_read()
            assert()
            arc_jtag_enque_write_ir()
            arc_jtag_enque_read_dr()
        CHECK_RETVAL()
        jtag_execute_queue()
        buf_get_u32()
    arc_configure()
        LOG_DEBUG()
        arc_reg_get_by_name()
        CHECK_RETVAL()
        arc_configure_dccm()
            target_to_arc()
            CHECK_RETVAL()
            arc_reg_get_field()
                LOG_DEBUG()
                arc_reg_get_by_name()
                LOG_ERROR()
                strcmp()
                CHECK_RETVAL()
                buf_get_u32()
            arc_get_register_value()
            LOG_DEBUG()
        arc_configure_iccm()
            target_to_arc()
            CHECK_RETVAL()
            arc_reg_get_field()
            arc_get_register_value()
            LOG_DEBUG()
    target_set_examined()
arc_get_gdb_reg_list()
    assert()
    target_to_arc()
    calloc()
    LOG_ERROR()
    LOG_DEBUG()
arc_get_register()
    assert()
    target_to_arc()
    LOG_DEBUG()
    target_buffer_get_u32()
    LOG_ERROR()
    CHECK_RETVAL()
    arc_jtag_read_core_reg_one()
        arc_jtag_read_core_reg()
            arc_jtag_read_registers()
    arc_jtag_read_aux_reg_one()
    target_buffer_set_u32()
arc_halt()
    target_to_arc()
    LOG_DEBUG()
    target_state_name()
    LOG_WARNING()
    jtag_get_reset_config()
    jtag_get_srst()
    LOG_ERROR()
    CHECK_RETVAL()
    arc_jtag_read_aux_reg_one()
    arc_jtag_write_aux_reg_one()
    alive_sleep()
    target_call_event_callbacks()
    arc_get_register_value()
arc_hit_watchpoint()
    assert()
    CHECK_RETVAL()
    get_current_actionpoint()
        assert()
        CHECK_RETVAL()
        arc_reg_get_field()
        target_to_arc()
    LOG_WARNING()
arc_init_target()
    CHECK_RETVAL()
    arc_build_reg_cache()
        target_to_arc()
        register_get_last_cache_p()
        calloc()
        LOG_ERROR()
        list_empty()
        list_for_each_entry()
        CHECK_RETVAL()
        arc_init_reg()
            assert()
            target_to_arc()
        LOG_DEBUG()
        strcmp()
        assert()
        free()
    arc_build_bcr_reg_cache()
        target_to_arc()
        register_get_last_cache_p()
        malloc()
        calloc()
        LOG_ERROR()
        list_empty()
        list_for_each_entry()
        CHECK_RETVAL()
        arc_init_reg()
        LOG_DEBUG()
        assert()
        free()
arc_mem_read()
    LOG_DEBUG()
    LOG_WARNING()
    calloc()
    LOG_ERROR()
    free()
    arc_mem_read_block()
        target_to_arc()
        LOG_DEBUG()
        assert()
        CHECK_RETVAL()
        arc_cache_flush()
            CHECK_RETVAL()
            arc_dcache_flush()
                target_to_arc()
                LOG_DEBUG()
                CHECK_RETVAL()
                arc_jtag_read_aux_reg_one()
                arc_jtag_write_aux_reg_one()
            arc_l2cache_flush()
                target_to_arc()
                LOG_DEBUG()
                CHECK_RETVAL()
                arc_jtag_write_aux_reg_one()
                arc_jtag_read_aux_reg_one()
        arc_jtag_read_memory()
            assert()
            LOG_DEBUG()
            calloc()
            arc_jtag_enque_reset_transaction()
            arc_jtag_enque_set_transaction()
            arc_jtag_enque_write_ir()
            arc_jtag_enque_write_dr()
            arc_jtag_enque_read_dr()
            jtag_execute_queue()
            LOG_ERROR()
            exit()
            buf_get_u32()
            free()
        arc_mem_is_slow_memory()
            assert()
    target_buffer_set_u32_array()
    memcpy()
arc_mem_write()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    calloc()
    LOG_ERROR()
    target_buffer_get_u32_array()
        target_buffer_get_u32()
    target_buffer_get_u16_array()
        target_buffer_get_u16()
    arc_mem_write_block32()
        target_to_arc()
        LOG_DEBUG()
        assert()
        CHECK_RETVAL()
        arc_cache_flush()
        arc_jtag_write_memory()
            assert()
            LOG_DEBUG()
            arc_jtag_enque_reset_transaction()
            arc_jtag_enque_set_transaction()
            arc_jtag_enque_write_ir()
            arc_jtag_enque_write_dr()
            jtag_execute_queue()
        arc_cache_invalidate()
    arc_mem_write_block16()
        target_to_arc()
        LOG_DEBUG()
        assert()
        CHECK_RETVAL()
        arc_cache_flush()
        arc_mem_is_slow_memory()
        arc_jtag_read_memory()
        target_buffer_set_u32()
        target_buffer_set_u16()
        memcpy()
        target_buffer_get_u32()
        arc_jtag_write_memory()
        arc_cache_invalidate()
    arc_mem_write_block8()
        target_to_arc()
        LOG_DEBUG()
        CHECK_RETVAL()
        arc_cache_flush()
        arc_jtag_read_memory()
        arc_mem_is_slow_memory()
        target_buffer_set_u32()
        memcpy()
        target_buffer_get_u32()
        arc_jtag_write_memory()
        arc_cache_invalidate()
    free()
arc_poll()
    target_to_arc()
    CHECK_RETVAL()
    arc_jtag_status()
    LOG_WARNING()
    arc_get_register_value()
    LOG_DEBUG()
    arc_debug_entry()
        CHECK_RETVAL()
        arc_save_context()
            target_to_arc()
            LOG_DEBUG()
            assert()
            MIN()
            malloc()
            LOG_ERROR()
            exit()
            memset()
            arc_jtag_read_core_reg()
            arc_jtag_read_aux_reg()
            target_buffer_set_u32()
            free()
        arc_reset_caches_states()
            target_to_arc()
            LOG_DEBUG()
        arc_examine_debug_reason()
            CHECK_RETVAL()
            arc_reg_get_field()
            get_current_actionpoint()
            LOG_WARNING()
    target_call_event_callbacks()
arc_resume()
    target_to_arc()
    LOG_DEBUG()
    CHECK_RETVAL()
    arc_reset_caches_states()
    LOG_TARGET_ERROR()
    target_buffer_set_u32()
    target_buffer_get_u32()
    arc_restore_context()
        target_to_arc()
        LOG_DEBUG()
        assert()
        malloc()
        LOG_ERROR()
        exit()
        memset()
        target_buffer_get_u32()
        arc_jtag_write_core_reg()
            arc_jtag_write_registers()
        arc_jtag_write_aux_reg()
        free()
    arc_jtag_write_aux_reg_one()
    arc_enable_interrupts()
        target_to_arc()
        CHECK_RETVAL()
        arc_jtag_read_aux_reg_one()
        arc_jtag_write_aux_reg_one()
        LOG_DEBUG()
    arc_jtag_read_aux_reg_one()
    register_cache_invalidate()
    target_call_event_callbacks()
arc_set_register()
    target_buffer_get_u32()
    LOG_ERROR()
    target_buffer_set_u32()
    LOG_DEBUG()
arc_step()
    target_to_arc()
    LOG_TARGET_ERROR()
    buf_set_u32()
    LOG_DEBUG()
    buf_get_u32()
    breakpoint_find()
    CHECK_RETVAL()
    arc_unset_breakpoint()
        LOG_WARNING()
        LOG_DEBUG()
        CHECK_RETVAL()
        arc_read_instruction_u32()
        target_write_buffer()
        target_read_u16()
        LOG_ERROR()
        target_to_arc()
        arc_configure_actionpoint()
        arc_cache_invalidate()
    arc_restore_context()
    target_call_event_callbacks()
    arc_enable_interrupts()
    arc_config_step()
        target_to_arc()
        CHECK_RETVAL()
        arc_jtag_read_aux_reg_one()
        arc_jtag_write_aux_reg_one()
        LOG_DEBUG()
    alive_sleep()
    register_cache_invalidate()
    arc_set_breakpoint()
    arc_debug_entry()
arc_target_create()
    calloc()
    LOG_ERROR()
    LOG_DEBUG()
    CHECK_RETVAL()
    arc_init_arch_info()
        LOG_ERROR()
        arc_reset_caches_states()
        INIT_LIST_HEAD()
        calloc()
        ARRAY_SIZE()
        arc_reg_data_type_add()
            LOG_DEBUG()
            target_to_arc()
            assert()
            list_add_tail()
arch_state()
arch_state()
arm11_add_breakpoint()
    target_to_arm11()
    LOG_INFO()
    LOG_DEBUG()
arm11_arch_state()
    target_to_arm11()
    arm_arch_state()
        target_to_arm()
        LOG_ERROR()
        LOG_USER()
        debug_reason_name()
            nvp_value2name()
            LOG_ERROR()
        arm_mode_name()
        buf_get_u32()
    LOG_USER()
arm11_assert_reset()
    target_to_arm11()
    target_was_examined()
    jtag_get_reset_config()
    jtag_add_reset()
    LOG_WARNING()
    CHECK_RETVAL()
    arm11_sc7_set_vcr()
        arm11_sc7_run()
            arm11_add_debug_scan_n()
                JTAG_DEBUG()
                jtag_add_statemove()
                    LOG_DEBUG()
                    tap_state_name()
                    jtag_add_tlr()
                    tap_is_state_stable()
                    tap_get_tms_path()
                    tap_get_tms_path_len()
                    assert()
                    ARRAY_SIZE()
                    tap_state_transition()
                    jtag_add_pathmove()
                        tap_is_state_stable()
                        LOG_ERROR()
                        jtag_set_error()
                        jtag_checks()
                        interface_jtag_add_pathmove()
                            cmd_queue_alloc()
                            jtag_queue_command()
                arm11_add_ir()
                    buf_get_u32()
                    JTAG_DEBUG()
                    arm11_ir_to_string()
                    arm11_setup_field()
                    arm11_add_ir_scan_vc()
                        jtag_add_pathmove()
                        ARRAY_SIZE()
                        jtag_add_ir_scan()
                arm11_setup_field()
                arm11_add_dr_scan_vc()
                    jtag_add_pathmove()
                    ARRAY_SIZE()
                    jtag_add_dr_scan()
                jtag_execute_queue_noclear()
                arm11_in_handler_scan_n()
                    LOG_ERROR()
                    jtag_set_error()
                jtag_execute_queue()
            arm11_add_ir()
            arm11_setup_field()
            JTAG_DEBUG()
            arm11_add_dr_scan_vc()
            ARRAY_SIZE()
            CHECK_RETVAL()
            jtag_execute_queue()
            timeval_ms()
            LOG_WARNING()
    target_has_event_action()
    target_handle_event()
    LOG_ERROR()
    target_name()
    register_cache_invalidate()
arm11_deassert_reset()
    target_to_arm11()
    jtag_add_reset()
    jtag_add_tlr()
    CHECK_RETVAL()
    arm11_poll()
        target_to_arm11()
        CHECK_RETVAL()
        arm11_check_init()
            CHECK_RETVAL()
            arm11_read_dscr()
                arm11_add_debug_scan_n()
                arm11_add_ir()
                arm11_setup_field()
                arm11_add_dr_scan_vc()
                CHECK_RETVAL()
                jtag_execute_queue()
                JTAG_DEBUG()
            LOG_DEBUG()
            arm11_write_dscr()
                arm11_add_debug_scan_n()
                arm11_add_ir()
                arm11_setup_field()
                arm11_add_dr_scan_vc()
                CHECK_RETVAL()
                jtag_execute_queue()
                JTAG_DEBUG()
            arm_dpm_report_dscr()
                DSCR_ENTRY()
            arm11_sc7_clear_vbw()
                malloc()
                arm11_sc7_run()
                free()
        LOG_DEBUG()
        arm11_debug_entry()
            arm_dpm_report_dscr()
            register_cache_invalidate()
            arm11_add_debug_scan_n()
            arm11_add_ir()
            arm11_setup_field()
            arm11_add_dr_scan_vc()
            ARRAY_SIZE()
            CHECK_RETVAL()
            arm11_write_dscr()
            arm11_run_instr_no_data1()
                arm11_run_instr_no_data()
                    arm11_add_ir()
                    arm11_add_debug_inst()
                        JTAG_DEBUG()
                        arm11_setup_field()
                        arm11_add_dr_scan_vc()
                        ARRAY_SIZE()
                    CHECK_RETVAL()
                    jtag_execute_queue()
                    timeval_ms()
                    LOG_WARNING()
            arm11_read_dscr()
            LOG_DEBUG()
            arm_dpm_read_current_registers()
                arm_dpm_read_reg()
                    ARMV4_5_MCR()
                    LOG_WARNING()
                    dpm_read_reg_u64()
                        ARMV4_5_VMOV()
                        ARMV4_5_MCR()
                        buf_set_u32()
                        LOG_DEBUG()
                    ARMV4_5_VMRS()
                    ARMV4_5_MRS()
                    buf_set_u32()
                    LOG_DEBUG()
                ARMV4_5_MRS()
                arm_set_cpsr()
                arm_reg_current()
            LOG_ERROR()
            arm11_run_instr_data_prepare()
                arm11_add_debug_scan_n()
            arm11_run_instr_data_from_core_via_r0()
                arm11_run_instr_no_data1()
                arm11_run_instr_data_from_core()
                    arm11_add_ir()
                    arm11_add_debug_inst()
                    arm11_setup_field()
                    arm11_add_dr_scan_vc()
                    ARRAY_SIZE()
                    CHECK_RETVAL()
                    jtag_execute_queue()
                    JTAG_DEBUG()
                    timeval_ms()
                    LOG_WARNING()
            arm11_run_instr_data_to_core_via_r0()
                arm11_run_instr_data_to_core1()
                    arm11_run_instr_data_to_core()
                        arm11_add_ir()
                        arm11_add_debug_inst()
                        arm11_setup_field()
                        arm11_add_dr_scan_vc()
                        ARRAY_SIZE()
                        CHECK_RETVAL()
                        jtag_execute_queue()
                        JTAG_DEBUG()
                        timeval_ms()
                        LOG_WARNING()
                arm11_run_instr_no_data1()
            ARMV4_5_MRC()
            arm_dpm_report_wfar()
            arm11_run_instr_data_finish()
                arm11_add_debug_scan_n()
        target_call_event_callbacks()
    LOG_WARNING()
    target_name()
    target_halt()
    arm11_sc7_set_vcr()
arm11_deinit_target()
    target_to_arm11()
    arm11_dpm_deinit()
        free()
        arm_free_reg_cache()
            free()
    free()
arm11_examine()
    target_to_arm11()
    arm11_add_ir()
    arm11_setup_field()
    arm11_add_dr_scan_vc()
    arm11_add_debug_scan_n()
    ARRAY_SIZE()
    CHECK_RETVAL()
    jtag_execute_queue()
    LOG_ERROR()
    LOG_INFO()
    LOG_DEBUG()
    target_was_examined()
    arm11_dpm_init()
        arm11_dpm_prepare()
            arm11_run_instr_data_prepare()
            dpm_to_arm11()
                container_of()
        arm11_dpm_finish()
            arm11_run_instr_data_finish()
            dpm_to_arm11()
        arm11_dpm_instr_write_data_dcc()
            arm11_run_instr_data_to_core()
            dpm_to_arm11()
        arm11_dpm_instr_write_data_r0()
            arm11_run_instr_data_to_core_via_r0()
            dpm_to_arm11()
        arm11_dpm_instr_read_data_dcc()
            arm11_run_instr_data_from_core()
            dpm_to_arm11()
        arm11_dpm_instr_read_data_r0()
            arm11_run_instr_data_from_core_via_r0()
            dpm_to_arm11()
        arm11_bpwp_enable()
            dpm_to_arm11()
        arm11_bpwp_disable()
            dpm_to_arm11()
        arm_dpm_setup()
            arm_dpm_full_context()
                target_to_arm()
                arm_dpm_modeswitch()
                    buf_get_u32()
                    ARMV4_5_MSR_GP()
                arm_dpm_read_reg()
            arm_dpm_read_core_reg()
                target_to_arm()
                dpm_mapmode()
                    LOG_WARNING()
                arm_dpm_modeswitch()
                arm_dpm_read_reg()
            arm_dpm_write_core_reg()
                target_to_arm()
                dpm_mapmode()
                arm_dpm_modeswitch()
                dpm_write_reg()
                    buf_get_u32()
                    ARMV4_5_MRC()
                    dpm_write_reg_u64()
                        buf_get_u32()
                        ARMV4_5_MRC()
                        ARMV4_5_VMOV()
                        LOG_DEBUG()
                    ARMV4_5_VMSR()
                    ARMV4_5_MSR_GP()
                    LOG_DEBUG()
            arm_build_reg_cache()
                ARRAY_SIZE()
                malloc()
                calloc()
                free()
            register_get_last_cache_p()
            dpm_mrc()
                target_to_arm()
                LOG_DEBUG()
                ARMV4_5_MRC()
            dpm_mcr()
                target_to_arm()
                LOG_DEBUG()
                ARMV4_5_MCR()
            dpm_add_breakpoint()
                target_to_arm()
                LOG_DEBUG()
                dpm_bpwp_setup()
                    LOG_ERROR()
                    LOG_DEBUG()
            dpm_remove_breakpoint()
                target_to_arm()
            dpm_add_watchpoint()
                target_to_arm()
                dpm_watchpoint_setup()
                    LOG_DEBUG()
                    dpm_bpwp_setup()
            dpm_remove_watchpoint()
                target_to_arm()
            calloc()
            arm_free_reg_cache()
            free()
            LOG_INFO()
            target_name()
        calloc()
        arm_dpm_initialize()
            LOG_WARNING()
            target_name()
        arm11_bpwp_flush()
            arm11_sc7_run()
    arm11_check_init()
    register_get_last_cache_p()
    etm_build_reg_cache()
        malloc()
        calloc()
        LOG_ERROR()
        etm_reg_add()
            LOG_ERROR()
        etm_get_reg()
            etm_read_reg()
                etm_read_reg_w_check()
                    assert()
                    LOG_ERROR()
                    LOG_DEBUG()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    buf_set_u32()
                    jtag_add_dr_scan()
                    jtag_add_dr_scan_check()
                        jtag_add_scan_check()
                        jtag_add_dr_scan()
            LOG_ERROR()
            jtag_execute_queue()
        buf_get_u32()
        LOG_WARNING()
        LOG_DEBUG()
        LOG_INFO()
        ARRAY_SIZE()
        strcmp()
        etb_build_reg_cache()
            malloc()
            calloc()
        free()
    etm_setup()
        target_to_arm()
        etm_reg_lookup()
            LOG_ERROR()
        etm_get_reg()
        buf_get_u32()
        buf_set_u32()
        etm_store_reg()
            etm_write_reg()
                LOG_ERROR()
                LOG_DEBUG()
                arm_jtag_scann()
                arm_jtag_set_instr()
                buf_set_u32()
                jtag_add_dr_scan()
            buf_get_u32()
        jtag_execute_queue()
        LOG_ERROR()
    target_set_examined()
arm11_halt()
    target_to_arm11()
    LOG_DEBUG()
    target_state_name()
    arm11_add_ir()
    CHECK_RETVAL()
    jtag_execute_queue()
    arm11_read_dscr()
    timeval_ms()
    LOG_WARNING()
    arm11_debug_entry()
    target_call_event_callbacks()
arm11_init_target()
arm11_read_memory()
    arm11_read_memory_inner()
        LOG_TARGET_ERROR()
        LOG_DEBUG()
        target_to_arm11()
        arm11_run_instr_data_prepare()
        arm11_run_instr_data_to_core1()
        CHECK_RETVAL()
        arm11_run_instr_no_data1()
        arm11_run_instr_data_from_core()
        memcpy()
        arm11_run_instr_data_finish()
arm11_remove_breakpoint()
    target_to_arm11()
arm11_resume()
    target_to_arm11()
    LOG_DEBUG()
    target_state_name()
    LOG_TARGET_ERROR()
    arm11_nextpc()
        buf_get_u32()
        buf_set_u32()
    CHECK_RETVAL()
    arm11_sc7_clear_vbw()
    target_free_all_working_areas()
    arm11_step()
        LOG_DEBUG()
        target_state_name()
        LOG_TARGET_ERROR()
        target_to_arm11()
        arm11_nextpc()
        CHECK_RETVAL()
        arm11_read_memory_word()
            arm11_run_instr_data_prepare()
            CHECK_RETVAL()
            arm11_run_instr_data_to_core1()
            arm11_run_instr_data_from_core()
            arm11_run_instr_data_finish()
        arm_simulate_step()
            target_to_arm()
            armv4_5_get_reg()
                buf_get_u32()
            armv4_5_set_reg()
                buf_set_u32()
            armv4_5_get_reg_mode()
                buf_get_u32()
                ARMV4_5_CORE_REG_MODE()
            armv4_5_set_reg_mode()
                buf_set_u32()
                ARMV4_5_CORE_REG_MODE()
            armv4_5_get_cpsr()
                buf_get_u32()
            armv4_5_get_mode()
            armv4_5_get_state()
            armv4_5_set_state()
            arm_simulate_step_core()
                target_read_u32()
                arm_evaluate_opcode()
                    memset()
                    evaluate_pld()
                        snprintf()
                        evaluate_unknown()
                            snprintf()
                    evaluate_srs()
                        snprintf()
                        evaluate_unknown()
                    evaluate_blx_imm()
                        snprintf()
                    evaluate_ldc_stc_mcrr_mrrc()
                        LOG_ERROR()
                        snprintf()
                        COND()
                    evaluate_cdp_mcr_mrc()
                        COND()
                        snprintf()
                    snprintf()
                    evaluate_mul_and_extra_ld_st()
                        snprintf()
                        COND()
                        evaluate_misc_load_store()
                            snprintf()
                            COND()
                    evaluate_misc_instr()
                        evaluate_mrs_msr()
                            snprintf()
                            COND()
                            ror()
                        snprintf()
                        COND()
                    evaluate_data_proc()
                        ror()
                        snprintf()
                        COND()
                    evaluate_mov_imm()
                        snprintf()
                        COND()
                    evaluate_mrs_msr()
                    evaluate_load_store()
                        snprintf()
                        COND()
                    evaluate_media()
                        sprintf()
                        strchr()
                        evaluate_p_add_sub()
                            sprintf()
                            COND()
                        COND()
                        evaluate_extend()
                            sprintf()
                            COND()
                    evaluate_ldm_stm()
                        snprintf()
                        COND()
                    evaluate_b_bl()
                        snprintf()
                        COND()
                    evaluate_swi()
                        snprintf()
                    LOG_ERROR()
                pass_condition()
                    LOG_ERROR()
                target_read_u16()
                thumb_evaluate_opcode()
                    memset()
                    evaluate_add_sub_thumb()
                        snprintf()
                    evaluate_shift_imm_thumb()
                        snprintf()
                    evaluate_data_proc_imm_thumb()
                        snprintf()
                    evaluate_data_proc_thumb()
                        snprintf()
                    evaluate_load_literal_thumb()
                        snprintf()
                        thumb_alignpc4()
                    evaluate_load_store_reg_thumb()
                        snprintf()
                    evaluate_load_store_imm_thumb()
                        snprintf()
                    evaluate_load_store_stack_thumb()
                        snprintf()
                    evaluate_add_sp_pc_thumb()
                        snprintf()
                    evaluate_adjust_stack_thumb()
                        snprintf()
                    evaluate_cb_thumb()
                        snprintf()
                    evaluate_extend_thumb()
                        snprintf()
                    evaluate_load_store_multiple_thumb()
                        snprintf()
                    evaluate_cps_thumb()
                        snprintf()
                    evaluate_byterev_thumb()
                        snprintf()
                    evaluate_breakpoint_thumb()
                        snprintf()
                    evaluate_ifthen_thumb()
                        snprintf()
                    evaluate_hint_thumb()
                        snprintf()
                    snprintf()
                    evaluate_cond_branch_thumb()
                        snprintf()
                    evaluate_b_bl_blx_thumb()
                        snprintf()
                    LOG_ERROR()
                thumb_pass_branch_condition()
                    pass_condition()
                arm_shifter_operand()
                    arm_shift()
                    LOG_ERROR()
                LOG_WARNING()
                arm_shift()
                LOG_ERROR()
                target_write_u32()
        arm11_sc7_run()
        ARRAY_SIZE()
        arm11_leave_debug_state()
            CHECK_RETVAL()
            arm11_read_dscr()
            LOG_ERROR()
            arm11_run_instr_data_prepare()
            arm11_run_instr_data_to_core_via_r0()
            arm11_run_instr_data_finish()
            arm_dpm_write_dirty_registers()
                dpm_add_breakpoint()
                dpm_maybe_update_bpwp()
                    LOG_ERROR()
                    target_name()
                arm_dpm_modeswitch()
                dpm_write_reg()
                dpm_write_pc_core_state()
                    buf_get_u32()
                    ARMV4_5_BX()
            arm11_bpwp_flush()
            register_cache_invalidate()
            arm11_write_dscr()
            arm11_add_debug_scan_n()
            arm11_add_ir()
            arm11_setup_field()
            arm11_add_dr_scan_vc()
            ARRAY_SIZE()
        arm11_add_ir()
        jtag_execute_queue()
        arm11_read_dscr()
        timeval_ms()
        LOG_WARNING()
        arm11_sc7_clear_vbw()
        arm11_debug_entry()
        target_call_event_callbacks()
    arm11_sc7_run()
    ARRAY_SIZE()
    arm11_sc7_set_vcr()
    arm11_leave_debug_state()
    arm11_add_ir()
    jtag_execute_queue()
    arm11_read_dscr()
    timeval_ms()
    LOG_WARNING()
    target_call_event_callbacks()
arm11_target_create()
    LOG_ERROR()
    calloc()
    arm_init_arch_info()
arm11_write_memory()
    arm11_write_memory_inner()
        LOG_TARGET_ERROR()
        LOG_DEBUG()
        target_to_arm11()
        arm11_run_instr_data_prepare()
        arm11_run_instr_data_to_core1()
        arm11_run_instr_no_data1()
        memcpy()
        arm11_run_instr_data_to_core()
        arm11_run_instr_data_to_core_noack()
            arm11_add_ir()
            arm11_add_debug_inst()
            arm11_run_instr_data_to_core_noack_inner()
                malloc()
                LOG_ERROR()
                jtag_add_dr_scan()
                ARRAY_SIZE()
                jtag_add_pathmove()
                jtag_execute_queue()
                free()
            arm11_setup_field()
            arm11_add_dr_scan_vc()
            ARRAY_SIZE()
            jtag_execute_queue()
            LOG_ERROR()
        arm11_run_instr_data_from_core()
        LOG_ERROR()
        arm11_run_instr_data_finish()
arm720_mmu()
    LOG_TARGET_ERROR()
    target_to_arm720()
arm720_virt2phys()
    target_to_arm720()
    armv4_5_mmu_translate_va()
        armv4_5_mmu_read_physical()
            LOG_TARGET_ERROR()
        target_buffer_get_u32()
        LOG_DEBUG()
        LOG_ERROR()
arm720t_arch_state()
    target_to_arm720()
    arm_arch_state()
    LOG_USER()
arm720t_deinit_target()
    arm7tdmi_deinit_target()
        arm7tdmi_free_reg_cache()
            target_to_arm()
            arm_free_reg_cache()
arm720t_init_target()
    arm7tdmi_init_target()
        arm7tdmi_build_reg_cache()
            register_get_last_cache_p()
            target_to_arm()
            arm_build_reg_cache()
        arm_semihosting_init()
arm720t_read_memory()
    target_to_arm720()
    arm720t_disable_mmu_caches()
        arm720t_read_cp15()
            arm720t_scan_cp15()
                target_to_arm720()
                buf_set_u32()
                flip_u32()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
                jtag_add_callback()
                    interface_jtag_add_callback()
                        jtag_add_callback4()
                            interface_jtag_add_callback4()
                                cmd_queue_alloc()
                        jtag_convert_to_callback4()
                jtag_add_runtest()
                jtag_execute_queue()
                LOG_DEBUG()
                clock()
        jtag_execute_queue()
        arm720t_write_cp15()
            arm720t_scan_cp15()
    arm7_9_read_memory()
        target_to_arm7_9()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        arm7_9_execute_fast_sys_speed()
            target_to_arm7_9()
            arm_jtag_set_instr()
            buf_set_u32()
            embeddedice_read_reg_w_check()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
                jtag_add_dr_scan_check()
        arm7_9_execute_sys_speed()
            target_to_arm7_9()
            arm_jtag_set_instr()
            timeval_ms()
            embeddedice_read_reg()
                embeddedice_read_reg_w_check()
            jtag_execute_queue()
            buf_get_u32()
            alive_sleep()
            keep_alive()
            LOG_ERROR()
        keep_alive()
        is_arm_mode()
            ARRAY_SIZE()
        arm_reg_current()
        jtag_execute_queue()
        LOG_ERROR()
        LOG_WARNING()
        buf_get_u32()
    arm720t_enable_mmu_caches()
        arm720t_read_cp15()
        jtag_execute_queue()
        arm720t_write_cp15()
arm720t_read_phys_memory()
    target_to_arm720()
    armv4_5_mmu_read_physical()
arm720t_soft_reset_halt()
    target_to_arm720()
    target_halt()
    timeval_ms()
    buf_get_u32()
    embeddedice_read_reg()
    jtag_execute_queue()
    alive_sleep()
    keep_alive()
    LOG_ERROR()
    arm_set_cpsr()
    buf_set_u32()
    arm720t_disable_mmu_caches()
    target_call_event_callbacks()
arm720t_target_create()
    calloc()
    arm720t_init_arch_info()
        arm720t_mrc()
            LOG_ERROR()
            arm720t_read_cp15()
            ARMV4_5_MRC()
        arm720t_mcr()
            LOG_ERROR()
            arm720t_write_cp15()
            ARMV4_5_MCR()
        arm7tdmi_init_arch_info()
            arm7tdmi_examine_debug_reason()
                target_to_arm7_9()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
                jtag_execute_queue()
            arm7tdmi_change_to_arm()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    arm7tdmi_clock_out_inner()
                        buf_set_u32()
                        flip_u32()
                        jtag_add_dr_scan()
                        jtag_add_runtest()
                ARMV4_5_T_STR()
                arm7tdmi_clock_data_in()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    jtag_add_dr_scan()
                    jtag_add_callback()
                    jtag_add_runtest()
                    jtag_execute_queue()
                    LOG_DEBUG()
                    LOG_ERROR()
                ARMV4_5_T_MOV()
                ARMV4_5_T_LDR_PCREL()
                ARMV4_5_T_BX()
                jtag_execute_queue()
            arm7tdmi_read_core_regs()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_STMIA()
                arm7tdmi_clock_data_in()
            arm7tdmi_read_core_regs_target_buffer()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_STMIA()
                arm7tdmi_clock_data_in_endianness()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    jtag_add_dr_scan()
                    jtag_add_callback4()
                    arm7_9_endianness_callback()
                        le_to_h_u32()
                        flip_u32()
                        h_u32_to_be()
                        h_u32_to_le()
                        le_to_h_u16()
                        h_u16_to_be()
                        h_u16_to_le()
                    jtag_add_runtest()
                    jtag_execute_queue()
                    LOG_DEBUG()
                    LOG_ERROR()
            arm7tdmi_read_xpsr()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_MRS()
                ARMV4_5_STR()
                arm7tdmi_clock_data_in()
            arm7tdmi_write_xpsr()
                target_to_arm7_9()
                LOG_DEBUG()
                arm7tdmi_clock_out()
                ARMV4_5_MSR_IM()
            arm7tdmi_write_xpsr_im8()
                target_to_arm7_9()
                LOG_DEBUG()
                arm7tdmi_clock_out()
                ARMV4_5_MSR_IM()
            arm7tdmi_write_core_regs()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_LDMIA()
                arm7tdmi_clock_out_inner()
            arm7tdmi_load_word_regs()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_LDMIA()
            arm7tdmi_load_hword_reg()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_LDRH_IP()
            arm7tdmi_load_byte_reg()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_LDRB_IP()
            arm7tdmi_store_word_regs()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_STMIA()
            arm7tdmi_store_hword_reg()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_STRH_IP()
            arm7tdmi_store_byte_reg()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_STRB_IP()
            arm7tdmi_write_pc()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                ARMV4_5_LDMIA()
                arm7tdmi_clock_out_inner()
            arm7tdmi_branch_resume()
                target_to_arm7_9()
                arm7tdmi_clock_out()
                arm7tdmi_clock_out_inner()
                ARMV4_5_B()
            arm7tdmi_branch_resume_thumb()
                target_to_arm7_9()
                LOG_DEBUG()
                arm7tdmi_clock_out()
                ARMV4_5_LDMIA()
                buf_get_u32()
                ARMV4_5_BX()
                embeddedice_read_reg()
                ARMV4_5_T_LDR_PCREL()
                ARMV4_5_T_B()
            arm7_9_enable_eice_step()
                target_to_arm7_9()
                buf_get_u32()
                embeddedice_write_reg()
                    LOG_DEBUG()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    embeddedice_write_reg_inner()
            arm7_9_disable_eice_step()
                target_to_arm7_9()
                embeddedice_store_reg()
                    embeddedice_write_reg()
                    buf_get_u32()
            arm7_9_write_memory()
                target_to_arm7_9()
                LOG_DEBUG()
                LOG_TARGET_ERROR()
                buf_set_u32()
                embeddedice_store_reg()
                target_buffer_get_u32()
                arm7_9_execute_fast_sys_speed()
                arm7_9_execute_sys_speed()
                keep_alive()
                target_buffer_get_u16()
                is_arm_mode()
                arm_reg_current()
                jtag_execute_queue()
                LOG_ERROR()
                LOG_WARNING()
                buf_get_u32()
            arm7_9_bulk_write_memory()
                target_to_arm7_9()
                target_alloc_working_area()
                LOG_INFO()
                target_buffer_set_u32_array()
                ARRAY_SIZE()
                arm7_9_write_memory_no_opt()
                    target_to_arm7_9()
                init_reg_param()
                buf_set_u32()
                armv4_5_run_algorithm_inner()
                    target_to_arm()
                    LOG_DEBUG()
                    LOG_ERROR()
                    LOG_TARGET_ERROR()
                    is_arm_mode()
                    ARMV4_5_CORE_REG_MODE()
                    buf_get_u32()
                    target_write_buffer()
                    register_get_by_name()
                        strcmp()
                    armv4_5_set_core_reg()
                        target_to_arm()
                        buf_get_u32()
                        LOG_TARGET_ERROR()
                        arm_set_cpsr()
                        LOG_DEBUG()
                        arm_mode_name()
                        buf_set_u32()
                    buf_set_u32()
                    breakpoint_add()
                        list_first_entry()
                        lh()
                        breakpoint_add_internal()
                            LOG_ERROR()
                            malloc()
                            target_add_breakpoint()
                                LOG_TARGET_ERROR()
                            free()
                            LOG_DEBUG()
                        foreach_smp_target()
                    target_resume()
                    breakpoint_remove()
                        foreach_smp_target()
                        breakpoint_remove_internal()
                            breakpoint_free()
                                target_remove_breakpoint()
                                LOG_TARGET_ERROR()
                                LOG_DEBUG()
                                free()
                        LOG_TARGET_ERROR()
                    target_read_buffer()
                    arm_set_cpsr()
                arm7_9_dcc_completion()
                    target_to_arm7_9()
                    target_wait_state()
                        target_poll()
                        timeval_ms()
                        LOG_DEBUG()
                        nvp_value2name()
                        keep_alive()
                        LOG_ERROR()
                    embeddedice_write_reg()
                    fast_target_buffer_get_u32()
                    embeddedice_write_dcc()
                        embeddedice_write_reg_inner()
                        fast_target_buffer_get_u32()
                    target_halt()
                buf_get_u32()
                LOG_ERROR()
                destroy_reg_param()
            arm7_9_init_arch_info()
                arm_jtag_setup_connection()
                    jtag_register_event_callback()
                        malloc()
                    arm_jtag_reset_callback()
                arm7_9_read_core_reg()
                    target_to_arm7_9()
                    is_arm_mode()
                    buf_get_u32()
                    jtag_execute_queue()
                    buf_set_u32()
                arm7_9_write_core_reg()
                    target_to_arm7_9()
                    is_arm_mode()
                    buf_get_u32()
                    jtag_execute_queue()
                arm7_9_full_context()
                    target_to_arm7_9()
                    LOG_DEBUG()
                    LOG_TARGET_ERROR()
                    is_arm_mode()
                    LOG_ERROR()
                    ARMV4_5_CORE_REG_MODE()
                    armv4_5_number_to_mode()
                        LOG_ERROR()
                    buf_get_u32()
                    jtag_execute_queue()
                    buf_set_u32()
                arm7_9_setup_semihosting()
                    target_to_arm7_9()
                    is_arm7_9()
                    LOG_USER()
                    embeddedice_read_reg()
                    buf_set_u32()
                    embeddedice_store_reg()
                    breakpoint_add()
                    breakpoint_remove()
                arm_init_arch_info()
                target_register_timer_callback()
                arm7_9_handle_target_request()
                    target_was_examined()
                    target_to_arm7_9()
                    embeddedice_read_reg()
                    jtag_execute_queue()
                    buf_get_u32()
                    embeddedice_receive()
                        arm_jtag_scann()
                        arm_jtag_set_instr()
                        jtag_add_dr_scan()
                        jtag_add_callback()
                        jtag_execute_queue()
                    target_request()
        arm720t_post_debug_entry()
            target_to_arm720()
            arm720t_read_cp15()
            jtag_execute_queue()
            LOG_DEBUG()
        arm720t_pre_restore_context()
            target_to_arm720()
            arm720t_write_cp15()
        arm720t_get_ttb()
            arm720t_read_cp15()
            jtag_execute_queue()
        arm7_9_read_memory()
        arm7_9_write_memory()
        arm720t_disable_mmu_caches()
        arm720t_enable_mmu_caches()
arm720t_write_phys_memory()
    target_to_arm720()
    armv4_5_mmu_write_physical()
        LOG_TARGET_ERROR()
arm7_9_add_breakpoint()
    target_to_arm7_9()
    arm7_9_clear_watchpoints()
        LOG_DEBUG()
        embeddedice_write_reg()
        jtag_execute_queue()
    LOG_INFO()
    arm7_9_assign_wp()
        breakpoint_hw_set()
        LOG_ERROR()
        LOG_DEBUG()
    arm7_9_set_breakpoint()
        target_to_arm7_9()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        arm7_9_assign_wp()
        embeddedice_set_reg()
            embeddedice_write_reg()
            buf_set_u32()
        LOG_ERROR()
        jtag_execute_queue()
        target_read_memory()
        target_write_u32()
        target_read_u32()
        target_write_u16()
        target_read_u16()
        arm7_9_set_software_breakpoints()
            LOG_WARNING()
            LOG_ERROR()
            embeddedice_set_reg()
            LOG_DEBUG()
            jtag_execute_queue()
arm7_9_add_watchpoint()
    target_to_arm7_9()
arm7_9_check_reset()
    target_to_arm7_9()
    get_target_reset_nag()
    LOG_WARNING()
arm7_9_deassert_reset()
    LOG_DEBUG()
    target_state_name()
    jtag_add_reset()
    target_examine_one()
        target_call_event_callbacks()
        target_reset_examined()
        target_set_examined()
    target_poll()
    jtag_get_reset_config()
    LOG_WARNING()
    target_halt()
arm7_9_poll()
    target_to_arm7_9()
    embeddedice_read_reg()
    jtag_execute_queue()
    buf_get_u32()
    LOG_DEBUG()
    arm7_9_debug_entry()
        target_to_arm7_9()
        LOG_DEBUG()
        buf_set_u32()
        embeddedice_store_reg()
        arm7_9_clear_halt()
            target_to_arm7_9()
            buf_set_u32()
            embeddedice_store_reg()
        jtag_execute_queue()
        LOG_TARGET_ERROR()
        buf_get_u32()
        LOG_ERROR()
        arm_set_cpsr()
        is_arm_mode()
        arm_mode_name()
        arm_reg_current()
    arm_semihosting()
    target_call_event_callbacks()
    LOG_WARNING()
arm7_9_remove_breakpoint()
    target_to_arm7_9()
    arm7_9_unset_breakpoint()
        target_to_arm7_9()
        LOG_DEBUG()
        LOG_WARNING()
        embeddedice_set_reg()
        jtag_execute_queue()
        target_read_memory()
        target_buffer_get_u32()
        target_write_memory()
        target_buffer_get_u16()
    arm7_9_clear_watchpoints()
arm7_9_remove_watchpoint()
    target_to_arm7_9()
    arm7_9_unset_watchpoint()
        target_to_arm7_9()
        LOG_TARGET_ERROR()
        LOG_WARNING()
        embeddedice_set_reg()
        jtag_execute_queue()
arm7_9_soft_reset_halt()
    target_to_arm7_9()
    target_halt()
    timeval_ms()
    buf_get_u32()
    embeddedice_read_reg()
    jtag_execute_queue()
    alive_sleep()
    keep_alive()
    LOG_ERROR()
    buf_set_u32()
    embeddedice_store_reg()
    arm7_9_clear_halt()
    LOG_DEBUG()
    register_cache_invalidate()
    arm_set_cpsr()
    arm_reg_current()
    target_call_event_callbacks()
arm7_9_step()
    target_to_arm7_9()
    LOG_TARGET_ERROR()
    buf_set_u32()
    buf_get_u32()
    breakpoint_find()
    arm7_9_unset_breakpoint()
    arm_simulate_step()
    target_read_u32()
    LOG_ERROR()
    arm7_9_restore_context()
        target_to_arm7_9()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        is_arm_mode()
        LOG_ERROR()
        arm_mode_name()
        ARMV4_5_CORE_REG_MODE()
        armv4_5_number_to_mode()
        buf_get_u32()
    target_call_event_callbacks()
    arm7_9_execute_sys_speed()
    register_cache_invalidate()
    arm7_9_debug_entry()
    LOG_DEBUG()
    arm7_9_set_breakpoint()
arm7_9_target_request_data()
    target_to_arm7_9()
    malloc()
    embeddedice_receive()
    h_u32_to_le()
    free()
arm7tdmi_target_create()
    calloc()
    arm7tdmi_init_arch_info()
arm920_mmu()
    LOG_TARGET_ERROR()
    target_to_arm920()
arm920_virt2phys()
    target_to_arm920()
    armv4_5_mmu_translate_va()
arm920t_arch_state()
    target_to_arm920()
    LOG_ERROR()
    arm_arch_state()
    LOG_USER()
arm920t_deinit_target()
    target_to_arm()
    target_to_arm920()
    arm7_9_deinit()
        target_to_arm7_9()
        target_was_examined()
        embeddedice_free_reg_cache()
            free()
        arm_jtag_close_connection()
            jtag_unregister_event_callback()
            arm_jtag_reset_callback()
    arm_free_reg_cache()
    free()
arm920t_read_memory()
    arm7_9_read_memory()
arm920t_read_phys_memory()
    target_to_arm920()
    armv4_5_mmu_read_physical()
arm920t_soft_reset_halt()
    target_to_arm920()
    target_to_arm7_9()
    target_halt()
    timeval_ms()
    buf_get_u32()
    embeddedice_read_reg()
    jtag_execute_queue()
    alive_sleep()
    keep_alive()
    LOG_ERROR()
    arm_set_cpsr()
    buf_set_u32()
    arm920t_disable_mmu_caches()
        arm920t_read_cp15_physical()
            target_to_arm920()
            arm_jtag_scann()
            arm_jtag_set_instr()
            jtag_add_dr_scan()
            jtag_add_callback()
            jtag_execute_queue()
            LOG_DEBUG()
        jtag_execute_queue()
        arm920t_write_cp15_physical()
            target_to_arm920()
            buf_set_u32()
            arm_jtag_scann()
            arm_jtag_set_instr()
            jtag_add_dr_scan()
            LOG_DEBUG()
    target_call_event_callbacks()
arm920t_target_create()
    calloc()
    arm920t_init_arch_info()
        arm920t_mrc()
            LOG_ERROR()
            arm920t_read_cp15_interpreted()
                target_to_arm()
                arm9tdmi_write_core_regs()
                    target_to_arm7_9()
                    arm9tdmi_clock_out()
                        buf_set_u32()
                        flip_u32()
                        arm_jtag_scann()
                        arm_jtag_set_instr()
                        jtag_add_dr_scan()
                        jtag_add_callback()
                        jtag_add_runtest()
                        jtag_execute_queue()
                        LOG_DEBUG()
                    ARMV4_5_LDMIA()
                arm920t_read_cp15_physical()
                jtag_execute_queue()
                arm920t_write_cp15_physical()
                arm920t_execute_cp15()
                    target_to_arm920()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    buf_set_u32()
                    jtag_add_dr_scan()
                    arm9tdmi_clock_out()
                    arm7_9_execute_sys_speed()
                    jtag_execute_queue()
                    LOG_ERROR()
                ARMV4_5_LDR()
                arm9tdmi_read_core_regs()
                    target_to_arm7_9()
                    arm9tdmi_clock_out()
                    ARMV4_5_STMIA()
                    arm9tdmi_clock_data_in()
                        arm_jtag_scann()
                        arm_jtag_set_instr()
                        jtag_add_dr_scan()
                        jtag_add_callback()
                        jtag_add_runtest()
                        jtag_execute_queue()
                        LOG_DEBUG()
                        LOG_ERROR()
                LOG_DEBUG()
                is_arm_mode()
                LOG_ERROR()
            ARMV4_5_MRC()
        arm920t_mcr()
            LOG_ERROR()
            arm920t_write_cp15_interpreted()
                target_to_arm()
                arm9tdmi_write_core_regs()
                arm920t_read_cp15_physical()
                jtag_execute_queue()
                arm920t_write_cp15_physical()
                arm920t_execute_cp15()
                ARMV4_5_STR()
                LOG_DEBUG()
                is_arm_mode()
                LOG_ERROR()
            ARMV4_5_MCR()
        arm9tdmi_init_arch_info()
            arm9tdmi_examine_debug_reason()
                target_to_arm7_9()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
                jtag_execute_queue()
            arm9tdmi_change_to_arm()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_T_STR()
                ARMV4_5_T_MOV()
                ARMV4_5_T_LDR_PCREL()
                ARMV4_5_T_BX()
                jtag_execute_queue()
            arm9tdmi_read_core_regs()
            arm9tdmi_read_core_regs_target_buffer()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_STMIA()
                arm9tdmi_clock_data_in_endianness()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    jtag_add_dr_scan()
                    jtag_add_callback4()
                    arm7_9_endianness_callback()
                    jtag_add_runtest()
                    jtag_execute_queue()
                    LOG_DEBUG()
                    LOG_ERROR()
            arm9tdmi_read_xpsr()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_MRS()
                ARMV4_5_STR()
            arm9tdmi_write_xpsr()
                target_to_arm7_9()
                LOG_DEBUG()
                arm9tdmi_clock_out()
                ARMV4_5_MSR_IM()
            arm9tdmi_write_xpsr_im8()
                target_to_arm7_9()
                LOG_DEBUG()
                arm9tdmi_clock_out()
                ARMV4_5_MSR_IM()
            arm9tdmi_write_core_regs()
            arm9tdmi_load_word_regs()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_LDMIA()
            arm9tdmi_load_hword_reg()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_LDRH_IP()
            arm9tdmi_load_byte_reg()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_LDRB_IP()
            arm9tdmi_store_word_regs()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_STMIA()
            arm9tdmi_store_hword_reg()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_STRH_IP()
            arm9tdmi_store_byte_reg()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_STRB_IP()
            arm9tdmi_write_pc()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_LDMIA()
            arm9tdmi_branch_resume()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_B()
            arm9tdmi_branch_resume_thumb()
                LOG_DEBUG()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_LDMIA()
                buf_get_u32()
                ARMV4_5_BX()
                embeddedice_read_reg()
                ARMV4_5_T_LDR_PCREL()
                ARMV4_5_T_B()
            arm9tdmi_enable_single_step()
                target_to_arm7_9()
                buf_set_u32()
                embeddedice_store_reg()
                arm7_9_enable_eice_step()
            arm9tdmi_disable_single_step()
                target_to_arm7_9()
                buf_set_u32()
                embeddedice_store_reg()
                arm7_9_disable_eice_step()
            arm7_9_write_memory()
            arm7_9_bulk_write_memory()
            arm7_9_init_arch_info()
        arm920t_post_debug_entry()
            target_to_arm920()
            arm920t_read_cp15_physical()
            jtag_execute_queue()
            LOG_DEBUG()
            armv4_5_identify_cache()
            arm920t_read_cp15_interpreted()
            arm920t_write_cp15_physical()
        arm920t_pre_restore_context()
            target_to_arm920()
            arm920t_write_cp15_interpreted()
            arm920t_read_cp15_physical()
            jtag_execute_queue()
            arm920t_write_cp15_physical()
        arm920t_write_memory()
            target_to_arm920()
            armv4_5_mmu_translate_va()
            LOG_DEBUG()
            arm920t_write_cp15_interpreted()
            ARMV4_5_MCR()
            target_read_memory()
            armv4_5_mmu_write_physical()
            arm7_9_write_memory()
        arm920t_get_ttb()
            arm920t_read_cp15_interpreted()
        arm7_9_read_memory()
        arm7_9_write_memory()
        arm920t_disable_mmu_caches()
        arm920t_enable_mmu_caches()
            arm920t_read_cp15_physical()
            jtag_execute_queue()
            arm920t_write_cp15_physical()
arm920t_write_phys_memory()
    target_to_arm920()
    armv4_5_mmu_write_physical()
arm926ejs_arch_state()
    target_to_arm926()
    LOG_ERROR()
    arm_arch_state()
    LOG_USER()
arm926ejs_deinit_target()
    target_to_arm()
    target_to_arm926()
    arm7_9_deinit()
    arm_free_reg_cache()
    free()
arm926ejs_mmu()
    target_to_arm926()
    LOG_TARGET_ERROR()
arm926ejs_read_phys_memory()
    target_to_arm926()
    armv4_5_mmu_read_physical()
arm926ejs_soft_reset_halt()
    target_to_arm926()
    target_to_arm7_9()
    target_halt()
    timeval_ms()
    buf_get_u32()
    embeddedice_read_reg()
    jtag_execute_queue()
    alive_sleep()
    keep_alive()
    LOG_ERROR()
    arm_set_cpsr()
    buf_set_u32()
    arm926ejs_disable_mmu_caches()
        target_to_arm926()
        jtag_execute_queue()
    target_call_event_callbacks()
arm926ejs_target_create()
    calloc()
    arm926ejs_init_arch_info()
        arm926ejs_mrc()
            LOG_ERROR()
            arm926ejs_cp15_read()
                target_to_arm7_9()
                ARM926EJS_CP15_ADDR()
                buf_set_u32()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
                timeval_ms()
                jtag_add_callback()
                jtag_execute_queue()
                buf_get_u32()
                LOG_ERROR()
                LOG_DEBUG()
        arm926ejs_mcr()
            LOG_ERROR()
            arm926ejs_cp15_write()
                target_to_arm7_9()
                ARM926EJS_CP15_ADDR()
                buf_set_u32()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
                timeval_ms()
                jtag_execute_queue()
                buf_get_u32()
                LOG_ERROR()
                LOG_DEBUG()
        arm9tdmi_init_arch_info()
        arm926ejs_post_debug_entry()
            target_to_arm926()
            jtag_execute_queue()
            LOG_DEBUG()
            armv4_5_identify_cache()
        arm926ejs_pre_restore_context()
            target_to_arm926()
        arm926ejs_write_memory()
            target_to_arm926()
            armv4_5_mmu_write_physical()
            arm7_9_write_memory()
        arm926ejs_cp15_read()
        arm926ejs_cp15_write()
        arm926ejs_get_ttb()
            target_to_arm926()
        arm7_9_read_memory()
        arm7_9_write_memory()
        arm926ejs_disable_mmu_caches()
        arm926ejs_enable_mmu_caches()
            target_to_arm926()
            jtag_execute_queue()
        arm926ejs_examine_debug_reason()
            target_to_arm7_9()
            embeddedice_read_reg()
            jtag_execute_queue()
            buf_get_u32()
            LOG_DEBUG()
            LOG_ERROR()
            LOG_WARNING()
        ARMV5_BKPT()
        ARMV5_T_BKPT()
arm926ejs_virt2phys()
    target_to_arm926()
    armv4_5_mmu_translate_va()
arm926ejs_write_phys_memory()
    target_to_arm926()
    armv4_5_mmu_write_physical()
arm946e_deinit_target()
    target_to_arm()
    target_to_arm946()
    arm7_9_deinit()
    arm_free_reg_cache()
    free()
arm946e_read_memory()
    LOG_DEBUG()
    arm7_9_read_memory()
arm946e_target_create()
    calloc()
    arm946e_init_arch_info()
        arm9tdmi_init_arch_info()
        ARMV5_BKPT()
        ARMV5_T_BKPT()
        arm946e_post_debug_entry()
            target_to_arm946()
            arm946e_read_cp15()
                target_to_arm7_9()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
                jtag_add_callback()
                LOG_DEBUG()
                jtag_execute_queue()
            arm946e_invalidate_whole_dcache()
                arm946e_cp15_get_csize()
                    target_to_arm946()
                    arm946e_read_cp15()
                arm946e_write_cp15()
                    target_to_arm7_9()
                    buf_set_u32()
                    arm_jtag_scann()
                    arm_jtag_set_instr()
                    jtag_add_dr_scan()
                    LOG_DEBUG()
                    jtag_execute_queue()
                LOG_DEBUG()
                arm946e_read_cp15()
            arm946e_invalidate_whole_icache()
                arm946e_cp15_get_csize()
                LOG_DEBUG()
                arm946e_write_cp15()
            arm946e_write_cp15()
            LOG_DEBUG()
        arm946e_pre_restore_context()
            target_to_arm946()
            arm946e_read_cp15()
            arm946e_write_cp15()
            LOG_DEBUG()
arm946e_write_memory()
    LOG_DEBUG()
    target_to_arm946()
    arm946e_invalidate_dcache()
        arm946e_write_cp15()
        LOG_DEBUG()
        arm946e_read_cp15()
    arm7_9_write_memory_opt()
        target_to_arm7_9()
    arm946e_invalidate_icache()
        arm946e_write_cp15()
        LOG_DEBUG()
        arm946e_read_cp15()
arm966e_deinit_target()
    target_to_arm()
    target_to_arm966()
    arm7_9_deinit()
    arm_free_reg_cache()
    free()
arm966e_target_create()
    calloc()
    arm966e_init_arch_info()
        arm9tdmi_init_arch_info()
        ARMV5_BKPT()
        ARMV5_T_BKPT()
arm9tdmi_target_create()
    calloc()
    arm9tdmi_init_arch_info()
arm_blank_check_memory()
    target_to_arm()
    assert()
    LOG_ERROR()
    target_alloc_working_area()
    ARRAY_SIZE()
    target_write_u32()
    le_to_h_u32()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    buf_get_u32()
    destroy_reg_param()
    target_free_working_area()
arm_checksum_memory()
    target_to_arm()
    assert()
    target_alloc_working_area()
    ARRAY_SIZE()
    target_write_u32()
    le_to_h_u32()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    buf_get_u32()
    LOG_ERROR()
    destroy_reg_param()
    target_free_working_area()
arm_get_gdb_arch()
arm_get_gdb_reg_list()
    target_to_arm()
    is_arm_mode()
    LOG_ERROR()
    malloc()
    arm_reg_current()
    ARRAY_SIZE()
arm_jtag_scann_inner()
    buf_set_u32()
    arm_jtag_set_instr()
    jtag_add_dr_scan()
arm_jtag_set_instr_inner()
    buf_set_u32()
    jtag_add_ir_scan()
    jtag_add_ir_scan_noverify()
arm_tpiu_swo_service_connection_closed()
    list_for_each_entry_safe()
    lh()
    list_del()
    free()
    LOG_ERROR()
arm_tpiu_swo_service_input()
    connection_read()
    LOG_ERROR()
    strerror()
arm_tpiu_swo_service_new_connection()
    malloc()
    LOG_ERROR()
    list_add()
armjtagew_execute_queue()
    LOG_DEBUG_IO()
    armjtagew_end_state()
        tap_is_state_stable()
        tap_set_end_state()
        LOG_ERROR()
        exit()
    armjtagew_runtest()
        tap_get_end_state()
        tap_get_state()
        armjtagew_end_state()
        armjtagew_state_move()
            tap_get_tms_path()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path_len()
            armjtagew_tap_append_step()
                LOG_ERROR()
            tap_set_state()
        armjtagew_tap_append_step()
    armjtagew_state_move()
    armjtagew_path_move()
        tap_state_transition()
        tap_get_state()
        armjtagew_tap_append_step()
        LOG_ERROR()
        tap_state_name()
        exit()
        tap_set_state()
        tap_set_end_state()
    jtag_build_buffer()
    armjtagew_debug_buffer()
    jtag_scan_type()
    armjtagew_scan()
        armjtagew_tap_ensure_space()
            armjtagew_tap_execute()
                armjtagew_tap_append_step()
                buf_set_u32()
                flip_u32()
                armjtagew_usb_message()
                    armjtagew_usb_write()
                        LOG_ERROR()
                        jtag_libusb_bulk_write()
                        LOG_DEBUG_IO()
                        armjtagew_debug_buffer()
                    armjtagew_usb_read()
                        jtag_libusb_bulk_read()
                            libusb_bulk_transfer()
                            LOG_ERROR()
                            libusb_error_name()
                            jtag_libusb_error()
                        LOG_DEBUG_IO()
                        armjtagew_debug_buffer()
                    LOG_ERROR()
                buf_get_u32()
                LOG_ERROR()
                buf_set_buf()
                LOG_DEBUG_IO()
                armjtagew_debug_buffer()
                jtag_read_buffer()
                armjtagew_tap_init()
                free()
        tap_get_end_state()
        armjtagew_end_state()
        tap_get_state()
        armjtagew_state_move()
        armjtagew_tap_append_scan()
            armjtagew_tap_append_step()
        armjtagew_tap_append_step()
        tap_set_state()
    armjtagew_tap_execute()
    tap_set_state()
    armjtagew_reset()
        LOG_DEBUG()
        armjtagew_usb_write()
        LOG_ERROR()
    jtag_sleep()
    LOG_ERROR()
    exit()
armjtagew_init()
    armjtagew_usb_open()
        jtag_libusb_open()
        malloc()
        libusb_get_device()
        libusb_get_config_descriptor()
        libusb_set_configuration()
        libusb_claim_interface()
        libusb_set_interface_alt_setting()
    LOG_ERROR()
    armjtagew_get_version_info()
        armjtagew_usb_message()
        LOG_ERROR()
        memcpy()
        LOG_INFO()
        isgraph()
        LOG_WARNING()
    armjtagew_get_status()
        armjtagew_usb_message()
        buf_get_u32()
        LOG_INFO()
        LOG_ERROR()
    LOG_INFO()
    armjtagew_speed()
        buf_set_u32()
        armjtagew_usb_message()
        LOG_ERROR()
        buf_get_u32()
        LOG_INFO()
    armjtagew_reset()
    armjtagew_tap_init()
armjtagew_khz()
armjtagew_quit()
    armjtagew_usb_close()
        libusb_close()
        free()
armjtagew_speed_div()
armv4_5_run_algorithm()
    armv4_5_run_algorithm_inner()
    armv4_5_run_algorithm_completion()
        target_to_arm()
        target_wait_state()
        target_halt()
        buf_get_u32()
        LOG_WARNING()
armv7a_arch_state()
    target_to_armv7a()
    LOG_ERROR()
    arm_arch_state()
    LOG_USER()
    armv7a_show_fault_registers()
        target_to_armv7a()
        ARMV4_5_MRC()
        LOG_USER()
armv7m_arch_state()
    target_to_armv7m()
    buf_get_u32()
    LOG_USER()
    target_name()
    debug_reason_name()
    arm_mode_name()
    armv7m_exception_string()
        sprintf()
armv7m_checksum_memory()
    target_alloc_working_area()
    target_write_buffer()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    buf_get_u32()
    LOG_ERROR()
    destroy_reg_param()
    target_free_working_area()
armv7m_get_gdb_reg_list()
    target_to_armv7m()
    malloc()
armv7m_run_algorithm()
    armv7m_start_algorithm()
        target_to_armv7m()
        LOG_ERROR()
        LOG_TARGET_ERROR()
        armv7m_get_core_reg()
            target_to_arm()
        LOG_TARGET_WARNING()
        buf_get_u32()
        buf_set_u32()
        LOG_INFO()
        LOG_DEBUG()
        target_resume()
    armv7m_wait_algorithm()
        target_to_armv7m()
        LOG_ERROR()
        target_wait_state()
        target_halt()
        buf_get_u32()
        LOG_DEBUG()
        buf_set_u32()
armv7m_set_core_reg()
    buf_cpy()
armv8_arch_state()
    target_to_armv8()
    LOG_ERROR()
    armv8_aarch64_state()
        target_to_arm()
        LOG_ERROR()
        LOG_USER()
        target_name()
        debug_reason_name()
        armv8_mode_name()
        buf_get_u32()
        buf_get_u64()
    arm_arch_state()
    LOG_USER()
    armv8_show_fault_registers()
armv8_get_core_reg()
    target_to_arm()
armv8_get_core_reg32()
    target_to_arm()
armv8_get_gdb_arch()
    target_to_arm()
armv8_get_gdb_reg_list()
    target_to_arm()
    LOG_DEBUG()
    target_name()
    malloc()
    armv8_reg_current()
    LOG_ERROR()
armv8_mmu_translate_va()
armv8_set_core_reg()
    target_to_arm()
    buf_get_u64()
    armv8_set_cpsr()
    buf_set_u64()
armv8_set_core_reg32()
    target_to_arm()
    buf_get_u32()
    armv8_set_cpsr()
    buf_set_u32()
    buf_get_u64()
    buf_set_u64()
armv8r_target_create()
    adiv5_verify_config()
    calloc()
    LOG_ERROR()
    aarch64_init_arch_info()
assert_reset()
    RISCV_INFO()
    select_dmi()
    set_field()
    target_has_event_action()
    target_handle_event()
    set_hartsel()
        assert()
    dmi_write()
        dmi_op()
            dmi_op_timeout()
            dmi_op()
            LOG_ERROR()
    get_dm()
        RISCV013_INFO()
        list_for_each_entry()
        LOG_DEBUG()
        calloc()
        INIT_LIST_HEAD()
        list_add()
    memset()
assert_reset()
    get_info()
    jtag_add_ir_scan()
    wait_for_debugint_clear()
        time()
        read_bits()
            get_info()
            dbus_scan()
            LOG_ERROR()
            increase_dbus_busy_delay()
            get_field()
        LOG_ERROR()
    LOG_ERROR()
    set_field()
    dram_write32()
        dbus_write()
            dbus_scan()
            increase_dbus_busy_delay()
            LOG_ERROR()
        dram_address()
    lw()
    csrw()
    dram_write_jump()
        dram_write32()
        jal()
    cache_invalidate()
        get_info()
at91rm9200_init()
    LOG_WARNING()
    strcmp()
    LOG_ERROR()
    open()
    strerror()
    mmap()
    close()
at91rm9200_quit()
at91rm9200_read()
at91rm9200_reset()
at91rm9200_write()
at91sam7_erase()
    LOG_ERROR()
    at91sam7_read_clock_info()
        target_read_u32()
    at91sam7_set_flash_mode()
        LOG_DEBUG()
        target_write_u32()
    at91sam7_flash_command()
        target_write_u32()
        LOG_DEBUG()
        at91sam7_wait_status_busy()
            at91sam7_get_flash_status()
                target_read_u32()
            LOG_DEBUG()
            alive_sleep()
            LOG_ERROR()
    malloc()
    at91sam7_write()
        LOG_ERROR()
        LOG_WARNING()
        DIV_ROUND_UP()
        LOG_DEBUG()
        at91sam7_read_clock_info()
        at91sam7_set_flash_mode()
        target_write_memory()
        at91sam7_flash_command()
    free()
at91sam7_erase_check()
    LOG_ERROR()
    at91sam7_read_clock_info()
    at91sam7_set_flash_mode()
    default_flash_blank_check()
        LOG_ERROR()
        malloc()
        default_flash_mem_blank_check()
            LOG_ERROR()
            malloc()
            target_read_memory()
            free()
        target_blank_check_memory()
            target_was_examined()
            LOG_ERROR()
        LOG_USER()
        free()
at91sam7_probe()
    LOG_ERROR()
    at91sam7_read_part_info()
        target_read_u32()
        LOG_WARNING()
        strcmp()
        LOG_ERROR()
        malloc()
        at91sam7_read_clock_info()
        at91sam7_set_flash_mode()
        at91sam7_protect_check()
            LOG_ERROR()
            at91sam7_get_flash_status()
        LOG_DEBUG()
at91sam7_protect()
    LOG_ERROR()
    at91sam7_read_clock_info()
    at91sam7_set_flash_mode()
    at91sam7_flash_command()
    at91sam7_protect_check()
at91sam9_address()
    at91sam9_halted()
        LOG_ERROR()
    target_write_u8()
at91sam9_command()
    at91sam9_halted()
    at91sam9_enable()
        target_write_u32()
    target_write_u8()
at91sam9_init()
    at91sam9_halted()
at91sam9_nand_ready()
    at91sam9_halted()
    target_read_u32()
    alive_sleep()
at91sam9_read_block_data()
    at91sam9_halted()
    arm_nandread()
        is_armv7m()
        target_to_armv7m()
        arm_code_to_working_area()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        LOG_ERROR()
        destroy_reg_param()
        target_read_buffer()
at91sam9_read_data()
    at91sam9_halted()
    target_read_u8()
at91sam9_read_page()
    at91sam9_ecc_init()
        LOG_ERROR()
        target_write_u32()
    nand_page_command()
    nand_read_data_page()
    at91sam9_oob_init()
        malloc()
        LOG_ERROR()
        memset()
    target_read_u32()
    LOG_ERROR()
    LOG_INFO()
    free()
at91sam9_reset()
    at91sam9_halted()
    at91sam9_disable()
        target_write_u32()
at91sam9_write_block_data()
    at91sam9_halted()
    arm_nandwrite()
at91sam9_write_data()
    at91sam9_halted()
    target_write_u8()
at91sam9_write_page()
    at91sam9_ecc_init()
    nand_page_command()
    nand_write_data_page()
        le_to_h_u16()
    LOG_ERROR()
    at91sam9_oob_init()
    target_read_u32()
    free()
    nand_write_finish()
        nand_poll_ready()
            alive_sleep()
        nand_read_status()
        LOG_ERROR()
atexit()
ath79_auto_probe()
    ath79_probe()
        free()
        LOG_ERROR()
        LOG_DEBUG()
        read_flash_id()
            LOG_ERROR()
            ath79_spi_bitbang_prepare()
            ath79_spi_bitbang_bytes()
                ath79_spi_bitbang_chunk()
                    target_to_mips32()
                    malloc()
                    LOG_ERROR()
                    pracc_queue_init()
                    LOG_DEBUG()
                    ath79_spi_bitbang_codegen()
                        MIPS32_LUI()
                        UPPER16()
                        ath79_pracc_addn()
                            pracc_add()
                                realloc()
                        ARRAY_SIZE()
                        MIPS32_ORI()
                        LOWER16()
                        MIPS32_SW()
                        pracc_add()
                        MIPS32_LW()
                        MIPS32_XORI()
                        MIPS32_B()
                        NEG16()
                        MIPS32_MFC0()
                    mips32_pracc_queue_exec()
                        LOG_ERROR()
                        SWAP16()
                        mips32_pracc_exec()
                            mips32_pracc_clean_text_jump()
                                MIPS32_J()
                                pracc_swap16_array()
                            LOG_DEBUG()
                            mips32_pracc_read_ctrl_addr()
                                wait_for_pracc_rw()
                                    timeval_ms()
                                    mips_ejtag_set_instr()
                                        assert()
                                        buf_get_u32()
                                        buf_set_u32()
                                        jtag_add_ir_scan()
                                    mips_ejtag_drscan_32()
                                        mips_ejtag_drscan_32_queued()
                                            assert()
                                            buf_set_u32()
                                            jtag_add_dr_scan()
                                            keep_alive()
                                        jtag_execute_queue()
                                        LOG_ERROR()
                                        buf_get_u32()
                                    LOG_DEBUG()
                                mips_ejtag_set_instr()
                                mips_ejtag_drscan_32()
                            mips_ejtag_set_instr()
                            mips_ejtag_drscan_32()
                            mips_ejtag_drscan_32_out()
                                mips_ejtag_drscan_32_queued()
                            mips32_pracc_finish()
                                mips_ejtag_set_instr()
                                mips_ejtag_drscan_32_out()
                            jtag_execute_queue()
                        malloc()
                        adapter_get_speed_khz()
                        mips_ejtag_set_instr()
                        jtag_execute_queue()
                        exit()
                        free()
                    exit()
                    target_buffer_set_u32_array()
                    LOG_LEVEL_IS()
                    memcpy()
                    pracc_queue_free()
                        free()
                    free()
        LOG_INFO()
        LOG_WARNING()
        calloc()
        malloc()
ath79_erase()
    LOG_DEBUG()
    LOG_ERROR()
    ath79_erase_sector()
        ath79_write_enable()
            ath79_spi_bitbang_prepare()
            ath79_spi_bitbang_bytes()
            read_status_reg()
                ath79_spi_bitbang_prepare()
                ath79_spi_bitbang_bytes()
            LOG_ERROR()
        erase_command()
            ath79_spi_bitbang_prepare()
            ath79_spi_bitbang_bytes()
        wait_till_ready()
            timeval_ms()
            read_status_reg()
            alive_sleep()
            LOG_ERROR()
    keep_alive()
ath79_flash_blank_check()
ath79_protect()
ath79_protect_check()
ath79_read()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    ath79_read_buffer()
        LOG_DEBUG()
        LOG_ERROR()
        LOG_INFO()
        ath79_spi_bitbang_prepare()
        ath79_spi_bitbang_bytes()
ath79_write()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    ath79_write_buffer()
        LOG_DEBUG()
        ath79_write_page()
            LOG_ERROR()
            LOG_INFO()
            memcpy()
            ath79_write_enable()
            ath79_spi_bitbang_prepare()
            ath79_spi_bitbang_bytes()
avr32_ap7k_add_breakpoint()
    LOG_ERROR()
avr32_ap7k_add_watchpoint()
    LOG_ERROR()
avr32_ap7k_arch_state()
    target_to_ap7k()
    LOG_USER()
    debug_reason_name()
avr32_ap7k_assert_reset()
    LOG_ERROR()
avr32_ap7k_deassert_reset()
    LOG_ERROR()
avr32_ap7k_examine()
    target_to_ap7k()
    target_was_examined()
    target_set_examined()
    avr32_jtag_nexus_read()
        avr32_jtag_set_instr()
            buf_get_u32()
            buf_set_u32()
            jtag_add_ir_scan()
            jtag_execute_queue()
            LOG_ERROR()
        avr32_jtag_nexus_set_address()
            memset()
            buf_set_u32()
            jtag_add_dr_scan()
            jtag_execute_queue()
            LOG_ERROR()
            buf_get_u32()
        avr32_jtag_nexus_read_data()
            memset()
            jtag_add_dr_scan()
            jtag_execute_queue()
            LOG_ERROR()
            buf_get_u32()
    LOG_INFO()
    avr32_ocd_setbits()
        avr32_jtag_nexus_read()
        avr32_jtag_nexus_write()
            avr32_jtag_set_instr()
            avr32_jtag_nexus_set_address()
            avr32_jtag_nexus_write_data()
                memset()
                buf_set_u32()
                jtag_add_dr_scan()
                jtag_execute_queue()
                LOG_ERROR()
                buf_get_u32()
avr32_ap7k_get_gdb_reg_list()
    malloc()
    LOG_ERROR()
avr32_ap7k_halt()
    target_to_ap7k()
    LOG_DEBUG()
    target_state_name()
    LOG_WARNING()
    jtag_get_reset_config()
    jtag_get_srst()
    LOG_ERROR()
    avr32_ocd_setbits()
avr32_ap7k_init_target()
    target_to_ap7k()
    avr32_build_reg_cache()
        target_to_ap7k()
        register_get_last_cache_p()
        malloc()
        calloc()
avr32_ap7k_poll()
    target_to_ap7k()
    avr32_jtag_nexus_read()
    avr32_ap7k_debug_entry()
        target_to_ap7k()
        avr32_jtag_nexus_read()
        avr32_ap7k_save_context()
            target_to_ap7k()
            avr32_jtag_read_regs()
                avr32_jtag_read_reg()
                    avr32_jtag_exec()
                        avr32_jtag_nexus_write()
                        avr32_jtag_nexus_read()
                    MTDR()
                    avr32_jtag_nexus_read()
                avr32_jtag_exec()
                MFSR()
            avr32_read_core_reg()
                target_to_ap7k()
                buf_set_u32()
    target_call_event_callbacks()
avr32_ap7k_read_memory()
    target_to_ap7k()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    avr32_jtag_read_memory32()
        avr32_jtag_mwa_read()
            avr32_jtag_set_instr()
            avr32_jtag_mwa_set_address()
                memset()
                buf_set_u32()
                jtag_add_dr_scan()
                jtag_execute_queue()
                LOG_ERROR()
                buf_get_u32()
            avr32_jtag_mwa_read_data()
                memset()
                jtag_add_dr_scan()
                jtag_execute_queue()
                LOG_ERROR()
                buf_get_u32()
        be_to_h_u32()
    avr32_jtag_read_memory16()
        avr32_jtag_mwa_read()
        be_to_h_u32()
    avr32_jtag_read_memory8()
        avr32_jtag_mwa_read()
avr32_ap7k_remove_breakpoint()
    LOG_ERROR()
avr32_ap7k_remove_watchpoint()
    LOG_ERROR()
avr32_ap7k_resume()
    target_to_ap7k()
    LOG_TARGET_ERROR()
    target_free_all_working_areas()
    buf_get_u32()
    avr32_ap7k_restore_context()
        target_to_ap7k()
        avr32_write_core_reg()
            target_to_ap7k()
            buf_get_u32()
            LOG_DEBUG()
        avr32_jtag_write_regs()
            avr32_jtag_write_reg()
                avr32_jtag_nexus_write()
                avr32_jtag_exec()
                MFDR()
                avr32_jtag_nexus_read()
            avr32_jtag_exec()
            MTSR()
    breakpoint_find()
    LOG_DEBUG()
    avr32_ap7k_unset_breakpoint()
    avr32_ap7k_single_step_core()
    avr32_ap7k_set_breakpoint()
    avr32_ap7k_enable_interrupts()
    mips_ejtag_exit_debug()
        MIPS32_DRET()
        container_of()
        mips32_pracc_queue_exec()
        jtag_add_sleep()
    avr32_ocd_clearbits()
        avr32_jtag_nexus_read()
        avr32_jtag_nexus_write()
    avr32_jtag_exec()
    register_cache_invalidate()
    target_call_event_callbacks()
avr32_ap7k_step()
    LOG_ERROR()
avr32_ap7k_target_create()
    calloc()
avr32_ap7k_write_memory()
    target_to_ap7k()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    avr32_jtag_write_memory32()
        h_u32_to_be()
        avr32_jtag_mwa_write()
            avr32_jtag_set_instr()
            avr32_jtag_mwa_set_address()
            avr32_jtag_mwa_write_data()
                memset()
                buf_set_u32()
                jtag_add_dr_scan()
                jtag_execute_queue()
                LOG_ERROR()
                buf_get_u32()
    avr32_jtag_write_memory16()
        avr32_jtag_mwa_read()
        be_to_h_u32()
        h_u32_to_be()
        avr32_jtag_mwa_write()
    avr32_jtag_write_memory8()
        avr32_jtag_mwa_read()
        be_to_h_u32()
        h_u32_to_be()
        avr32_jtag_mwa_write()
avr32_get_core_reg()
    avr32_read_core_reg()
avr32_set_core_reg()
    buf_get_u32()
    buf_set_u32()
avr_arch_state()
    LOG_DEBUG()
avr_assert_reset()
    LOG_DEBUG()
avr_deassert_reset()
    LOG_DEBUG()
avr_halt()
    LOG_DEBUG()
avr_init_target()
    LOG_DEBUG()
avr_poll()
    LOG_DEBUG()
avr_resume()
    LOG_DEBUG()
avr_step()
    LOG_DEBUG()
avr_target_create()
    calloc()
avrf_auto_probe()
    avrf_probe()
        LOG_ERROR()
        avr_jtag_read_jtagid()
            avr_jtag_sendinstr()
                mcu_write_ir_u8()
                    LOG_ERROR()
                    mcu_write_ir()
                        LOG_ERROR()
                        jtag_add_plain_ir_scan()
                            assert()
                            jtag_prelude()
                            interface_jtag_add_plain_ir_scan()
                                jtag_add_plain_scan()
                                    cmd_queue_alloc()
                                    jtag_queue_command()
                                    buf_cpy()
                                    DIV_ROUND_UP()
                            jtag_set_error()
            avr_jtag_senddat()
                mcu_write_dr_u32()
                    LOG_ERROR()
                    mcu_write_dr()
                        LOG_ERROR()
                        jtag_add_plain_dr_scan()
                            assert()
                            jtag_prelude()
                            interface_jtag_add_plain_dr_scan()
                                jtag_add_plain_scan()
                            jtag_set_error()
        mcu_execute_queue()
            jtag_execute_queue()
        LOG_INFO()
        EXTRACT_MFG()
        ARRAY_SIZE()
        EXTRACT_PART()
        free()
        malloc()
avrf_erase()
    LOG_DEBUG()
    LOG_ERROR()
    avr_jtagprg_enterprogmode()
        avr_jtag_reset()
            avr_jtag_sendinstr()
            avr_jtag_senddat()
        avr_jtag_sendinstr()
        avr_jtag_senddat()
    avr_jtagprg_chiperase()
        avr_jtag_sendinstr()
        avr_jtag_senddat()
        mcu_execute_queue()
        LOG_DEBUG()
    avr_jtagprg_leaveprogmode()
        avr_jtag_sendinstr()
        avr_jtag_senddat()
        avr_jtag_reset()
avrf_info()
    LOG_ERROR()
    avr_jtag_read_jtagid()
    mcu_execute_queue()
    LOG_INFO()
    EXTRACT_MFG()
    ARRAY_SIZE()
    EXTRACT_PART()
    command_print_sameline()
    EXTRACT_VER()
avrf_write()
    LOG_ERROR()
    LOG_WARNING()
    LOG_DEBUG()
    avr_jtagprg_enterprogmode()
    avr_jtagprg_writeflashpage()
        avr_jtag_sendinstr()
        avr_jtag_senddat()
        mcu_execute_queue()
        LOG_DEBUG()
    keep_alive()
    avr_jtagprg_leaveprogmode()
bcm2835_swdio_drive()
    is_gpio_config_valid()
    set_gpio_value()
        INP_GPIO()
        OUT_GPIO()
        bcm2835_gpio_synchronize()
    OUT_GPIO()
    INP_GPIO()
    bcm2835_gpio_synchronize()
bcm2835_swdio_read()
bcm2835gpio_blink()
    is_gpio_config_valid()
    set_gpio_value()
bcm2835gpio_init()
    LOG_INFO()
    adapter_gpio_get_config()
    transport_is_jtag()
    bcm2835gpio_jtag_mode_possible()
        is_gpio_config_valid()
    LOG_ERROR()
    transport_is_swd()
    bcm2835gpio_swd_mode_possible()
        is_gpio_config_valid()
    strcmp()
    bcm2835_get_mem_dev()
    open()
    strerror()
    mmap()
    sysconf()
    close()
    LOG_WARNING()
    initialize_gpio()
        is_gpio_config_valid()
        MODE_GPIO()
        LOG_DEBUG()
        adapter_gpio_get_name()
        LOG_WARNING()
        set_gpio_value()
        INP_GPIO()
        OUT_GPIO()
        bcm2835_gpio_synchronize()
    LOG_DEBUG()
    bcm2835gpio_swd_write_fast()
        bcm2835_gpio_synchronize()
        bcm2835_delay()
            asm()
    bcm2835gpio_swd_write_generic()
        set_gpio_value()
        bcm2835_delay()
bcm2835gpio_khz()
    LOG_DEBUG()
    DIV_ROUND_UP()
bcm2835gpio_quit()
    transport_is_jtag()
    restore_gpio()
        is_gpio_config_valid()
        SET_MODE_GPIO()
        bcm2835_gpio_synchronize()
    transport_is_swd()
    INP_GPIO()
    bcm2835gpio_munmap()
        munmap()
        sysconf()
    free()
bcm2835gpio_read()
bcm2835gpio_reset()
    is_gpio_config_valid()
    set_gpio_value()
    LOG_DEBUG()
bcm2835gpio_speed()
bcm2835gpio_speed_div()
bcm2835gpio_write()
    bcm2835_gpio_synchronize()
    bcm2835_delay()
binprint()
    command_print_sameline()
    command_print()
bitbang_swd_init()
    LOG_DEBUG()
bitbang_swd_read_reg()
    assert()
    LOG_DEBUG()
    DIV_ROUND_UP()
    bitbang_swd_exchange()
    buf_get_u32()
    LOG_DEBUG_IO()
    swd_clear_sticky_errors()
        bitbang_swd_write_reg()
            assert()
            LOG_DEBUG()
            swd_cmd_returns_ack()
            DIV_ROUND_UP()
            buf_set_u32()
            parity_u32()
            bitbang_swd_exchange()
            buf_get_u32()
            LOG_DEBUG_IO()
            swd_clear_sticky_errors()
            swd_ack_to_error_code()
        swd_cmd()
    swd_ack_to_error_code()
    parity_u32()
    LOG_ERROR()
bitbang_swd_run_queue()
    bitbang_swd_exchange()
    LOG_DEBUG_IO()
bitbang_swd_switch_seq()
    LOG_DEBUG_IO()
    bitbang_swd_exchange()
    LOG_DEBUG()
    LOG_ERROR()
bitq_execute_queue()
    LOG_DEBUG_IO()
    jtag_get_reset_config()
    tap_set_state()
    bitq_in_proc()
        LOG_DEBUG_IO()
    bitq_end_state()
        tap_is_state_stable()
        LOG_ERROR()
        exit()
        tap_set_end_state()
    bitq_runtest()
        tap_get_state()
        bitq_state_move()
            tap_is_state_stable()
            tap_get_state()
            LOG_ERROR()
            exit()
            tap_get_tms_path()
            tap_get_tms_path_len()
            bitq_io()
                bitq_in_proc()
            tap_set_state()
        bitq_io()
        tap_get_end_state()
    bitq_state_move()
    tap_get_end_state()
    bitq_path_move()
        tap_state_transition()
        tap_get_state()
        bitq_io()
        LOG_ERROR()
        tap_state_name()
        exit()
        tap_set_state()
        tap_set_end_state()
    bitq_scan()
        bitq_state_move()
        bitq_scan_field()
            bitq_io()
            tap_get_state()
            tap_set_state()
    tap_get_state()
    LOG_ERROR()
    exit()
bluenrgx_auto_probe()
    bluenrgx_probe()
        target_read_u32()
        ARRAY_SIZE()
        bluenrgx_read_flash_reg()
            target_read_u32()
            bluenrgx_get_flash_reg()
        DIE_ID_REG()
        FLASH_PAGE_SIZE()
        realloc()
bluenrgx_erase()
    LOG_ERROR()
    target_write_u32()
    bluenrgx_write_flash_reg()
        target_write_u32()
        bluenrgx_get_flash_reg()
    bluenrgx_read_flash_reg()
    FLASH_PAGE_SIZE()
    LOG_DEBUG()
bluenrgx_get_info()
    bluenrgx_probe()
    command_print_sameline()
bluenrgx_write()
    LOG_ERROR()
    target_alloc_working_area()
    LOG_WARNING()
    target_write_buffer()
    LOG_DEBUG()
    init_reg_param()
    init_mem_param()
        malloc()
    buf_set_u32()
    target_run_flash_async_algorithm()
    buf_get_u32()
    target_read_u32()
    target_free_working_area()
    destroy_reg_param()
    destroy_mem_param()
        free()
buspirate_execute_queue()
    LOG_DEBUG_IO()
    tap_state_name()
    buspirate_end_state()
        tap_is_state_stable()
        tap_set_end_state()
        LOG_ERROR()
        exit()
    buspirate_runtest()
        tap_get_end_state()
        tap_get_state()
        buspirate_end_state()
        buspirate_state_move()
            tap_get_tms_path()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path_len()
            buspirate_tap_append()
                buspirate_tap_make_space()
                    buspirate_tap_execute()
                        LOG_DEBUG()
                        DIV_ROUND_UP()
                        jtag_debug_state_machine()
                        buspirate_serial_write()
                            write()
                            LOG_DEBUG()
                            buspirate_print_buffer()
                                snprintf()
                                strcat()
                                LOG_DEBUG()
                            LOG_ERROR()
                        LOG_ERROR()
                        buspirate_serial_read()
                            read()
                            LOG_DEBUG()
                            buspirate_print_buffer()
                            LOG_ERROR()
                        buf_set_buf()
                        jtag_read_buffer()
                        buspirate_tap_init()
                        free()
                LOG_ERROR()
                exit()
            tap_set_state()
        buspirate_tap_append()
        LOG_DEBUG_IO()
        tap_state_name()
    buspirate_state_move()
    buspirate_path_move()
        tap_state_transition()
        tap_get_state()
        buspirate_tap_append()
        LOG_ERROR()
        tap_state_name()
        exit()
        tap_set_state()
        tap_set_end_state()
    jtag_build_buffer()
    jtag_scan_type()
    buspirate_scan()
        buspirate_tap_make_space()
        tap_get_end_state()
        buspirate_end_state()
        tap_get_state()
        buspirate_state_move()
        buspirate_tap_append_scan()
            buspirate_tap_append()
        buspirate_tap_append()
        tap_set_state()
    buspirate_tap_execute()
    jtag_sleep()
    buspirate_stableclocks()
        tap_get_state()
        buspirate_tap_make_space()
        buspirate_tap_append()
    LOG_ERROR()
    exit()
buspirate_init()
    LOG_ERROR()
    buspirate_serial_open()
        open()
    buspirate_serial_setspeed()
        fcntl()
        tcgetattr()
        cfsetispeed()
        cfsetospeed()
        tcsetattr()
    read_and_discard_all_data()
        read()
        LOG_INFO()
        assert()
    buspirate_bbio_enable()
        LOG_DEBUG()
        buspirate_serial_write()
        usleep()
        buspirate_serial_read()
        LOG_ERROR()
        exit()
        strncmp()
    buspirate_set_speed()
        buspirate_swd_set_speed()
            LOG_DEBUG()
            buspirate_serial_write()
            buspirate_serial_read()
            LOG_ERROR()
            exit()
        buspirate_jtag_set_speed()
            buspirate_jtag_command()
                buspirate_serial_write()
                LOG_INFO()
                buspirate_serial_read()
            buspirate_serial_setspeed()
            LOG_ERROR()
            exit()
            buspirate_serial_write()
            buspirate_serial_read()
            LOG_INFO()
    LOG_INFO()
    buspirate_tap_init()
    buspirate_set_mode()
        buspirate_swd_set_mode()
            buspirate_serial_write()
            buspirate_serial_read()
            LOG_ERROR()
            exit()
        buspirate_jtag_set_mode()
            buspirate_jtag_command()
    buspirate_set_feature()
        buspirate_swd_set_feature()
            LOG_DEBUG()
            LOG_ERROR()
            buspirate_serial_write()
            buspirate_serial_read()
            exit()
        buspirate_jtag_set_feature()
            buspirate_jtag_command()
    buspirate_reset()
        LOG_DEBUG()
        buspirate_set_feature()
buspirate_quit()
    LOG_INFO()
    buspirate_set_mode()
    buspirate_set_speed()
    buspirate_jtag_reset()
        buspirate_serial_write()
        usleep()
        buspirate_serial_read()
        strncmp()
        LOG_ERROR()
    buspirate_serial_close()
        close()
    free()
buspirate_swd_init()
    LOG_INFO()
buspirate_swd_read_reg()
    LOG_DEBUG()
    assert()
    buspirate_swd_write_header()
        buspirate_serial_write()
        buspirate_serial_read()
    buspirate_serial_write()
    buspirate_serial_read()
    parity_u32()
    buspirate_swd_idle_clocks()
        memset()
        buspirate_serial_write()
        buspirate_serial_read()
    buspirate_swd_clear_sticky_errors()
        buspirate_swd_write_reg()
            LOG_DEBUG()
            assert()
            buspirate_swd_write_header()
            buf_set_u32()
            parity_u32()
            buspirate_serial_write()
            buspirate_serial_read()
            buspirate_swd_idle_clocks()
            buspirate_swd_clear_sticky_errors()
        swd_cmd()
buspirate_swd_run_queue()
    LOG_DEBUG()
    buspirate_swd_idle_clocks()
buspirate_swd_switch_seq()
    LOG_DEBUG()
    DIV_ROUND_UP()
    LOG_ERROR()
    memcpy()
    buspirate_serial_write()
    buspirate_serial_read()
cc26xx_erase()
    LOG_ERROR()
    cc26xx_mass_erase()
        LOG_ERROR()
        cc26xx_init()
            cc26xx_auto_probe()
                cc26xx_probe()
                    target_read_u32()
                    cc26xx_device_type()
                    cc26xx_sector_length()
                    malloc()
            target_free_working_area()
            target_alloc_working_area()
            target_write_buffer()
            LOG_ERROR()
            target_start_algorithm()
        buf_set_u32()
        target_write_buffer()
        cc26xx_wait_algo_done()
            timeval_ms()
            target_read_u32()
            keep_alive()
            LOG_ERROR()
        cc26xx_quit()
            target_halt()
            target_wait_algorithm()
            target_free_working_area()
    cc26xx_init()
    buf_set_u32()
    target_write_buffer()
    cc26xx_wait_algo_done()
    cc26xx_quit()
cc26xx_info()
    command_print_sameline()
cc26xx_write()
    LOG_ERROR()
    cc26xx_init()
    buf_set_u32()
    timeval_ms()
    target_write_buffer()
    cc26xx_wait_algo_done()
    keep_alive()
    cc26xx_quit()
cc3220sf_auto_probe()
    cc3220sf_probe()
        free()
        malloc()
cc3220sf_erase()
    LOG_ERROR()
    cc3220sf_mass_erase()
        LOG_ERROR()
        target_write_u32()
        timeval_ms()
        target_read_u32()
        keep_alive()
    target_write_u32()
    timeval_ms()
    target_read_u32()
    keep_alive()
cc3220sf_info()
    command_print_sameline()
cc3220sf_write()
    LOG_ERROR()
    target_alloc_working_area()
    target_get_working_area_avail()
        ALIGN_DOWN()
    target_free_working_area()
    target_write_buffer()
    init_reg_param()
    target_read_buffer()
    buf_set_u32()
    target_run_algorithm()
    buf_get_u32()
    keep_alive()
    destroy_reg_param()
cfi_auto_probe()
    cfi_probe()
        LOG_ERROR()
        free()
        cfi_send_command()
            cfi_command()
            cfi_target_write_memory()
                target_write_memory()
        cfi_flash_address()
            LOG_ERROR()
            exit()
        cfi_target_read_memory()
            target_read_memory()
        target_buffer_get_u16()
        target_buffer_get_u32()
        LOG_INFO()
        cfi_reset()
            cfi_send_command()
            cfi_flash_address()
        cfi_fixup_non_cfi()
            malloc()
            memcpy()
            LOG_ERROR()
            exit()
        cfi_query_string()
            cfi_send_command()
            cfi_flash_address()
            cfi_query_u8()
                cfi_target_read_memory()
                cfi_flash_address()
            LOG_DEBUG()
            cfi_reset()
            LOG_ERROR()
        LOG_USER()
        cfi_query_u16()
            cfi_target_read_memory()
            cfi_flash_address()
        LOG_DEBUG()
        cfi_query_u8()
        malloc()
        cfi_query_u32()
            cfi_target_read_memory()
            cfi_flash_address()
        cfi_read_intel_pri_ext()
            free()
            malloc()
            LOG_ERROR()
            cfi_query_u8()
            cfi_reset()
            LOG_DEBUG()
            cfi_query_u32()
            cfi_query_u16()
            LOG_WARNING()
        cfi_read_0002_pri_ext()
            cfi_read_atmel_pri_ext()
                free()
                malloc()
                LOG_ERROR()
                memset()
                cfi_query_u8()
                cfi_send_command()
                cfi_flash_address()
                LOG_DEBUG()
            cfi_read_spansion_pri_ext()
                free()
                malloc()
                LOG_ERROR()
                cfi_query_u8()
                cfi_send_command()
                cfi_flash_address()
                LOG_DEBUG()
        DIV_ROUND_UP()
        cfi_fixup()
            cfi_fixup()
        LOG_WARNING()
cfi_erase()
    LOG_ERROR()
    cfi_intel_erase()
        cfi_intel_clear_status_register()
            cfi_send_command()
            cfi_flash_address()
        cfi_send_command()
        cfi_flash_address()
        cfi_intel_wait_status_busy()
            LOG_ERROR()
            cfi_get_u8()
                cfi_target_read_memory()
                cfi_flash_address()
            alive_sleep()
            LOG_DEBUG()
            cfi_intel_clear_status_register()
        LOG_ERROR()
    cfi_spansion_erase()
        cfi_spansion_unlock_seq()
            cfi_send_command()
            cfi_flash_address()
        cfi_send_command()
        cfi_flash_address()
        cfi_spansion_wait_status_busy()
            cfi_get_u8()
            LOG_ERROR()
            LOG_DEBUG()
            alive_sleep()
        LOG_ERROR()
cfi_fixup_0002_erase_regions()
    LOG_DEBUG()
cfi_fixup_0002_polling_bits()
cfi_fixup_0002_unlock_addresses()
cfi_fixup_0002_write_buffer()
cfi_fixup_reversed_erase_regions()
cfi_get_info()
    command_print_sameline()
    cfi_intel_info()
        command_print_sameline()
    cfi_spansion_info()
        command_print_sameline()
    LOG_ERROR()
cfi_protect()
    LOG_ERROR()
    cfi_intel_protect()
        LOG_ERROR()
        cfi_intel_clear_status_register()
        cfi_send_command()
        cfi_flash_address()
        cfi_intel_wait_status_busy()
        cfi_get_u8()
    LOG_WARNING()
cfi_protect_check()
    LOG_ERROR()
    cfi_intel_protect_check()
        cfi_send_command()
        cfi_flash_address()
        cfi_get_u8()
    cfi_spansion_protect_check()
        cfi_spansion_unlock_seq()
        cfi_send_command()
        cfi_flash_address()
        cfi_get_u8()
cfi_read()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_INFO()
    cfi_target_read_memory()
cfi_write()
    LOG_ERROR()
    LOG_INFO()
    cfi_target_read_memory()
    cfi_write_word()
        cfi_intel_write_word()
            cfi_intel_clear_status_register()
            cfi_send_command()
            cfi_target_write_memory()
            cfi_intel_wait_status_busy()
            cfi_flash_address()
            LOG_ERROR()
        cfi_spansion_write_word()
            cfi_spansion_unlock_seq()
            cfi_send_command()
            cfi_flash_address()
            cfi_target_write_memory()
            cfi_spansion_wait_status_busy()
            LOG_ERROR()
        LOG_ERROR()
    malloc()
    buf_bswap16()
    buf_bswap32()
    cfi_intel_write_block()
        is_arm()
        target_to_arm()
        LOG_ERROR()
        cfi_intel_clear_status_register()
        LOG_WARNING()
        target_buffer_set_u32_array()
        target_alloc_working_area()
        target_write_buffer()
        target_alloc_working_area_try()
        init_reg_param()
        cfi_command_val()
            cfi_command()
            target_buffer_get_u16()
            target_buffer_get_u32()
            LOG_ERROR()
        LOG_DEBUG()
        buf_set_u32()
        target_run_algorithm()
        buf_get_u32()
        cfi_intel_wait_status_busy()
        keep_alive()
        target_free_working_area()
        destroy_reg_param()
    cfi_spansion_write_block()
        strncmp()
        target_type_name()
        cfi_spansion_write_block_mips()
            MIPS32_LHU()
            MIPS32_ADDI()
            MIPS32_SH()
            MIPS32_XOR()
            MIPS32_AND()
            MIPS32_BNE()
            MIPS32_SRL()
            NEG16()
            MIPS32_BEQ()
            MIPS32_LUI()
            MIPS32_ORI()
            MIPS32_B()
            MIPS32_SDBBP()
            LOG_ERROR()
            malloc()
            target_buffer_set_u32_array()
            target_alloc_working_area()
            free()
            target_write_buffer()
            target_alloc_working_area_try()
            target_free_working_area()
            LOG_WARNING()
            init_reg_param()
            buf_set_u32()
            cfi_command_val()
            cfi_flash_address()
            target_run_algorithm()
            buf_get_u32()
            target_free_all_working_areas()
            destroy_reg_param()
        is_armv7m()
        target_to_armv7m()
        is_arm()
        target_to_arm()
        LOG_ERROR()
        malloc()
        target_buffer_set_u32_array()
        target_alloc_working_area()
        free()
        target_write_buffer()
        target_alloc_working_area_try()
        target_free_working_area()
        LOG_WARNING()
        init_reg_param()
        buf_set_u32()
        cfi_command_val()
        cfi_flash_address()
        target_run_algorithm()
        buf_get_u32()
        target_free_all_working_areas()
        destroy_reg_param()
    cfi_write_words()
        LOG_DEBUG()
        cfi_intel_write_words()
            LOG_ERROR()
            cfi_intel_clear_status_register()
            cfi_send_command()
            cfi_intel_wait_status_busy()
            cfi_flash_address()
            cfi_target_write_memory()
        cfi_spansion_write_words()
            LOG_ERROR()
            cfi_spansion_unlock_seq()
            cfi_send_command()
            cfi_target_write_memory()
            cfi_spansion_wait_status_busy()
            cfi_flash_address()
        LOG_ERROR()
    free()
    cfi_reset()
chibios_create()
    ARRAY_SIZE()
    strcmp()
    LOG_WARNING()
chibios_detect_rtos()
    LOG_INFO()
chibios_get_symbol_list_to_lookup()
    malloc()
    memcpy()
chibios_get_thread_reg_list()
    chibios_update_stacking()
        target_to_armv7m()
        is_armv7m()
        target_read_u32()
        LOG_ERROR()
        LOG_DEBUG()
    LOG_ERROR()
    target_read_u32()
    rtos_generic_stack_read()
        LOG_ERROR()
        malloc()
        target_read_buffer()
        free()
        LOG_DEBUG()
        LOG_OUTPUT()
        calloc()
chibios_update_threads()
    LOG_ERROR()
    chibios_update_memory_signature()
        free()
        malloc()
        LOG_ERROR()
        target_read_buffer()
        strncmp()
        LOG_WARNING()
        le_to_h_u32()
        be_to_h_u32()
        LOG_INFO()
        GET_CH_KERNEL_MAJOR()
        GET_CH_KERNEL_MINOR()
        GET_CH_KERNEL_PATCH()
    rtos_free_threadlist()
        free()
    target_read_u32()
    LOG_INFO()
    malloc()
    strcpy()
    target_read_buffer()
    strlen()
    target_read_u8()
    sprintf()
chromium_ec_create()
    ARRAY_SIZE()
    strcmp()
    malloc()
    LOG_ERROR()
    memcpy()
    LOG_INFO()
chromium_ec_detect_rtos()
    LOG_DEBUG()
    LOG_ERROR()
    target_read_buffer()
    LOG_INFO()
chromium_ec_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
    LOG_ERROR()
chromium_ec_get_thread_reg_list()
    target_read_u32()
    LOG_ERROR()
    rtos_generic_stack_read()
chromium_ec_update_threads()
    chromium_ec_get_num_tasks()
        target_read_u32()
        LOG_ERROR()
        BIT()
    LOG_ERROR()
    chromium_ec_get_current_task_ptr()
        target_read_u32()
    LOG_DEBUG()
    rtos_free_threadlist()
    target_read_u32()
    malloc()
    strdup()
    BIT()
    target_read_buffer()
    strncmp()
    target_buffer_get_u64()
    snprintf()
clean_threadlist()
clear_malloc()
    malloc()
    memset()
cmsis_dap_config_trace()
    cmsis_dap_cmd_dap_swo_control()
        cmsis_dap_xfer()
            LOG_ERROR()
            cmsis_dap_flush_read()
                LOG_DEBUG()
        LOG_ERROR()
    LOG_ERROR()
    LOG_INFO()
    cmsis_dap_get_swo_buf_sz()
        cmsis_dap_cmd_dap_info()
            cmsis_dap_xfer()
            LOG_ERROR()
        le_to_h_u32()
        LOG_INFO()
    cmsis_dap_cmd_dap_swo_transport()
        cmsis_dap_xfer()
        LOG_ERROR()
    cmsis_dap_cmd_dap_swo_mode()
        cmsis_dap_xfer()
        LOG_ERROR()
    cmsis_dap_cmd_dap_swo_baudrate()
        h_u32_to_le()
        cmsis_dap_xfer()
        le_to_h_u32()
        LOG_ERROR()
    calculate_swo_prescaler()
cmsis_dap_execute_queue()
    cmsis_dap_execute_command()
        cmsis_dap_flush()
            LOG_DEBUG_IO()
            memcpy()
            debug_parse_cmsis_buf()
                printf()
                exit()
                LOG_DEBUG()
            cmsis_dap_xfer()
            LOG_ERROR()
            exit()
            printf()
        cmsis_dap_execute_sleep()
            cmsis_dap_cmd_dap_delay()
                h_u16_to_le()
                cmsis_dap_xfer()
                LOG_ERROR()
            jtag_sleep()
        cmsis_dap_execute_tlr_reset()
            LOG_INFO()
            cmsis_dap_cmd_dap_swj_sequence()
                LOG_DEBUG()
                DIV_ROUND_UP()
                printf()
                bit_copy()
                cmsis_dap_xfer()
            tap_set_state()
        cmsis_dap_execute_scan()
            LOG_DEBUG_IO()
            jtag_scan_type()
            LOG_DEBUG()
            tap_get_state()
            cmsis_dap_end_state()
                tap_is_state_stable()
                tap_set_end_state()
                LOG_ERROR()
                exit()
            cmsis_dap_state_move()
                tap_get_tms_path()
                tap_get_state()
                tap_get_end_state()
                tap_get_tms_path_len()
                LOG_DEBUG_IO()
                tap_state_name()
                cmsis_dap_add_tms_sequence()
                    LOG_DEBUG_IO()
                tap_set_state()
            tap_get_end_state()
            tap_state_name()
        cmsis_dap_execute_pathmove()
            LOG_DEBUG_IO()
            cmsis_dap_pathmove()
                cmsis_dap_end_state()
                tap_get_state()
        cmsis_dap_execute_runtest()
            LOG_DEBUG_IO()
            cmsis_dap_end_state()
            cmsis_dap_runtest()
                tap_get_end_state()
                tap_get_state()
                cmsis_dap_end_state()
                cmsis_dap_state_move()
                cmsis_dap_stableclocks()
                    tap_get_state()
                    cmsis_dap_add_tms_sequence()
        cmsis_dap_execute_stableclocks()
            LOG_DEBUG_IO()
            cmsis_dap_stableclocks()
        cmsis_dap_execute_tms()
            LOG_DEBUG_IO()
            cmsis_dap_cmd_dap_swj_sequence()
        LOG_ERROR()
        exit()
    cmsis_dap_flush()
cmsis_dap_hid_open()
    hid_init()
    LOG_ERROR()
    hid_enumerate()
    LOG_DEBUG()
    wcsstr()
    strlen()
    malloc()
    mbstowcs()
    wcscmp()
    free()
    hid_free_enumeration()
    hid_open_path()
    cmsis_dap_hid_alloc()
        malloc()
        LOG_ERROR()
    cmsis_dap_hid_close()
        hid_close()
        hid_exit()
        free()
cmsis_dap_hid_read()
    hid_read_timeout()
    LOG_ERROR()
    hid_error()
cmsis_dap_hid_write()
    memset()
    hid_write()
    LOG_ERROR()
    hid_error()
cmsis_dap_init()
    cmsis_dap_open()
        calloc()
        LOG_ERROR()
        adapter_get_required_serial()
        ARRAY_SIZE()
        free()
    cmsis_dap_flush_read()
    cmsis_dap_get_caps_info()
        cmsis_dap_cmd_dap_info()
        BIT()
        LOG_INFO()
    cmsis_dap_get_version_info()
        cmsis_dap_cmd_dap_info()
        LOG_INFO()
    cmsis_dap_get_serial_info()
        cmsis_dap_cmd_dap_info()
        LOG_INFO()
    cmsis_dap_swd_open()
        LOG_ERROR()
        cmsis_dap_cmd_dap_connect()
            cmsis_dap_xfer()
            LOG_ERROR()
        LOG_INFO()
    LOG_ERROR()
    cmsis_dap_cmd_dap_connect()
    LOG_INFO()
    cmsis_dap_cmd_dap_info()
    free()
    LOG_DEBUG()
    MIN()
    malloc()
    cmsis_dap_get_status()
        cmsis_dap_cmd_dap_swj_pins()
            h_u32_to_le()
            cmsis_dap_xfer()
            LOG_ERROR()
        LOG_INFO()
    cmsis_dap_cmd_dap_swj_clock()
        h_u32_to_le()
        cmsis_dap_xfer()
        LOG_ERROR()
    adapter_get_speed_khz()
    cmsis_dap_cmd_dap_tfer_configure()
        h_u16_to_le()
        cmsis_dap_xfer()
        LOG_ERROR()
    cmsis_dap_cmd_dap_swd_configure()
        cmsis_dap_xfer()
        LOG_ERROR()
    cmsis_dap_cmd_dap_led()
        cmsis_dap_xfer()
        LOG_ERROR()
    jtag_get_reset_config()
    cmsis_dap_cmd_dap_swj_pins()
    cmsis_dap_quit()
        cmsis_dap_cmd_dap_disconnect()
            cmsis_dap_xfer()
            LOG_ERROR()
        cmsis_dap_cmd_dap_led()
        cmsis_dap_close()
            free()
cmsis_dap_khz()
cmsis_dap_poll_trace()
    cmsis_dap_cmd_dap_swo_status()
        cmsis_dap_xfer()
        LOG_ERROR()
        le_to_h_u32()
    cmsis_dap_cmd_dap_swo_data()
        h_u16_to_le()
        cmsis_dap_xfer()
        LOG_ERROR()
        le_to_h_u16()
        memcpy()
cmsis_dap_reset()
    cmsis_dap_cmd_dap_swj_pins()
    LOG_ERROR()
cmsis_dap_speed()
    LOG_ERROR()
    cmsis_dap_cmd_dap_swj_clock()
cmsis_dap_speed_div()
cmsis_dap_swd_init()
cmsis_dap_swd_read_reg()
    assert()
    cmsis_dap_swd_queue_cmd()
        swd_cmd()
        cmsis_dap_tfer_cmd_size()
        cmsis_dap_tfer_resp_size()
        cmsis_dap_swd_read_process()
            LOG_ERROR()
            LOG_DEBUG()
            le_to_h_u16()
            LOG_DEBUG_IO()
            le_to_h_u32()
        cmsis_dap_swd_write_from_queue()
            assert()
            LOG_DEBUG_IO()
            LOG_DEBUG()
            h_u16_to_le()
            h_u32_to_le()
            LOG_ERROR()
        assert()
        cmsis_dap_metacmd_targetsel()
            LOG_DEBUG_IO()
            swd_cmd()
            h_u32_to_le()
            parity_u32()
            cmsis_dap_xfer()
            LOG_ERROR()
cmsis_dap_swd_run_queue()
    cmsis_dap_swd_read_process()
    cmsis_dap_swd_write_from_queue()
cmsis_dap_swd_switch_seq()
    cmsis_dap_cmd_dap_disconnect()
    cmsis_dap_cmd_dap_connect()
    LOG_DEBUG_IO()
    LOG_DEBUG()
    LOG_ERROR()
    cmsis_dap_cmd_dap_swj_sequence()
    cmsis_dap_cmd_dap_swj_clock()
    adapter_get_speed_khz()
cmsis_dap_swd_write_reg()
    assert()
    cmsis_dap_swd_queue_cmd()
cmsis_dap_usb_alloc()
    malloc()
    LOG_ERROR()
cmsis_dap_usb_close()
    libusb_release_interface()
    libusb_close()
    libusb_exit()
    free()
cmsis_dap_usb_open()
    libusb_init()
    LOG_ERROR()
    libusb_strerror()
    libusb_get_device_list()
    libusb_exit()
    libusb_free_device_list()
cmsis_dap_usb_read()
    libusb_bulk_transfer()
    LOG_ERROR()
    libusb_strerror()
    memset()
cmsis_dap_usb_write()
    libusb_bulk_transfer()
    LOG_ERROR()
    libusb_strerror()
config_trace()
    jaylink_has_cap()
    LOG_ERROR()
    jaylink_swo_stop()
    jaylink_strerror()
    adjust_swd_buffer_size()
        jaylink_has_cap()
        jaylink_get_free_memory()
        LOG_ERROR()
        jaylink_strerror()
        MIN()
        LOG_DEBUG()
    calculate_trace_buffer_size()
        jaylink_has_cap()
        jaylink_get_free_memory()
        LOG_ERROR()
        jaylink_strerror()
    jaylink_swo_get_speeds()
    LOG_INFO()
    calculate_swo_prescaler()
    detect_swo_freq_and_prescaler()
        fabs()
    jaylink_swo_start()
    LOG_DEBUG()
cortex_a_add_breakpoint()
    target_to_cortex_a()
    LOG_INFO()
    cortex_a_set_breakpoint()
        target_to_cortex_a()
        LOG_WARNING()
        LOG_ERROR()
        breakpoint_hw_set()
        cortex_a_dap_write_memap_register_u32()
            target_to_armv7a()
            mem_ap_write_atomic_u32()
        LOG_DEBUG()
        buf_set_u32()
        ARMV5_T_BKPT()
        ARMV5_BKPT()
        target_read_memory()
        armv7a_cache_flush_virt()
            armv7a_l1_d_cache_flush_virt()
                target_to_armv7a()
                va_end()
                armv7a_l1_d_cache_sanity_check()
                    target_to_armv7a()
                    LOG_TARGET_ERROR()
                    LOG_DEBUG()
                keep_alive()
                ARMV4_5_MCR()
                LOG_ERROR()
            armv7a_l2x_cache_flush_virt()
                target_to_armv7a()
                arm7a_l2x_sanity_check()
                    target_to_armv7a()
                    LOG_ERROR()
                    LOG_DEBUG()
                target_write_phys_u32()
                    target_was_examined()
                    LOG_ERROR()
                    LOG_DEBUG()
                    target_buffer_set_u32()
                    target_write_phys_memory()
                        target_was_examined()
                        LOG_ERROR()
                        target_name()
                LOG_ERROR()
        target_write_memory()
        armv7a_l1_d_cache_inval_virt()
            target_to_armv7a()
            va_end()
            armv7a_l1_d_cache_sanity_check()
            ARMV4_5_MCR()
            keep_alive()
            LOG_ERROR()
        armv7a_l1_i_cache_inval_virt()
            target_to_armv7a()
            va_end()
            armv7a_l1_i_cache_sanity_check()
                target_to_armv7a()
                LOG_TARGET_ERROR()
                LOG_DEBUG()
            keep_alive()
            ARMV4_5_MCR()
            LOG_ERROR()
cortex_a_add_context_breakpoint()
    target_to_cortex_a()
    LOG_INFO()
    cortex_a_set_context_breakpoint()
        target_to_cortex_a()
        LOG_WARNING()
        LOG_ERROR()
        breakpoint_hw_set()
        cortex_a_dap_write_memap_register_u32()
        LOG_DEBUG()
cortex_a_add_hybrid_breakpoint()
    target_to_cortex_a()
    LOG_INFO()
    cortex_a_set_hybrid_breakpoint()
        target_to_cortex_a()
        LOG_WARNING()
        LOG_DEBUG()
        LOG_ERROR()
        breakpoint_hw_set()
        cortex_a_dap_write_memap_register_u32()
cortex_a_add_watchpoint()
    target_to_cortex_a()
    LOG_INFO()
    cortex_a_set_watchpoint()
        target_to_cortex_a()
        LOG_WARNING()
        LOG_ERROR()
        BIT()
        ilog2()
        watchpoint_set()
        cortex_a_dap_write_memap_register_u32()
        LOG_DEBUG()
cortex_a_assert_reset()
    target_to_armv7a()
    LOG_DEBUG()
    target_has_event_action()
    target_handle_event()
    jtag_get_reset_config()
    transport_is_jtag()
    adapter_assert_reset()
    LOG_ERROR()
    target_name()
    target_was_examined()
    register_cache_invalidate()
cortex_a_deassert_reset()
    target_to_armv7a()
    LOG_DEBUG()
    adapter_deassert_reset()
    target_was_examined()
    cortex_a_poll()
        target_to_cortex_a()
        get_cortex_a()
            foreach_smp_target()
        target_call_event_callbacks()
        mem_ap_read_atomic_u32()
        DSCR_RUN_MODE()
        LOG_DEBUG()
        cortex_a_debug_entry()
            target_to_cortex_a()
            target_to_armv7a()
            LOG_DEBUG()
            mem_ap_read_atomic_u32()
            mem_ap_write_atomic_u32()
            arm_dpm_report_dscr()
            arm_dpm_report_wfar()
            arm_dpm_read_current_registers()
            arm_dpm_read_reg()
            cortex_a_read_cp()
        update_halt_gdb()
            cortex_a_halt_smp()
                foreach_smp_target()
                target_was_examined()
                cortex_a_halt()
                    target_to_armv7a()
                    mem_ap_write_atomic_u32()
                    cortex_a_wait_dscr_bits()
                        target_to_armv7a()
                        timeval_ms()
                        mem_ap_read_atomic_u32()
                        LOG_ERROR()
                    LOG_ERROR()
            foreach_smp_target()
            target_was_examined()
            cortex_a_poll()
        arm_semihosting()
    LOG_WARNING()
    target_name()
    mem_ap_write_atomic_u32()
cortex_a_deinit_target()
    target_to_cortex_a()
    target_was_examined()
    mem_ap_read_atomic_u32()
    mem_ap_write_atomic_u32()
    dap_put_ap()
    free()
    arm_free_reg_cache()
cortex_a_examine()
    cortex_a_examine_first()
        target_to_cortex_a()
        dap_find_get_ap()
        LOG_ERROR()
        dap_get_ap()
        mem_ap_init()
        LOG_DEBUG()
        dap_lookup_cs_component()
        LOG_WARNING()
        target_name()
        mem_ap_read_atomic_u32()
        mem_ap_write_atomic_u32()
        target_was_examined()
        cortex_a_dpm_setup()
            cortex_a_dpm_prepare()
                dpm_to_a()
                    container_of()
                cortex_a_wait_instrcmpl()
                    target_to_armv7a()
                    mem_ap_read_atomic_u32()
                    LOG_ERROR()
                    cortex_a_wait_dscr_bits()
                LOG_ERROR()
                cortex_a_exec_opcode()
                    target_to_armv7a()
                    LOG_DEBUG()
                    cortex_a_wait_instrcmpl()
                    mem_ap_write_u32()
                    LOG_ERROR()
                ARMV4_5_MRC()
            cortex_a_dpm_finish()
            cortex_a_instr_write_data_dcc()
                dpm_to_a()
                cortex_a_write_dcc()
                    LOG_DEBUG()
                    mem_ap_write_u32()
                cortex_a_exec_opcode()
            cortex_a_instr_write_data_r0()
                dpm_to_a()
                cortex_a_instr_write_data_rt_dcc()
                    dpm_to_a()
                    cortex_a_write_dcc()
                    cortex_a_exec_opcode()
                    ARMV4_5_MRC()
                cortex_a_exec_opcode()
            cortex_a_instr_cpsr_sync()
                cortex_a_exec_opcode()
                ARMV4_5_MCR()
            cortex_a_instr_read_data_dcc()
                dpm_to_a()
                cortex_a_exec_opcode()
                cortex_a_read_dcc()
                    cortex_a_wait_dscr_bits()
                    LOG_ERROR()
                    mem_ap_read_atomic_u32()
            cortex_a_instr_read_data_r0()
                dpm_to_a()
                cortex_a_exec_opcode()
                cortex_a_instr_read_data_rt_dcc()
                    dpm_to_a()
                    cortex_a_exec_opcode()
                    ARMV4_5_MCR()
                    cortex_a_read_dcc()
            cortex_a_bpwp_enable()
                dpm_to_a()
                LOG_DEBUG()
                cortex_a_dap_write_memap_register_u32()
            cortex_a_bpwp_disable()
                dpm_to_a()
                LOG_DEBUG()
                cortex_a_dap_write_memap_register_u32()
            arm_dpm_setup()
            arm_dpm_initialize()
        free()
        calloc()
        target_set_examined()
    cortex_a_init_debug_access()
        target_to_armv7a()
        mem_ap_write_u32()
        dap_run()
        mem_ap_read_atomic_u32()
        mem_ap_write_atomic_u32()
        cortex_a_poll()
cortex_a_init_target()
    arm_semihosting_init()
cortex_a_read_buffer()
    target_read_memory()
cortex_a_read_memory()
    LOG_DEBUG()
    cortex_a_prep_memaccess()
        target_to_armv7a()
        target_to_cortex_a()
        arm_dpm_modeswitch()
        cortex_a_mmu()
            target_to_armv7a()
            LOG_TARGET_ERROR()
            target_to_cortex_a()
        cortex_a_mmu_modify()
            target_to_cortex_a()
            target_to_armv7a()
            LOG_ERROR()
            LOG_DEBUG()
    cortex_a_read_cpu_memory()
        target_to_armv7a()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        mem_ap_write_atomic_u32()
        mem_ap_read_atomic_u32()
        cortex_a_set_dcc_mode()
            target_to_armv7a()
            mem_ap_write_atomic_u32()
        arm_reg_current()
        cortex_a_read_dfar_dfsr()
            cortex_a_read_copro()
                target_to_armv7a()
                cortex_a_exec_opcode()
                ARMV4_5_MCR()
                cortex_a_wait_dscr_bits()
                mem_ap_read_atomic_u32()
            ARMV4_5_MRC()
        cortex_a_exec_opcode()
        ARMV4_5_MRC()
        cortex_a_read_cpu_memory_fast()
            target_to_armv7a()
            cortex_a_set_dcc_mode()
            cortex_a_exec_opcode()
            ARMV4_5_LDC()
            mem_ap_write_atomic_u32()
            mem_ap_read_buf_noincr()
            cortex_a_wait_instrcmpl()
            cortex_a_wait_dscr_bits()
            mem_ap_read_atomic_u32()
            target_buffer_set_u32()
        cortex_a_read_cpu_memory_slow()
            target_to_armv7a()
            arm_reg_current()
            cortex_a_set_dcc_mode()
            ARMV4_5_LDRB_IP()
            ARMV4_5_LDRH_IP()
            ARMV4_5_LDRW_IP()
            cortex_a_exec_opcode()
            ARMV4_5_MCR()
            cortex_a_wait_dscr_bits()
            mem_ap_read_atomic_u32()
            target_buffer_set_u16()
            target_buffer_set_u32()
        cortex_a_wait_instrcmpl()
        LOG_ERROR()
        cortex_a_dfsr_to_error_code()
        cortex_a_write_dfar_dfsr()
            cortex_a_write_copro()
                target_to_armv7a()
                mem_ap_write_atomic_u32()
                cortex_a_exec_opcode()
                ARMV4_5_MRC()
                cortex_a_wait_dscr_bits()
            ARMV4_5_MCR()
    cortex_a_post_memaccess()
        target_to_armv7a()
        target_to_cortex_a()
        arm_dpm_modeswitch()
        cortex_a_mmu()
        cortex_a_mmu_modify()
cortex_a_remove_breakpoint()
    target_to_cortex_a()
    LOG_WARNING()
    cortex_a_unset_breakpoint()
        target_to_cortex_a()
        LOG_WARNING()
        LOG_DEBUG()
        cortex_a_dap_write_memap_register_u32()
        armv7a_cache_flush_virt()
        target_write_memory()
        armv7a_l1_d_cache_inval_virt()
        armv7a_l1_i_cache_inval_virt()
cortex_a_remove_watchpoint()
    target_to_cortex_a()
    cortex_a_unset_watchpoint()
        target_to_cortex_a()
        LOG_WARNING()
        LOG_DEBUG()
        cortex_a_dap_write_memap_register_u32()
cortex_a_step()
    target_to_cortex_a()
    target_to_armv7a()
    LOG_TARGET_ERROR()
    buf_set_u32()
    buf_get_u32()
    breakpoint_find()
    cortex_a_unset_breakpoint()
    cortex_a_set_dscr_bits()
        target_to_armv7a()
        mem_ap_read_atomic_u32()
        mem_ap_write_atomic_u32()
    cortex_a_set_breakpoint()
    cortex_a_resume()
        target_call_event_callbacks()
        cortex_a_internal_restore()
            target_to_armv7a()
            target_free_all_working_areas()
            buf_set_u32()
            buf_get_u32()
            LOG_ERROR()
            LOG_DEBUG()
            arm_dpm_modeswitch()
            cortex_a_restore_cp15_control_reg()
                target_to_cortex_a()
                target_to_armv7a()
            cortex_a_restore_context()
                target_to_armv7a()
                LOG_DEBUG()
                arm_dpm_write_dirty_registers()
            register_cache_invalidate()
            breakpoint_find()
            cortex_m3_unset_breakpoint()
            cortex_m3_single_step_core()
            cortex_m3_set_breakpoint()
        cortex_a_restore_smp()
            foreach_smp_target()
            target_was_examined()
            cortex_a_internal_restore()
            cortex_a_internal_restart()
                target_to_armv7a()
                mem_ap_read_atomic_u32()
                LOG_ERROR()
                mem_ap_write_atomic_u32()
                cortex_a_wait_dscr_bits()
                register_cache_invalidate()
        cortex_a_internal_restart()
        LOG_DEBUG()
    timeval_ms()
    cortex_a_poll()
    LOG_ERROR()
    LOG_DEBUG()
cortex_a_target_create()
    calloc()
    LOG_ERROR()
    cortex_a_init_arch_info()
        cortex_a_post_debug_entry()
            target_to_cortex_a()
            LOG_DEBUG()
            armv7a_read_ttbcr()
                target_to_armv7a()
                ARMV4_5_MRC()
                LOG_DEBUG()
                armv7a_read_midr()
                    target_to_armv7a()
                    ARMV4_5_MRC()
                    LOG_DEBUG()
            armv7a_identify_cache()
                target_to_armv7a()
                ARMV4_5_MRC()
                LOG_DEBUG()
                get_cache_info()
                    ARMV4_5_MCR()
                    ARMV4_5_MRC()
                decode_cache_reg()
                armv7a_cache_auto_flush_all_data()
                    target_to_armv7a()
                    foreach_smp_target()
                    armv7a_l1_d_cache_clean_inval_all()
                        target_to_armv7a()
                        armv7a_l1_d_cache_sanity_check()
                        armv7a_l1_d_cache_flush_level()
                            LOG_DEBUG()
                            keep_alive()
                            ARMV4_5_MCR()
                        LOG_ERROR()
                    arm7a_l2x_flush_all_data()
                        target_to_armv7a()
                        arm7a_l2x_sanity_check()
                        target_write_phys_u32()
                armv7a_read_mpidr()
                    target_to_armv7a()
                    ARMV4_5_MRC()
                    LOG_DEBUG()
                    target_name()
                    LOG_INFO()
                    LOG_ERROR()
            arm_dpm_modeswitch()
        cortex_a_read_phys_memory()
            LOG_DEBUG()
            cortex_a_prep_memaccess()
            cortex_a_read_cpu_memory()
            cortex_a_post_memaccess()
        armv7a_init_arch_info()
            armv7a_setup_semihosting()
                target_to_armv7a()
                mem_ap_read_atomic_u32()
                LOG_ERROR()
                mem_ap_write_atomic_u32()
        target_register_timer_callback()
        cortex_a_handle_target_request()
            target_to_armv7a()
            target_was_examined()
            mem_ap_read_atomic_u32()
            timeval_ms()
            target_request()
            LOG_ERROR()
cortex_a_virt2phys()
    cortex_a_mmu()
    cortex_a_mmu_modify()
    armv7a_mmu_translate_va_pa()
        target_to_armv7a()
        ARMV4_5_MCR()
        ARMV4_5_MRC()
        LOG_INFO()
cortex_a_write_buffer()
    target_write_memory()
cortex_a_write_memory()
    LOG_DEBUG()
    armv7a_cache_auto_flush_on_write()
        target_to_armv7a()
        armv7a_cache_flush_virt()
    cortex_a_prep_memaccess()
    cortex_a_write_cpu_memory()
        target_to_armv7a()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        mem_ap_write_atomic_u32()
        mem_ap_read_atomic_u32()
        cortex_a_set_dcc_mode()
        arm_reg_current()
        cortex_a_read_dfar_dfsr()
        cortex_a_exec_opcode()
        ARMV4_5_MRC()
        cortex_a_write_cpu_memory_fast()
            target_to_armv7a()
            cortex_a_set_dcc_mode()
            mem_ap_write_atomic_u32()
            ARMV4_5_STC()
            mem_ap_write_buf_noincr()
        cortex_a_write_cpu_memory_slow()
            target_to_armv7a()
            arm_reg_current()
            cortex_a_set_dcc_mode()
            target_buffer_get_u16()
            target_buffer_get_u32()
            mem_ap_write_atomic_u32()
            cortex_a_exec_opcode()
            ARMV4_5_MRC()
            ARMV4_5_STRB_IP()
            ARMV4_5_STRH_IP()
            ARMV4_5_STRW_IP()
            cortex_a_wait_dscr_bits()
        cortex_a_wait_instrcmpl()
        cortex_a_wait_dscr_bits()
        LOG_ERROR()
        cortex_a_dfsr_to_error_code()
        cortex_a_write_dfar_dfsr()
    cortex_a_post_memaccess()
cortex_a_write_phys_memory()
    LOG_DEBUG()
    cortex_a_prep_memaccess()
    cortex_a_write_cpu_memory()
    cortex_a_post_memaccess()
cortex_m_add_breakpoint()
    LOG_TARGET_DEBUG()
    LOG_TARGET_INFO()
    cortex_m_set_breakpoint()
cortex_m_add_watchpoint()
    target_to_cm()
    LOG_TARGET_DEBUG()
cortex_m_assert_reset()
    target_to_cm()
    LOG_TARGET_DEBUG()
    target_state_name()
    target_was_examined()
    jtag_get_reset_config()
    target_has_event_action()
    target_handle_event()
    register_cache_invalidate()
    adapter_assert_reset()
    target_examine_one()
    LOG_TARGET_ERROR()
    cortex_m_read_dhcsr_atomic_sticky()
        target_to_cm()
        target_to_armv7m()
        mem_ap_read_atomic_u32()
        cortex_m_cumulate_dhcsr_sticky()
    cortex_m_write_debug_halt_mask()
        target_to_cm()
        mem_ap_write_atomic_u32()
    mem_ap_write_u32()
    cortex_m_set_maskints_for_run()
        target_to_cm()
        cortex_m_set_maskints()
            target_to_cm()
            cortex_m_write_debug_halt_mask()
    cortex_m_clear_halt()
        target_to_cm()
        cortex_m_write_debug_halt_mask()
        mem_ap_read_atomic_u32()
        mem_ap_write_atomic_u32()
        LOG_TARGET_DEBUG()
    mem_ap_write_atomic_u32()
    LOG_TARGET_INFO()
    LOG_TARGET_WARNING()
    dap_dp_init_or_reconnect()
        LOG_DEBUG()
        adiv5_dap_name()
        dap_dp_read_atomic()
        dap_dp_init()
            LOG_DEBUG()
            adiv5_dap_name()
            dap_invalidate_cache()
            dap_queue_dp_write()
            dap_queue_dp_read()
            dap_dp_poll_register()
            dap_run()
    mem_ap_read_atomic_u32()
    jtag_sleep()
    target_halt()
cortex_m_deassert_reset()
    target_to_cm()
    LOG_TARGET_DEBUG()
    target_state_name()
    target_was_examined()
    adapter_deassert_reset()
    jtag_get_reset_config()
    dap_dp_init_or_reconnect()
    LOG_TARGET_ERROR()
cortex_m_deinit_target()
    target_to_cm()
    target_to_armv7m()
    dap_put_ap()
    free()
    cortex_m_dwt_free()
        target_to_cm()
        free()
        register_unlink_cache()
    armv7m_free_reg_cache()
        target_to_armv7m()
        free()
cortex_m_dwt_get_reg()
    target_read_u32()
    buf_set_u32()
cortex_m_dwt_set_reg()
    target_write_u32()
    buf_get_u32()
cortex_m_examine()
    target_to_cm()
    target_to_armv7m()
    cortex_m_find_mem_ap()
        dap_find_get_ap()
    LOG_TARGET_ERROR()
    dap_get_ap()
    LOG_ERROR()
    mem_ap_init()
    target_was_examined()
    target_set_examined()
    target_read_u32()
    ARRAY_SIZE()
    LOG_TARGET_INFO()
    LOG_TARGET_WARNING()
    LOG_TARGET_DEBUG()
    cortex_m_has_tz()
        target_to_armv7m()
        target_read_u32()
        LOG_WARNING()
    cortex_m_cumulate_dhcsr_sticky()
    target_write_u32()
    armv7m_trace_itm_config()
        target_to_armv7m()
        target_write_u32()
        target_read_u32()
        timeval_ms()
        LOG_ERROR()
    free()
    calloc()
    cortex_m_dwt_free()
    cortex_m_dwt_setup()
        target_read_u32()
        LOG_TARGET_DEBUG()
        calloc()
        LOG_TARGET_ERROR()
        free()
        cortex_m_dwt_addreg()
            calloc()
        target_write_u32()
        register_get_last_cache_p()
cortex_m_halt()
    cortex_m_smp_halt_all()
        foreach_smp_target()
        target_was_examined()
        cortex_m_halt_one()
            LOG_TARGET_DEBUG()
            target_state_name()
            LOG_TARGET_WARNING()
            jtag_get_reset_config()
            jtag_get_srst()
            LOG_TARGET_ERROR()
            cortex_m_write_debug_halt_mask()
            cortex_m_set_maskints_for_halt()
                target_to_cm()
                cortex_m_set_maskints()
    cortex_m_halt_one()
cortex_m_hit_watchpoint()
    target_to_cm()
cortex_m_init_target()
    armv7m_build_reg_cache()
    arm_semihosting_init()
cortex_m_profiling()
    target_to_armv7m()
    target_read_u32()
    LOG_TARGET_ERROR()
    LOG_TARGET_INFO()
    target_profiling_default()
        gettimeofday()
        timeval_add_time()
        LOG_INFO()
        register_get_by_name()
        target_poll()
        buf_get_u32()
        target_resume()
        alive_sleep()
        target_halt()
        timeval_compare()
    gettimeofday()
    timeval_add_time()
    target_poll()
    target_resume()
    mem_ap_read_buf_noincr()
    timeval_compare()
cortex_m_read_memory()
    target_to_armv7m()
    mem_ap_read_buf()
        mem_ap_read()
cortex_m_remove_breakpoint()
    cortex_m_unset_breakpoint()
cortex_m_remove_watchpoint()
    target_to_cm()
    LOG_TARGET_ERROR()
    cortex_m_unset_watchpoint()
        target_to_cm()
        LOG_TARGET_WARNING()
        LOG_TARGET_DEBUG()
        target_write_u32()
    LOG_TARGET_DEBUG()
cortex_m_resume()
    cortex_m_restore_one()
        target_to_armv7m()
        LOG_TARGET_ERROR()
        target_free_all_working_areas()
        cortex_m_enable_breakpoints()
        cortex_m_enable_watchpoints()
        buf_set_u32()
        breakpoint_find()
        buf_get_u32()
        armv7m_maybe_skip_bkpt_inst()
        armv7m_restore_context()
        LOG_TARGET_DEBUG()
        cortex_m_unset_breakpoint()
        cortex_m_single_step_core()
            target_to_cm()
            cortex_m_write_debug_halt_mask()
            LOG_TARGET_DEBUG()
            cortex_m_clear_halt()
        cortex_m_set_breakpoint()
    LOG_TARGET_ERROR()
    cortex_m_restore_smp()
        foreach_smp_target()
        target_was_examined()
        cortex_m_restore_one()
        cortex_m_restart_one()
            target_to_armv7m()
            cortex_m_set_maskints_for_run()
            cortex_m_write_debug_halt_mask()
            register_cache_invalidate()
            target_call_event_callbacks()
        LOG_TARGET_DEBUG()
    LOG_WARNING()
    cortex_m_restart_one()
    LOG_TARGET_DEBUG()
cortex_m_soft_reset_halt()
    target_to_cm()
    LOG_TARGET_DEBUG()
    LOG_TARGET_ERROR()
    cortex_m_write_debug_halt_mask()
    mem_ap_write_u32()
    mem_ap_write_atomic_u32()
    register_cache_invalidate()
    cortex_m_read_dhcsr_atomic_sticky()
    mem_ap_read_atomic_u32()
    cortex_m_poll()
        cortex_m_poll_one()
            target_to_cm()
            cortex_m_read_dhcsr_atomic_sticky()
            LOG_TARGET_ERROR()
            cortex_m_write_debug_halt_mask()
            LOG_TARGET_INFO()
            LOG_TARGET_DEBUG()
            cortex_m_endreset_event()
                target_to_cm()
                mem_ap_read_atomic_u32()
                LOG_TARGET_DEBUG()
                mem_ap_write_u32()
                cortex_m_read_dhcsr_atomic_sticky()
                cortex_m_write_debug_halt_mask()
                cortex_m_set_maskints_for_run()
                cortex_m_enable_fpb()
                LOG_TARGET_ERROR()
                target_write_u32()
                dap_run()
                register_cache_invalidate()
            cortex_m_debug_entry()
                target_to_cm()
                LOG_TARGET_DEBUG()
                cortex_m_set_maskints_for_halt()
                cortex_m_clear_halt()
                cortex_m_read_dhcsr_atomic_sticky()
                mem_ap_read_u32()
                cortex_m_fast_read_all_regs()
                    target_to_cm()
                    target_to_armv7m()
                    mem_ap_read_u32()
                    armv7m_map_id_to_regsel()
                    cortex_m_queue_reg_read()
                        target_to_armv7m()
                        mem_ap_write_u32()
                        mem_ap_read_u32()
                    assert()
                    dap_run()
                    mem_ap_write_atomic_u32()
                    LOG_TARGET_DEBUG()
                    cortex_m_cumulate_dhcsr_sticky()
                    armv7m_map_reg_packing()
                    buf_cpy()
                    buf_set_u32()
                cortex_m_slow_read_all_regs()
                    target_to_cm()
                    target_to_armv7m()
                    LOG_TARGET_DEBUG()
                buf_get_u32()
                cortex_m_examine_exception_reason()
                    target_to_armv7m()
                    mem_ap_read_u32()
                    mem_ap_read_atomic_u32()
                    dap_run()
                    LOG_TARGET_DEBUG()
                    armv7m_exception_string()
                arm_mode_name()
                target_state_name()
            arm_semihosting()
            target_call_event_callbacks()
            register_cache_invalidate()
            LOG_TARGET_WARNING()
        list_last_entry()
        lh()
        cortex_m_poll_smp()
            halted()
            foreach_smp_target()
            cortex_m_smp_halt_all()
            cortex_m_smp_post_halt_poll()
                foreach_smp_target()
                target_was_examined()
                cortex_m_poll_one()
            LOG_TARGET_DEBUG()
            target_call_event_callbacks()
    alive_sleep()
cortex_m_step()
    target_to_cm()
    LOG_TARGET_ERROR()
    buf_set_u32()
    buf_get_u32()
    breakpoint_find()
    cortex_m_unset_breakpoint()
    armv7m_maybe_skip_bkpt_inst()
    armv7m_restore_context()
    target_call_event_callbacks()
    cortex_m_set_maskints_for_step()
        target_to_cm()
        cortex_m_set_maskints()
    cortex_m_write_debug_halt_mask()
    LOG_TARGET_DEBUG()
    cortex_m_set_maskints_for_halt()
    cortex_m_set_breakpoint()
    breakpoint_add()
    timeval_ms()
    cortex_m_set_maskints_for_run()
    cortex_m_read_dhcsr_atomic_sticky()
    breakpoint_remove()
    register_cache_invalidate()
    cortex_m_debug_entry()
cortex_m_target_create()
    adiv5_verify_config()
    calloc()
    LOG_TARGET_ERROR()
    cortex_m_init_arch_info()
        armv7m_init_arch_info()
        cortex_m_examine_debug_reason()
            target_to_cm()
        cortex_m_load_core_reg_u32()
            target_to_cm()
            target_to_armv7m()
            mem_ap_read_u32()
            mem_ap_write_u32()
            timeval_ms()
            mem_ap_read_atomic_u32()
            cortex_m_cumulate_dhcsr_sticky()
            LOG_TARGET_ERROR()
            keep_alive()
            mem_ap_write_atomic_u32()
        cortex_m_store_core_reg_u32()
            target_to_cm()
            target_to_armv7m()
            mem_ap_read_u32()
            mem_ap_write_u32()
            timeval_ms()
            cortex_m_read_dhcsr_atomic_sticky()
            LOG_TARGET_ERROR()
            keep_alive()
            mem_ap_write_atomic_u32()
        target_register_timer_callback()
        cortex_m_handle_target_request()
            target_was_examined()
            cortex_m_dcc_read()
                target_to_armv7m()
                mem_ap_read_buf_noincr()
                target_buffer_get_u16()
                LOG_TARGET_DEBUG()
                target_buffer_set_u16()
                mem_ap_write_buf_noincr()
            target_request()
cortex_m_target_request_data()
    cortex_m_dcc_read()
cortex_m_write_memory()
    target_to_armv7m()
    mem_ap_write_buf()
        mem_ap_write()
cortex_r4_target_create()
    adiv5_verify_config()
    calloc()
    LOG_ERROR()
    cortex_a_init_arch_info()
cortexm_select_stackinfo()
    cortexm_hasfpu()
        target_to_armv7m()
        is_armv7m()
        target_read_u32()
        LOG_ERROR()
cpu_context_read()
    calloc()
    fill_buffer()
        LOG_INFO()
        linux_read_memory()
            LOG_ERROR()
            target_read_phys_memory()
                target_was_examined()
                LOG_ERROR()
                target_name()
            target_read_memory()
    get_buffer()
        target_buffer_get_u32()
    LOG_ERROR()
    LOG_INFO()
    linux_read_memory()
    free()
    target_buffer_get_u32()
dap_to_jtag()
    LOG_DEBUG()
    dap_send_sequence()
dap_to_swd()
    LOG_DEBUG()
    dap_send_sequence()
dapdirect_init()
    jtag_get_reset_config()
    LOG_DEBUG()
    adapter_assert_reset()
    LOG_WARNING()
    adapter_deassert_reset()
dapdirect_jtag_select()
    LOG_DEBUG()
    register_commands()
dapdirect_swd_select()
    LOG_DEBUG()
    register_commands()
davinci_address()
    halted()
    target_write_u8()
davinci_init()
    halted()
    target_read_u32()
    LOG_ERROR()
davinci_read_data()
    halted()
    target_read_u8()
davinci_read_page()
    halted()
davinci_reset()
davinci_write_data()
    halted()
    target_write_u8()
davinci_write_page()
    halted()
    LOG_ERROR()
    malloc()
    memset()
    free()
deassert_reset()
    jtag_add_ir_scan()
    wait_for_state()
        time()
        riscv011_poll()
            poll_target()
                jtag_add_ir_scan()
                read_bits()
                LOG_DEBUG()
                handle_halt()
                    get_info()
                    handle_halt_routine()
                        get_info()
                        scans_new()
                            malloc()
                            riscv_xlen()
                                RISCV_INFO()
                            calloc()
                            free()
                        scans_add_write_jump()
                            scans_add_write32()
                                add_dbus_scan()
                                    get_info()
                                    RISCV_INFO()
                                    buf_set_u64()
                                    jtag_add_dr_scan()
                                    jtag_add_runtest()
                                assert()
                            jal()
                        scans_add_write_store()
                            scans_add_write32()
                            store_slot()
                                slot_offset()
                                    get_info()
                                    riscv_xlen()
                                    LOG_ERROR()
                                    assert()
                                store()
                        scans_add_write_load()
                            scans_add_write32()
                            load_slot()
                                slot_offset()
                                load()
                        scans_add_read()
                            riscv_xlen()
                            scans_add_read32()
                                assert()
                                add_dbus_scan()
                            slot_offset()
                        ARRAY_SIZE()
                        scans_add_write32()
                        csrr()
                        scans_add_read32()
                        scans_execute()
                            jtag_execute_queue()
                            LOG_ERROR()
                            scans_dump()
                                dump_field()
                        LOG_ERROR()
                        reg_cache_set()
                            LOG_DEBUG()
                            buf_set_u64()
                        scans_get_u32()
                            buf_get_u32()
                        scans_get_u64()
                            buf_get_u64()
                        assert()
                        riscv_xlen()
                        scans_delete()
                            assert()
                            free()
                        increase_dbus_busy_delay()
                        increase_interrupt_high_delay()
                            get_info()
                            LOG_DEBUG()
                        reg_cache_get()
                            LOG_ERROR()
                            assert()
                            buf_get_u64()
                            LOG_DEBUG()
                        cache_invalidate()
                    LOG_ERROR()
                    get_field()
                    maybe_read_tselect()
                        get_info()
                        read_remote_csr()
                            get_info()
                            cache_set32()
                                get_info()
                                LOG_DEBUG()
                            csrr()
                            cache_set_store()
                                slot_offset()
                                cache_set32()
                                store()
                            cache_set_jump()
                                cache_set32()
                                jal()
                            cache_write()
                                LOG_DEBUG()
                                get_info()
                                scans_new()
                                dbus_write()
                                scans_add_write32()
                                scans_add_read32()
                                scans_execute()
                                scans_delete()
                                LOG_ERROR()
                                scans_get_u32()
                                increase_dbus_busy_delay()
                                dram_write32()
                                cache_clean()
                                    get_info()
                                wait_for_debugint_clear()
                                dump_debug_ram()
                                    dram_read32()
                                        dram_address()
                                        dbus_read()
                                    LOG_ERROR()
                                increase_interrupt_high_delay()
                                LOG_INFO()
                            cache_get()
                                slot_offset()
                                cache_get32()
                                    get_info()
                                    dram_read32()
                                riscv_xlen()
                            LOG_DEBUG()
                            cache_get32()
                            LOG_WARNING()
                            gdb_regno_name()
                                sprintf()
                    riscv_enumerate_triggers()
                        RISCV_INFO()
                        riscv_get_register()
                            RISCV_INFO()
                            keep_alive()
                            LOG_DEBUG()
                            target_name()
                            gdb_regno_name()
                            buf_get_u64()
                            riscv_supports_extension()
                                RISCV_INFO()
                                BIT()
                            gdb_regno_cacheable()
                        LOG_DEBUG()
                        target_name()
                        riscv_set_register()
                            RISCV_INFO()
                            LOG_DEBUG()
                            target_name()
                            gdb_regno_name()
                            assert()
                            keep_alive()
                            riscv_supports_extension()
                            buf_set_u64()
                            gdb_regno_cacheable()
                        riscv_xlen()
                        get_field()
                        MCONTROL_TYPE()
                        MCONTROL_DMODE()
                        LOG_INFO()
                    riscv_semihosting()
                        LOG_DEBUG()
                        riscv_get_register()
                        target_buffer_get_u32()
                        ebreak()
                        riscv_xlen()
                        semihosting_common()
                        LOG_ERROR()
                        riscv_set_register()
                    target_call_event_callbacks()
                    LOG_USER()
        LOG_ERROR()
deassert_reset()
    RISCV_INFO()
    RISCV013_INFO()
    select_dmi()
    set_field()
    dmi_write()
    set_hartsel()
    time()
decode_dmi()
default_flash_free_driver_priv()
    free()
default_handler()
deinit_target()
    LOG_DEBUG()
    free()
deinit_target()
    LOG_DEBUG()
    free()
dmem_ap_q_abort()
dmem_ap_q_read()
    is_adiv6()
    LOG_ERROR()
    dmem_is_emulated_ap()
    dmem_emu_ap_q_read()
        dmem_emu_get_ap_reg()
        dmem_memap_tar_inc()
        LOG_INFO()
    dmem_get_ap_reg()
        dmem_get_ap_reg_offset()
dmem_ap_q_write()
    is_adiv6()
    LOG_ERROR()
    dmem_is_emulated_ap()
    dmem_emu_ap_q_write()
        dmem_emu_set_ap_reg()
        dmem_memap_tar_inc()
        LOG_INFO()
    dmem_set_ap_reg()
        dmem_get_ap_reg_offset()
dmem_connect()
dmem_dap_init()
    sysconf()
    LOG_ERROR()
    open()
    ALIGN_DOWN()
    ALIGN_UP()
    mmap()
    close()
dmem_dap_khz()
dmem_dap_quit()
    munmap()
    LOG_ERROR()
dmem_dap_reset()
dmem_dap_speed()
dmem_dap_speed_div()
dmem_dp_q_read()
dmem_dp_q_write()
dmem_dp_run()
dpmv8_bpwp_enable()
    LOG_DEBUG()
    mem_ap_write_atomic_u32()
dragonite_target_create()
    calloc()
    arm966e_init_arch_info()
    feroceon_common_setup()
        feroceon_change_to_arm()
            feroceon_dummy_clock_out()
                buf_set_u32()
                flip_u32()
                arm_jtag_scann()
                arm_jtag_set_instr()
                jtag_add_dr_scan()
            arm9tdmi_clock_out()
            ARMV4_5_T_STR()
            ARMV4_5_T_MOV()
            ARMV4_5_T_BX()
            jtag_execute_queue()
        feroceon_read_core_regs()
            arm9tdmi_clock_out()
            ARMV4_5_STMIA()
            arm9tdmi_clock_data_in()
        feroceon_read_core_regs_target_buffer()
            arm9tdmi_clock_out()
            ARMV4_5_STMIA()
            arm9tdmi_clock_data_in_endianness()
        feroceon_read_xpsr()
            arm9tdmi_clock_out()
            ARMV4_5_MRS()
            ARMV4_5_STMIA()
        feroceon_write_xpsr()
            LOG_DEBUG()
            arm9tdmi_clock_out()
            ARMV4_5_MSR_IM()
        feroceon_write_xpsr_im8()
            LOG_DEBUG()
            arm9tdmi_clock_out()
            ARMV4_5_MSR_IM()
        feroceon_write_core_regs()
            arm9tdmi_clock_out()
            ARMV4_5_LDMIA()
        feroceon_branch_resume()
            arm9tdmi_clock_out()
            ARMV4_5_B()
        feroceon_branch_resume_thumb()
            LOG_DEBUG()
            buf_get_u32()
            arm9tdmi_clock_out()
            ARMV4_5_BX()
            ARMV4_5_T_LDMIA()
            ARMV4_5_T_B()
        feroceon_enable_single_step()
            embeddedice_write_reg()
        feroceon_disable_single_step()
            embeddedice_store_reg()
        feroceon_bulk_write_memory()
            target_alloc_working_area()
            LOG_INFO()
            target_buffer_set_u32_array()
            ARRAY_SIZE()
            arm7_9_write_memory_no_opt()
            buf_get_u32()
            buf_set_u32()
            embeddedice_write_reg()
            arm7_9_resume()
                target_to_arm7_9()
                LOG_DEBUG()
                LOG_TARGET_ERROR()
                target_free_all_working_areas()
                buf_set_u32()
                buf_get_u32()
                breakpoint_find()
                arm7_9_unset_breakpoint()
                arm_simulate_step()
                target_read_u32()
                LOG_ERROR()
                arm7_9_restore_context()
                embeddedice_write_reg()
                arm7_9_execute_sys_speed()
                arm7_9_set_breakpoint()
                arm7_9_debug_entry()
                arm7_9_enable_breakpoints()
                    arm7_9_set_breakpoint()
                arm7_9_enable_watchpoints()
                    arm7_9_set_watchpoint()
                        target_to_arm7_9()
                        LOG_TARGET_ERROR()
                        embeddedice_set_reg()
                        jtag_execute_queue()
                        watchpoint_set()
                        LOG_ERROR()
                arm7_9_restart_core()
                    target_to_arm7_9()
                    arm_jtag_set_instr()
                    jtag_add_runtest()
                    jtag_execute_queue()
                register_cache_invalidate()
                target_call_event_callbacks()
            target_buffer_get_u32()
            target_halt()
            target_wait_state()
            LOG_ERROR()
        feroceon_examine_debug_reason()
        feroceon_set_dbgrq()
            buf_set_u32()
            embeddedice_store_reg()
    arm7_9_write_memory()
dsp563xx_add_breakpoint()
    dsp563xx_add_custom_watchpoint()
        target_to_dsp563xx()
        dsp563xx_halt()
            LOG_DEBUG()
            LOG_WARNING()
            dsp563xx_jtag_debug_request()
                dsp563xx_once_request_debug()
                    dsp563xx_jtag_sendinstr()
                        dsp563xx_write_ir_u8()
                            dsp563xx_write_ir()
                                jtag_add_plain_ir_scan()
                    jtag_execute_queue()
                    LOG_DEBUG()
        LOG_ERROR()
        OBCR_BP_0()
        dsp563xx_once_reg_write()
            dsp563xx_once_ir_exec()
                dsp563xx_write_dr_u8()
                    dsp563xx_write_dr()
                        jtag_add_plain_dr_scan()
                jtag_execute_queue()
            dsp563xx_write_dr_u32()
                dsp563xx_write_dr()
            jtag_execute_queue()
        dsp563xx_resume()
            target_to_dsp563xx()
            dsp563xx_write_core_reg()
                target_to_dsp563xx()
                buf_get_u32()
            LOG_DEBUG()
            dsp563xx_restore_context()
                dsp563xx_write_register()
                    target_to_dsp563xx()
                    dsp563xx_reg_ssh_write()
                        target_to_dsp563xx()
                        dsp563xx_read_register()
                            target_to_dsp563xx()
                            dsp563xx_reg_ssh_read()
                                target_to_dsp563xx()
                                dsp563xx_read_register()
                                dsp563xx_write_register()
                                dsp563xx_reg_read()
                                    INSTR_MOVEP_REG_HIO()
                                    dsp563xx_once_execute_sw_ir()
                                        dsp563xx_once_ir_exec()
                                        dsp563xx_write_dr_u32()
                                        jtag_execute_queue()
                                    dsp563xx_once_reg_read()
                                        dsp563xx_once_ir_exec()
                                        dsp563xx_write_dr_u32()
                                        jtag_execute_queue()
                            dsp563xx_reg_ssl_read()
                                target_to_dsp563xx()
                                dsp563xx_read_register()
                                dsp563xx_reg_read()
                            dsp563xx_reg_pc_read()
                                target_to_dsp563xx()
                                LOG_DEBUG()
                            dsp563xx_reg_read_high_io()
                                target_to_dsp563xx()
                                INSTR_MOVEP_REG_HIO()
                                dsp563xx_once_execute_sw_ir()
                                dsp563xx_once_reg_read()
                            dsp563xx_reg_read()
                        dsp563xx_write_register()
                        dsp563xx_reg_write()
                            dsp563xx_once_execute_dw_ir()
                                dsp563xx_once_ir_exec()
                                dsp563xx_write_dr_u32()
                                jtag_execute_queue()
                            dsp563xx_once_execute_sw_ir()
                    dsp563xx_reg_write_high_io()
                        target_to_dsp563xx()
                        dsp563xx_once_execute_dw_ir()
                        INSTR_MOVEP_REG_HIO()
                        dsp563xx_once_execute_sw_ir()
                    dsp563xx_reg_write()
            register_cache_invalidate()
            dsp563xx_once_reg_write()
            target_call_event_callbacks()
dsp563xx_add_watchpoint()
dsp563xx_arch_state()
    LOG_DEBUG()
dsp563xx_assert_reset()
    target_to_dsp563xx()
    jtag_get_reset_config()
    jtag_add_reset()
    jtag_add_sleep()
    register_cache_invalidate()
    target_halt()
    LOG_DEBUG()
dsp563xx_deassert_reset()
    jtag_add_reset()
    dsp563xx_poll()
        target_to_dsp563xx()
        dsp563xx_once_target_status()
            dsp563xx_jtag_sendinstr()
            jtag_execute_queue()
        LOG_ERROR()
        dsp563xx_once_reg_read()
        dsp563xx_debug_init()
            target_to_dsp563xx()
            dsp563xx_debug_once_init()
                dsp563xx_once_read_register()
                    dsp563xx_once_reg_read_ex()
                        dsp563xx_once_ir_exec()
                        dsp563xx_write_dr_u32()
                        jtag_execute_queue()
                    jtag_execute_queue()
            dsp563xx_read_register()
            dsp563xx_once_execute_dw_ir()
            dsp563xx_reg_write()
            dsp563xx_save_context()
                dsp563xx_read_register()
        target_call_event_callbacks()
        LOG_DEBUG()
        target_state_name()
        LOG_INFO()
        dsp563xx_once_reg_write()
    dsp563xx_step_ex()
        target_to_dsp563xx()
        LOG_DEBUG()
        dsp563xx_write_core_reg()
        dsp563xx_jtag_debug_request()
        dsp563xx_restore_context()
        dsp563xx_once_reg_write()
        dsp563xx_once_reg_read()
        register_cache_invalidate()
        dsp563xx_debug_init()
    LOG_DEBUG()
dsp563xx_examine()
    LOG_ERROR()
    target_was_examined()
    target_set_examined()
    LOG_INFO()
    dsp563xx_once_reg_write()
dsp563xx_get_core_reg()
    target_to_dsp563xx()
    LOG_DEBUG()
dsp563xx_get_gdb_reg_list()
    target_to_dsp563xx()
    malloc()
dsp563xx_init_target()
    LOG_DEBUG()
    dsp563xx_build_reg_cache()
        target_to_dsp563xx()
        register_get_last_cache_p()
        malloc()
        calloc()
    target_to_dsp563xx()
dsp563xx_read_buffer_default()
    dsp563xx_read_memory()
        LOG_DEBUG()
        dsp563xx_read_memory_core()
            target_to_dsp563xx()
            LOG_DEBUG()
            LOG_WARNING()
            dsp563xx_once_execute_dw_ir()
            dsp563xx_once_execute_sw_ir()
            dsp563xx_once_reg_read()
            jtag_execute_queue()
            buf_get_u32()
            target_buffer_set_u32()
        malloc()
        free()
        buf_set_u32()
        buf_get_u32()
    dsp563xx_get_default_memory()
        Jim_GetGlobalVariableStr()
        Jim_GetString()
dsp563xx_read_memory_default()
    dsp563xx_read_memory()
    dsp563xx_get_default_memory()
dsp563xx_remove_breakpoint()
    dsp563xx_remove_custom_watchpoint()
        target_to_dsp563xx()
        LOG_ERROR()
        dsp563xx_once_reg_write()
dsp563xx_remove_watchpoint()
dsp563xx_run_algorithm()
    target_to_dsp563xx()
    LOG_TARGET_ERROR()
    target_write_buffer()
    register_get_by_name()
    LOG_ERROR()
    dsp563xx_set_core_reg()
        LOG_DEBUG()
        buf_get_u32()
        buf_set_u32()
    target_resume()
    target_wait_state()
    target_read_buffer()
    buf_set_u32()
    buf_get_u32()
dsp563xx_step()
    target_to_dsp563xx()
    LOG_TARGET_ERROR()
    dsp563xx_step_ex()
    target_call_event_callbacks()
    LOG_INFO()
dsp563xx_target_create()
    calloc()
    dsp563xx_read_core_reg()
        target_to_dsp563xx()
        buf_set_u32()
    dsp563xx_write_core_reg()
dsp563xx_write_buffer_default()
    dsp563xx_write_memory()
        LOG_DEBUG()
        dsp563xx_write_memory_core()
            target_to_dsp563xx()
            LOG_DEBUG()
            LOG_TARGET_ERROR()
            dsp563xx_invalidate_x_context()
                target_to_dsp563xx()
            dsp563xx_once_execute_dw_ir()
            target_buffer_get_u32()
            dsp563xx_once_execute_sw_ir()
            jtag_execute_queue()
        malloc()
        free()
        buf_set_u32()
        buf_get_u32()
    dsp563xx_get_default_memory()
dsp563xx_write_memory_default()
    dsp563xx_write_memory()
    dsp563xx_get_default_memory()
dsp5680xx_arch_state()
    LOG_USER()
dsp5680xx_assert_reset()
dsp5680xx_checksum_memory()
dsp5680xx_deassert_reset()
dsp5680xx_exe1()
    eonce_instruction_exec_single()
        jtag_data_write()
            dsp5680xx_drscan()
                err_check()
                jtag_add_plain_dr_scan()
                dsp5680xx_execute_queue()
                    jtag_execute_queue()
                LOG_DEBUG()
            err_check_propagate()
        err_check_propagate()
    err_check_propagate()
    jtag_data_write16()
dsp5680xx_exe2()
    eonce_instruction_exec_single()
    err_check_propagate()
    jtag_data_write16()
dsp5680xx_exe3()
    eonce_instruction_exec_single()
    err_check_propagate()
    jtag_data_write16()
dsp5680xx_flash_erase()
    dsp5680xx_f_erase()
        dsp5680xx_halt()
            LOG_USER()
            eonce_enter_debug_mode()
                eonce_enter_debug_mode_without_reset()
                    dsp5680xx_irscan()
                        err_check()
                        jtag_tap_by_string()
                        jtag_add_plain_ir_scan()
                        dsp5680xx_execute_queue()
                    err_check_propagate()
                    eonce_read_status_reg()
                        dsp5680xx_read_core_reg()
                            eonce_instruction_exec_single()
                            err_check_propagate()
                            dsp5680xx_drscan()
                            LOG_DEBUG()
                        err_check_propagate()
                    LOG_DEBUG()
                jtag_tap_by_string()
                err_check()
                dsp5680xx_irscan()
                err_check_propagate()
                jtag_add_sleep()
                jtag_add_reset()
                dsp5680xx_drscan()
                switch_tap()
                    jtag_tap_by_string()
                    err_check()
                    LOG_WARNING()
                    dsp5680xx_irscan()
                    err_check_propagate()
                    dsp5680xx_drscan()
                eonce_read_status_reg()
                LOG_DEBUG()
            err_check_propagate()
            eonce_pc_store()
                core_move_pc_to_r4()
                err_check_propagate()
                core_move_r4_to_y()
                eonce_load_tx_rx_to_r0()
                    core_move_long_to_r0()
                core_move_y0_at_r0()
                core_rx_lower_data()
                    eonce_instruction_exec_single()
                    err_check_propagate()
                    jtag_data_read16()
                LOG_USER()
        err_check_propagate()
        dsp5680xx_f_sim_reset()
            strcmp()
            dsp5680xx_write()
                check_halt_and_debug()
                dsp5680xx_convert_address()
                err_check_propagate()
                dsp5680xx_write_8()
                    dsp5680xx_write_16_single()
                        core_move_long_to_r0()
                        err_check_propagate()
                        core_move_value_to_y0()
                        core_move_y0_at_pr0_inc()
                        core_move_value_at_r0()
                    LOG_ERROR()
                    dsp5680xx_read()
                        check_halt_and_debug()
                        dsp5680xx_convert_address()
                        err_check_propagate()
                        dsp5680xx_read_16_single()
                            core_move_long_to_r0()
                            err_check_propagate()
                            core_move_at_pr0_inc_to_y0()
                            core_move_at_r0_to_y0()
                            eonce_load_tx_rx_to_r0()
                            core_move_y0_at_r0()
                            core_rx_lower_data()
                            LOG_DEBUG()
                        dsp5680xx_read_32_single()
                            core_move_long_to_r0()
                            err_check_propagate()
                            core_move_at_pr0_inc_to_y0()
                            core_move_at_pr0_inc_to_y1()
                            core_move_at_r0_inc_to_y0()
                            core_move_at_r0_to_y1()
                            eonce_load_tx_rx_to_r0()
                            core_move_y0_at_r0_inc()
                            core_move_y1_at_r0()
                            core_rx_lower_data()
                            core_rx_upper_data()
                                eonce_instruction_exec_single()
                                err_check_propagate()
                                jtag_data_read16()
                        LOG_USER()
                        dsp5680xx_execute_queue()
                    err_check_propagate()
                dsp5680xx_write_16()
                    dsp5680xx_write_16_single()
                    LOG_ERROR()
                dsp5680xx_write_32()
                    dsp5680xx_write_32_single()
                        core_move_long_to_r0()
                        err_check_propagate()
                        core_move_long_to_y()
                        core_move_y0_at_pr0_inc()
                        core_move_y0_at_r0_inc()
                        core_move_y1_at_pr0_inc()
                        core_move_y1_at_r0_inc()
                    LOG_ERROR()
                err_check()
            err_check_propagate()
        set_fm_ck_div()
            core_move_long_to_r2()
            err_check_propagate()
            core_load_tx_rx_high_addr_to_r0()
                core_move_long_to_r0()
            core_move_at_r2_to_y0()
            core_move_y0_at_r0()
            core_rx_upper_data()
            LOG_DEBUG()
            core_move_value_at_r2()
            err_check()
        mass_erase()
            dsp5680xx_f_ex()
                core_load_tx_rx_high_addr_to_r0()
                err_check_propagate()
                core_move_long_to_r2()
                core_move_at_r2_disp_to_y0()
                core_move_y0_at_r0()
                core_rx_upper_data()
                err_check()
                core_move_value_at_r2_disp()
                core_move_value_to_y0()
                core_move_long_to_r3()
                core_move_y0_at_pr3_inc()
                core_move_y0_at_r3()
                dsp5680xx_execute_queue()
dsp5680xx_flash_erase_check()
    dsp5680xx_f_erase_check()
        dsp5680xx_halt()
        err_check_propagate()
        set_fm_ck_div()
        dsp5680xx_f_ex()
dsp5680xx_flash_protect()
    dsp5680xx_f_lock()
        dsp5680xx_f_wr()
            eonce_enter_debug_mode()
            err_check_propagate()
            dsp5680xx_write()
            dsp5680xx_execute_queue()
            set_fm_ck_div()
            core_move_long_to_r3()
            core_load_tx_rx_high_addr_to_r0()
            core_move_long_to_r2()
            core_move_value_at_r2_disp()
            err_check()
            core_tx_upper_data()
                eonce_instruction_exec_single()
                err_check_propagate()
                jtag_data_write16()
            dsp5680xx_resume()
                LOG_USER()
                core_move_value_to_pc()
                    check_halt_and_debug()
                    dsp5680xx_exe_generic()
                    err_check_propagate()
                err_check_propagate()
                eonce_exit_debug_mode()
                    eonce_instruction_exec_single()
                    err_check_propagate()
                err_check()
                LOG_DEBUG()
                jtag_add_reset()
                jtag_add_sleep()
                reset_jtag()
                    tap_state_by_name()
                        ARRAY_SIZE()
                        strcasecmp()
                    jtag_add_statemove()
                    err_check_propagate()
                    jtag_execute_queue()
                    jtag_add_pathmove()
                dsp5680xx_jtag_status()
                    dsp5680xx_irscan()
                    err_check_propagate()
            dsp5680xx_f_signature()
                eonce_enter_debug_mode_without_reset()
                err_check()
                dsp5680xx_f_ex()
                err_check_propagate()
                dsp5680xx_read_16_single()
            perl_crc()
        err_check_propagate()
        jtag_add_reset()
        jtag_add_sleep()
        reset_jtag()
        err_check()
        jtag_tap_by_string()
        switch_tap()
    dsp5680xx_f_unlock()
        jtag_tap_by_string()
        err_check()
        eonce_enter_debug_mode_without_reset()
        LOG_WARNING()
        jtag_add_reset()
        jtag_add_sleep()
        reset_jtag()
        switch_tap()
        err_check_propagate()
        dsp5680xx_irscan()
        dsp5680xx_drscan()
dsp5680xx_flash_protect_check()
    dsp5680xx_f_protect_check()
        check_halt_and_debug()
        err_check()
        dsp5680xx_read_16_single()
        err_check_propagate()
dsp5680xx_flash_write()
    LOG_ERROR()
    dsp5680xx_f_wr()
dsp5680xx_init_target()
    LOG_DEBUG()
dsp5680xx_poll()
    dsp5680xx_jtag_status()
    err_check_propagate()
    eonce_enter_debug_mode()
    LOG_WARNING()
    dsp5680xx_halt()
    eonce_exit_debug_mode()
    eonce_read_status_reg()
    LOG_ERROR()
dsp5680xx_probe()
    LOG_DEBUG()
dsp5680xx_read_buffer()
    check_halt_and_debug()
    dsp5680xx_read()
dsp5680xx_soft_reset_halt()
    dsp5680xx_halt()
    err_check_propagate()
    dsp5680xx_f_sim_reset()
dsp5680xx_step()
    err_check()
dsp5680xx_target_create()
    calloc()
dsp5680xx_write_buffer()
    check_halt_and_debug()
    dsp5680xx_write()
dummy_init()
dummy_khz()
dummy_led()
dummy_quit()
dummy_read()
dummy_reset()
    jtag_get_reset_config()
    LOG_DEBUG()
    tap_state_name()
dummy_speed()
dummy_speed_div()
dummy_write()
    tap_state_transition()
    LOG_DEBUG()
    tap_state_name()
ecos_create()
    ARRAY_SIZE()
    strcmp()
    ecos_packet_hook()
        sscanf()
        get_target_from_connection()
        rtos_thread_packet()
            get_target_from_connection()
            strncmp()
            sscanf()
            gdb_put_packet()
                gdb_put_packet_inner()
                    check_pending()
                        FD_ZERO()
                        FD_SET()
                        socket_select()
                        FD_ISSET()
                    gdb_get_char()
                        gdb_get_char_fast()
                            LOG_DEBUG()
                            gdb_get_char_inner()
                                read()
                                check_pending()
                                read_socket()
                                LOG_DEBUG()
                                WSAGetLastError()
                                usleep()
                                log_socket_error()
                                strndup()
                                free()
                    gdb_putback_char()
                        LOG_ERROR()
                    LOG_DEBUG()
                    LOG_WARNING()
                    gdb_log_outgoing_packet()
                        LOG_LEVEL_IS()
                        get_target_from_connection()
                        find_nonprint_char()
                            isprint()
                        LOG_TARGET_DEBUG()
                    memcpy()
                    snprintf()
                    gdb_write()
                        LOG_DEBUG()
                        connection_write()
                        LOG_WARNING()
                    gdb_log_incoming_packet()
                        LOG_LEVEL_IS()
                        get_target_from_connection()
                        strlen()
                        find_nonprint_char()
                        memchr()
                        MIN()
                        LOG_TARGET_DEBUG()
                    LOG_ERROR()
                kept_alive()
                    timeval_ms()
                    gdb_timeout_warning()
            strlen()
            calloc()
            sprintf()
            assert()
            malloc()
            hexify()
            free()
            rtos_qsymbol()
                get_target_from_connection()
                sprintf()
                unhexify()
                    memset()
                strchr()
                strlen()
                strcmp()
                sscanf()
                find_symbol()
                    strcmp()
                LOG_WARNING()
                rtos_try_next()
                    free()
                LOG_DEBUG()
                next_symbol()
                    find_symbol()
                LOG_INFO()
                assert()
                LOG_ERROR()
                snprintf()
                hexify()
                gdb_put_packet()
            snprintf()
            LOG_DEBUG()
    LOG_ERROR()
ecos_detect_rtos()
ecos_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
ecos_get_thread_reg_list()
    ecos_check_app_info()
        ARRAY_SIZE()
        LOG_DEBUG()
        ecos_value()
            ARRAY_SIZE()
            LOG_ERROR()
        LOG_WARNING()
    target_read_buffer()
    LOG_ERROR()
    rtos_generic_stack_read()
ecos_stack_layout_arm()
    ecos_value()
    ARRAY_SIZE()
ecos_stack_layout_cortexm()
    ecos_value()
    rtos_generic_stack_align8()
        rtos_generic_stack_align()
ecos_update_threads()
    rtos_free_threadlist()
    LOG_ERROR()
    ecos_check_app_info()
    target_read_buffer()
    malloc()
    strcpy()
    snprintf()
    ecos_escape_string()
        memset()
        strcspn()
        memcpy()
        strchr()
        LOG_ERROR()
    strlen()
    strcat()
    ecos_value()
    ARRAY_SIZE()
efinix_get_ipdbg_hub()
    LOG_ERROR()
efinix_load()
    jtag_add_tlr()
    efinix_set_instr()
        calloc()
        DIV_ROUND_UP()
        LOG_ERROR()
        buf_set_u32()
        jtag_add_ir_scan()
        free()
    jtag_add_runtest()
    jtag_execute_queue()
    efinix_read_file()
        strrchr()
        LOG_ERROR()
        strcasecmp()
        cpld_read_raw_bit_file()
            fopen()
            LOG_ERROR()
            strerror()
            fseek()
            ftell()
            fclose()
            malloc()
            fread()
            free()
        efinix_read_bit_file()
            fopen()
            LOG_ERROR()
            strerror()
            fseek()
            ftell()
            fclose()
            DIV_ROUND_UP()
            malloc()
            fread()
            feof()
            free()
            isxdigit()
            unhexify()
    flip_u32()
    calloc()
    free()
    LOG_ERROR()
    jtag_add_dr_scan()
efm32x_auto_probe()
    efm32x_get_bank_index()
    assert()
    efm32x_probe()
        efm32x_get_bank_index()
        assert()
        memset()
        efm32x_read_info()
            memset()
            efm32x_get_flash_size()
                target_read_u16()
            efm32x_get_ram_size()
                target_read_u16()
            efm32x_get_part_num()
                target_read_u16()
            efm32x_get_part_family()
                target_read_u8()
            efm32x_get_prod_rev()
                target_read_u8()
            ARRAY_SIZE()
            LOG_ERROR()
            target_read_u8()
        LOG_INFO()
        free()
        efm32x_read_lock_data()
            assert()
            target_read_u32()
            LOG_ERROR()
        LOG_ERROR()
        malloc()
efm32x_erase()
    LOG_ERROR()
    efm32x_msc_lock()
        efm32x_write_reg_u32()
            target_write_u32()
    efm32x_set_wren()
        efm32x_set_reg_bits()
            efm32x_read_reg_u32()
                target_read_u32()
            efm32x_write_reg_u32()
    efm32x_erase_page()
        LOG_DEBUG()
        efm32x_write_reg_u32()
        efm32x_set_reg_bits()
        efm32x_read_reg_u32()
        LOG_ERROR()
        efm32x_wait_status()
            efm32x_read_reg_u32()
            LOG_DEBUG()
            LOG_ERROR()
            alive_sleep()
            LOG_WARNING()
    efm32x_write_only_lockbits()
        efm32x_priv_write()
            LOG_ERROR()
            malloc()
            LOG_INFO()
            memset()
            memcpy()
            efm32x_msc_lock()
            efm32x_set_wren()
            efm32x_write_block()
                target_alloc_working_area()
                LOG_WARNING()
                target_write_buffer()
                target_alloc_working_area_try()
                target_free_working_area()
                init_reg_param()
                buf_set_u32()
                target_run_flash_async_algorithm()
                LOG_ERROR()
                buf_get_u32()
                destroy_reg_param()
            LOG_WARNING()
            efm32x_write_word()
                keep_alive()
                efm32x_write_reg_u32()
                efm32x_set_reg_bits()
                efm32x_read_reg_u32()
                LOG_DEBUG()
                LOG_ERROR()
                efm32x_wait_status()
            free()
efm32x_free_driver_priv()
    free()
efm32x_protect()
    LOG_ERROR()
    efm32x_set_page_lock()
        LOG_ERROR()
    efm32x_write_lock_data()
        assert()
        malloc()
        target_read_buffer()
        LOG_ERROR()
        free()
        efm32x_erase_page()
        efm32x_priv_write()
        efm32x_write_only_lockbits()
efm32x_protect_check()
    LOG_ERROR()
    efm32x_read_lock_data()
    assert()
    efm32x_get_page_lock()
efm32x_write()
    LOG_ERROR()
    efm32x_priv_write()
em357_auto_probe()
    em357_probe()
        LOG_WARNING()
        target_write_u32()
        LOG_INFO()
        free()
        malloc()
em357_erase()
    LOG_ERROR()
    em357_mass_erase()
        LOG_ERROR()
        target_write_u32()
        em357_wait_status_busy()
            em357_get_flash_status()
                target_read_u32()
            LOG_DEBUG()
            LOG_ERROR()
            alive_sleep()
            target_write_u32()
    target_write_u32()
    em357_wait_status_busy()
em357_protect()
    LOG_ERROR()
    LOG_WARNING()
    target_read_u32()
    em357_erase_options()
        em357_read_options()
            target_read_u32()
            LOG_INFO()
        target_write_u32()
        em357_wait_status_busy()
    em357_write_options()
        target_write_u32()
        em357_wait_status_busy()
        target_write_u16()
em357_protect_check()
    LOG_ERROR()
    target_read_u32()
em357_write()
    LOG_ERROR()
    LOG_WARNING()
    target_write_u32()
    em357_write_block()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_buffer()
        target_alloc_working_area_try()
        target_free_working_area()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        LOG_ERROR()
        buf_get_u32()
        target_write_u32()
        destroy_reg_param()
    memcpy()
    target_write_u16()
    em357_wait_status_busy()
embeddedice_get_reg()
    embeddedice_read_reg()
    LOG_ERROR()
    jtag_execute_queue()
embkernel_create()
    ARRAY_SIZE()
    strcmp()
    LOG_WARNING()
embkernel_detect_rtos()
embkernel_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
embkernel_get_thread_reg_list()
    target_read_buffer()
    LOG_ERROR()
    rtos_generic_stack_read()
embkernel_update_threads()
    LOG_ERROR()
    rtos_free_threadlist()
    target_read_buffer()
    malloc()
    embkernel_get_tasks_details()
        target_read_buffer()
        malloc()
        snprintf()
        LOG_OUTPUT()
    LOG_OUTPUT()
ep0ack_isr()
ep0in_isr()
ep0out_isr()
ep0pingnak_isr()
ep1_memory_read()
    memset()
    jtag_libusb_bulk_write()
    jtag_libusb_bulk_read()
ep1_memory_writel()
    va_start()
    va_arg()
    ep1_memory_write()
        memcpy()
        memset()
        jtag_libusb_bulk_write()
ep1in_isr()
ep1out_isr()
ep1pingnak_isr()
ep2_isr()
ep2eflag_isr()
ep2fflag_isr()
ep2in_isr()
    CLEAR_IRQ()
ep2out_isr()
    CLEAR_IRQ()
ep2pflag_isr()
ep2piderror_isr()
ep2pingnak_isr()
ep3in_isr()
ep3out_isr()
ep4_isr()
ep4eflag_isr()
ep4fflag_isr()
ep4in_isr()
ep4out_isr()
ep4pflag_isr()
ep4piderror_isr()
ep4pingnak_isr()
ep5in_isr()
ep5out_isr()
ep6_isr()
    i2c_recieve()
        get_address()
        printf()
        start_cd()
            delay_us()
        send_byte()
            delay_us()
            clock_cd()
                delay_us()
        get_ack()
            delay_us()
        delay_us()
        repeated_start()
            delay_us()
        receive_byte()
            delay_us()
        send_ack()
            delay_us()
        delay_ms()
        stop_cd()
            delay_us()
        syncdelay()
ep6eflag_isr()
ep6fflag_isr()
ep6in_isr()
ep6out_isr()
ep6pflag_isr()
ep6piderror_isr()
ep6pingnak_isr()
ep7in_isr()
ep7out_isr()
ep8_isr()
ep8eflag_isr()
ep8fflag_isr()
ep8pflag_isr()
ep8piderror_isr()
ep8pingnak_isr()
ep93xx_init()
    open()
    LOG_ERROR()
    strerror()
    mmap()
    close()
    set_gonk_mode()
        mmap()
        LOG_ERROR()
        strerror()
        munmap()
    munmap()
    LOG_INFO()
    nanosleep()
ep93xx_quit()
ep93xx_read()
ep93xx_reset()
    nanosleep()
ep93xx_write()
    nanosleep()
erase_sector()
    dsp5680xx_f_ex()
    err_check_propagate()
errorlimit_isr()
esirisc_arch_state()
    target_to_esirisc()
    buf_get_u32()
    LOG_USER()
    debug_reason_name()
esirisc_assert_reset()
    target_to_esirisc()
    LOG_DEBUG()
    jtag_get_reset_config()
    jtag_add_reset()
    esirisc_remove_breakpoints()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_write_csr()
            LOG_DEBUG()
            h_u16_to_be()
            h_u32_to_be()
            esirisc_jtag_send_and_recv()
                esirisc_jtag_send()
                    cmd_queue_alloc()
                    esirisc_jtag_set_instr()
                        buf_get_u32()
                        buf_set_u32()
                        jtag_add_ir_scan()
                    esirisc_jtag_get_padding()
                    jtag_scan_field_clone()
                        buf_cpy()
                        cmd_queue_alloc()
                        DIV_ROUND_UP()
                    jtag_add_dr_scan()
                    jtag_execute_queue()
                LOG_ERROR()
                esirisc_jtag_recv()
                    esirisc_jtag_count_bits()
                    DIV_ROUND_UP()
                    esirisc_jtag_set_instr()
                    esirisc_jtag_get_padding()
                    jtag_add_dr_scan()
                    ARRAY_SIZE()
                    jtag_execute_queue()
                    esirisc_jtag_unstuff()
                        assert()
                esirisc_jtag_check_status()
                    esirisc_jtag_get_eid()
                    LOG_ERROR()
                    esirisc_jtag_is_debug_active()
                    esirisc_jtag_is_stopped()
            ARRAY_SIZE()
        LOG_ERROR()
        target_name()
        memset()
    esirisc_remove_watchpoints()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_write_csr()
        LOG_ERROR()
        target_name()
        memset()
    esirisc_jtag_assert_reset()
        esirisc_jtag_send_ctrl()
            esirisc_jtag_send_and_recv()
    LOG_ERROR()
    target_name()
    register_cache_invalidate()
esirisc_checksum_memory()
esirisc_deassert_reset()
    target_to_esirisc()
    LOG_DEBUG()
    jtag_get_reset_config()
    jtag_add_reset()
    esirisc_debug_enable()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_enable_debug()
            esirisc_jtag_send_ctrl()
        LOG_ERROR()
        target_name()
        esirisc_jtag_is_stopped()
        LOG_INFO()
        esirisc_debug_reset()
            target_to_esirisc()
            LOG_DEBUG()
            esirisc_jtag_assert_reset()
            LOG_ERROR()
            target_name()
            esirisc_jtag_deassert_reset()
                esirisc_jtag_send_ctrl()
            esirisc_wait_debug_active()
                LOG_DEBUG()
                timeval_ms()
                esirisc_jtag_enable_debug()
                esirisc_jtag_is_debug_active()
                alive_sleep()
    esirisc_debug_reset()
    esirisc_jtag_deassert_reset()
    LOG_ERROR()
    target_name()
    esirisc_wait_debug_active()
    esirisc_reset_entry()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_read_csr()
            h_u16_to_be()
            esirisc_jtag_send_and_recv()
            ARRAY_SIZE()
            le_to_h_u32()
            LOG_DEBUG()
        LOG_ERROR()
        target_name()
        esirisc_jtag_read_word()
            h_u32_to_be()
            esirisc_jtag_send_and_recv()
            ARRAY_SIZE()
            le_to_h_u32()
            LOG_DEBUG()
        esirisc_jtag_write_csr()
    esirisc_add_breakpoints()
        LOG_DEBUG()
        esirisc_add_breakpoint()
            target_to_esirisc()
            LOG_DEBUG()
            esirisc_next_breakpoint()
                target_to_esirisc()
                LOG_DEBUG()
            LOG_ERROR()
            target_name()
            breakpoint_hw_set()
            esirisc_jtag_write_csr()
            esirisc_jtag_read_csr()
    esirisc_add_watchpoints()
        LOG_DEBUG()
        esirisc_add_watchpoint()
            target_to_esirisc()
            LOG_DEBUG()
            esirisc_next_watchpoint()
                target_to_esirisc()
                LOG_DEBUG()
            LOG_ERROR()
            target_name()
            watchpoint_set()
            esirisc_jtag_write_csr()
            esirisc_jtag_read_csr()
    esirisc_restore_hwdc()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_write_csr()
        LOG_ERROR()
        target_name()
    esirisc_jtag_continue()
        esirisc_jtag_send_ctrl()
esirisc_enable_interrupts()
    target_to_esirisc()
    LOG_DEBUG()
    esirisc_jtag_read_csr()
    LOG_ERROR()
    target_name()
    esirisc_jtag_write_csr()
esirisc_examine()
    target_to_esirisc()
    LOG_DEBUG()
    target_was_examined()
    esirisc_debug_enable()
    esirisc_jtag_is_debug_active()
    esirisc_jtag_break()
        esirisc_jtag_send_ctrl()
    LOG_ERROR()
    target_name()
    esirisc_identify()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_read_csr()
        LOG_ERROR()
        target_name()
    esirisc_build_reg_cache()
        target_to_esirisc()
        register_get_last_cache_p()
        malloc()
        calloc()
        LOG_DEBUG()
        ARRAY_SIZE()
        DIV_ROUND_UP()
        esirisc_read_csr()
            LOG_DEBUG()
            esirisc_jtag_read_csr()
            LOG_ERROR()
            target_name()
            buf_set_u32()
        esirisc_write_csr()
            buf_get_u32()
            LOG_DEBUG()
            esirisc_jtag_write_csr()
            LOG_ERROR()
            target_name()
    esirisc_remove_breakpoints()
    esirisc_remove_watchpoints()
    esirisc_disable_step()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_read_csr()
        LOG_ERROR()
        target_name()
        esirisc_jtag_write_csr()
    esirisc_restore_hwdc()
    esirisc_save_interrupts()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_jtag_read_csr()
        LOG_ERROR()
        target_name()
    esirisc_jtag_continue()
    target_set_examined()
    LOG_INFO()
    target_endianness()
esirisc_flash_auto_probe()
    esirisc_flash_probe()
        FLASH_PAGE_SIZE()
        alloc_block_array()
        esirisc_flash_init()
            esirisc_flash_disable_protect()
                target_read_u32()
                esirisc_flash_unlock()
                    target_write_u32()
                target_write_u32()
            TIMING0_F()
            esirisc_flash_num_cycles()
            TIMING0_R()
            LOG_DEBUG()
            target_write_u32()
            TIMING1_E()
            TIMING2_T()
            TIMING2_H()
            TIMING2_P()
            esirisc_flash_recall()
                esirisc_flash_control()
                    esirisc_flash_clear_status()
                        target_write_u32()
                    target_write_u32()
                    esirisc_flash_wait()
                        timeval_ms()
                        target_read_u32()
                        keep_alive()
                    LOG_ERROR()
                    esirisc_flash_check_status()
                        target_read_u32()
                        LOG_ERROR()
            LOG_ERROR()
            esirisc_flash_enable_protect()
                target_read_u32()
                esirisc_flash_unlock()
                target_write_u32()
        LOG_ERROR()
esirisc_flash_erase()
    esirisc_flash_disable_protect()
    FLASH_PAGE_SIZE()
    target_write_u32()
    esirisc_flash_control()
    LOG_ERROR()
    esirisc_flash_enable_protect()
esirisc_flash_info()
    command_print_sameline()
esirisc_flash_write()
    esirisc_flash_disable_protect()
    target_write_u32()
    MIN()
    esirisc_flash_fill_pb()
        target_to_esirisc()
        target_write_u32()
        DIV_ROUND_UP()
        MIN()
        target_write_buffer()
    esirisc_flash_control()
    LOG_ERROR()
    esirisc_flash_enable_protect()
esirisc_get_gdb_arch()
    target_to_esirisc()
    LOG_DEBUG()
    target_was_examined()
    alloc_printf()
    esirisc_cache_arch_name()
esirisc_get_gdb_reg_list()
    target_to_esirisc()
    LOG_DEBUG()
    calloc()
esirisc_get_reg()
    LOG_DEBUG()
esirisc_halt()
    target_to_esirisc()
    LOG_DEBUG()
    esirisc_jtag_break()
    LOG_ERROR()
    target_name()
esirisc_init_target()
    target_to_esirisc()
esirisc_jtag_disable_debug()
    esirisc_jtag_send_ctrl()
esirisc_poll()
    target_to_esirisc()
    esirisc_jtag_enable_debug()
    LOG_ERROR()
    target_name()
    esirisc_jtag_is_stopped()
    esirisc_jtag_is_debug_active()
    esirisc_debug_entry()
        target_to_esirisc()
        LOG_DEBUG()
        esirisc_save_context()
            target_to_esirisc()
            LOG_DEBUG()
        esirisc_has_cache()
        esirisc_flush_caches()
            target_to_esirisc()
            LOG_DEBUG()
            LOG_TARGET_ERROR()
            esirisc_jtag_flush_caches()
                esirisc_jtag_send_ctrl()
            LOG_ERROR()
            target_name()
        esirisc_save_interrupts()
        buf_get_u32()
        breakpoint_find()
        esirisc_remove_watchpoints()
        esirisc_debug_step()
            target_to_esirisc()
            LOG_DEBUG()
            esirisc_disable_interrupts()
                target_to_esirisc()
                LOG_DEBUG()
                esirisc_jtag_read_csr()
                LOG_ERROR()
                target_name()
                esirisc_jtag_write_csr()
            esirisc_enable_step()
                target_to_esirisc()
                LOG_DEBUG()
                esirisc_jtag_read_csr()
                LOG_ERROR()
                target_name()
                esirisc_jtag_write_csr()
            esirisc_jtag_continue()
            LOG_ERROR()
            target_name()
            esirisc_wait_debug_active()
            esirisc_disable_step()
            esirisc_restore_interrupts()
                target_to_esirisc()
                LOG_DEBUG()
                esirisc_jtag_write_csr()
                LOG_ERROR()
                target_name()
        esirisc_add_watchpoints()
    target_call_event_callbacks()
esirisc_read_memory()
    target_to_esirisc()
    LOG_DEBUG()
    esirisc_jtag_read_word()
    esirisc_jtag_read_hword()
        h_u32_to_be()
        esirisc_jtag_send_and_recv()
        ARRAY_SIZE()
        le_to_h_u16()
        LOG_DEBUG()
    esirisc_jtag_read_byte()
        h_u32_to_be()
        esirisc_jtag_send_and_recv()
        ARRAY_SIZE()
        LOG_DEBUG()
    LOG_ERROR()
    target_name()
    buf_cpy()
esirisc_read_reg()
    LOG_DEBUG()
    esirisc_jtag_read_reg()
        esirisc_jtag_send_and_recv()
        ARRAY_SIZE()
        le_to_h_u32()
        LOG_DEBUG()
    LOG_ERROR()
    target_name()
    buf_set_u32()
esirisc_remove_watchpoint()
    target_to_esirisc()
    LOG_DEBUG()
    esirisc_jtag_read_csr()
    LOG_ERROR()
    target_name()
    esirisc_jtag_write_csr()
esirisc_resume()
    LOG_DEBUG()
    esirisc_resume_or_step()
        target_to_esirisc()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        target_free_all_working_areas()
        esirisc_add_breakpoints()
        esirisc_add_watchpoints()
        buf_get_u32()
        buf_set_u32()
        esirisc_restore_context()
            target_to_esirisc()
            LOG_DEBUG()
        esirisc_has_cache()
        esirisc_flush_caches()
        breakpoint_find()
        esirisc_remove_breakpoint()
            target_to_esirisc()
            LOG_DEBUG()
            esirisc_jtag_read_csr()
            LOG_ERROR()
            target_name()
            esirisc_jtag_write_csr()
        esirisc_disable_interrupts()
        esirisc_enable_step()
        esirisc_disable_step()
        esirisc_restore_interrupts()
        esirisc_restore_hwdc()
        esirisc_jtag_continue()
        LOG_ERROR()
        target_name()
        register_cache_invalidate()
        target_call_event_callbacks()
esirisc_save_hwdc()
    target_to_esirisc()
    LOG_DEBUG()
    esirisc_jtag_read_csr()
    LOG_ERROR()
    target_name()
esirisc_set_reg()
    buf_get_u32()
    LOG_DEBUG()
    buf_set_u32()
esirisc_step()
    LOG_DEBUG()
    esirisc_resume_or_step()
esirisc_target_create()
    LOG_ERROR()
    target_name()
    calloc()
esirisc_write_memory()
    target_to_esirisc()
    LOG_DEBUG()
    buf_get_u32()
    esirisc_jtag_write_word()
        LOG_DEBUG()
        h_u32_to_be()
        esirisc_jtag_send_and_recv()
        ARRAY_SIZE()
    esirisc_jtag_write_hword()
        LOG_DEBUG()
        h_u32_to_be()
        h_u16_to_be()
        esirisc_jtag_send_and_recv()
        ARRAY_SIZE()
    esirisc_jtag_write_byte()
        LOG_DEBUG()
        h_u32_to_be()
        esirisc_jtag_send_and_recv()
        ARRAY_SIZE()
    LOG_ERROR()
    target_name()
esirisc_write_reg()
    buf_get_u32()
    LOG_DEBUG()
    esirisc_jtag_write_reg()
        LOG_DEBUG()
        h_u32_to_be()
        esirisc_jtag_send_and_recv()
        ARRAY_SIZE()
    LOG_ERROR()
    target_name()
esp32_arch_state()
esp32_on_halt()
    esp32_disable_wdts()
        target_write_u32()
        LOG_ERROR()
    esp_xtensa_smp_on_halt()
        esp_xtensa_on_halt()
            esp_xtensa_dbgstubs_info_update()
                target_to_esp_xtensa()
                esp_dbgstubs_table_read()
                    LOG_TARGET_DEBUG()
                    target_read_buffer()
                    LOG_ERROR()
                    target_name()
                    target_buffer_get_u32()
                    LOG_TARGET_ERROR()
                    LOG_WARNING()
                ESP_XTENSA_DBGSTUBS_UPDATE_DATA_ENTRY()
                target_read_buffer()
                LOG_ERROR()
                ESP_XTENSA_DBGSTUBS_UPDATE_CODE_ENTRY()
        foreach_smp_target()
esp32_soc_reset()
    LOG_DEBUG()
    xtensa_halt()
        target_to_xtensa()
        LOG_TARGET_DEBUG()
        xtensa_dm_core_status_read()
        LOG_TARGET_ERROR()
        xtensa_dm_core_status_get()
        xtensa_is_stopped()
            target_to_xtensa()
        xtensa_queue_dbg_reg_write()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
    target_wait_state()
    xtensa_assert_reset()
        target_to_xtensa()
        LOG_TARGET_DEBUG()
        xtensa_queue_pwr_reg_write()
        PWRCTL_JTAGDEBUGUSE()
        PWRCTL_DEBUGWAKEUP()
        PWRCTL_MEMWAKEUP()
        PWRCTL_COREWAKEUP()
        PWRCTL_CORERESET()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        register_cache_invalidate()
    LOG_ERROR()
    alive_sleep()
    xtensa_poll()
        target_to_xtensa()
        xtensa_dm_poll()
        xtensa_dm_power_status_read()
            xtensa_dm_queue_tdi_idle()
            xtensa_dm_queue_execute()
            buf_get_u32()
        PWRSTAT_DEBUGWASRESET()
        PWRSTAT_COREWASRESET()
        LOG_TARGET_DEBUG()
        xtensa_dm_tap_was_reset()
        LOG_TARGET_INFO()
        xtensa_smpbreak_write()
        xtensa_dm_core_was_reset()
        xtensa_dm_power_status_cache()
        xtensa_wakeup()
            target_to_xtensa()
            PWRCTL_DEBUGWAKEUP()
            PWRCTL_MEMWAKEUP()
            PWRCTL_COREWAKEUP()
            PWRCTL_CORERESET()
            xtensa_queue_pwr_reg_write()
            PWRCTL_JTAGDEBUGUSE()
            xtensa_dm_queue_tdi_idle()
            xtensa_dm_queue_execute()
        xtensa_dm_core_status_read()
        xtensa_dm_is_powered()
        xtensa_is_stopped()
        xtensa_fetch_all_regs()
        xtensa_cause_get()
            target_to_xtensa()
            xtensa_reg_get()
            xtensa_dm_core_status_read()
            LOG_TARGET_ERROR()
            xtensa_dm_core_status_get()
        xtensa_reg_get()
        xtensa_dm_core_status_clear()
        xtensa_mark_register_dirty()
        xtensa_queue_dbg_reg_write()
        xtensa_queue_exec_ins()
        XT_INS_RSR()
        XT_INS_WSR()
        xtensa_dm_queue_execute()
        LOG_TARGET_ERROR()
        xtensa_core_status_check()
        xtensa_dm_trace_status_read()
        LOG_INFO()
    xtensa_deassert_reset()
        target_to_xtensa()
        LOG_TARGET_DEBUG()
        xtensa_queue_dbg_reg_write()
        xtensa_queue_pwr_reg_write()
        PWRCTL_JTAGDEBUGUSE()
        PWRCTL_DEBUGWAKEUP()
        PWRCTL_MEMWAKEUP()
        PWRCTL_COREWAKEUP()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
    foreach_smp_target()
    target_to_xtensa()
    xtensa_dm_core_is_stalled()
    LOG_TARGET_DEBUG()
    target_write_u32()
    LOG_TARGET_ERROR()
    target_read_buffer()
    target_write_buffer()
    xtensa_resume()
        LOG_TARGET_DEBUG()
        xtensa_prepare_resume()
            target_to_xtensa()
            LOG_TARGET_DEBUG()
            LOG_TARGET_ERROR()
            xtensa_reg_set()
            xtensa_cause_get()
            xtensa_do_step()
                target_to_xtensa()
                LOG_TARGET_DEBUG()
                LOG_TARGET_ERROR()
                xtensa_reg_get()
                xtensa_cause_get()
                xtensa_cause_clear()
                    target_to_xtensa()
                    xtensa_reg_set()
                xtensa_reg_set()
                LOG_TARGET_WARNING()
                MIN()
                xtensa_queue_dbg_reg_write()
                xtensa_prepare_resume()
                xtensa_do_resume()
                    target_to_xtensa()
                    LOG_TARGET_DEBUG()
                    xtensa_cause_reset()
                        target_to_xtensa()
                    xtensa_queue_exec_ins()
                    XT_INS_RFDO()
                    xtensa_dm_queue_execute()
                    LOG_TARGET_ERROR()
                    xtensa_core_status_check()
                timeval_ms()
                usleep()
                xtensa_dm_core_status_read()
                xtensa_is_stopped()
                xtensa_dm_core_status_get()
                xtensa_fetch_all_regs()
                xtensa_pc_in_winexc()
                    target_to_xtensa()
                    xtensa_read_buffer()
                        xtensa_read_memory()
                            target_to_xtensa()
                            ALIGN_DOWN()
                            ALIGN_UP()
                            LOG_TARGET_ERROR()
                            xtensa_memory_op_validate_range()
                                xtensa_target_memory_region_find()
                                    xtensa_get_mem_config()
                                    xtensa_memory_region_find()
                                xtensa_get_overlap_size()
                                    xtensa_memory_regions_overlap()
                                assert()
                            LOG_DEBUG()
                            calloc()
                            xtensa_mark_register_dirty()
                            xtensa_queue_dbg_reg_write()
                            xtensa_queue_exec_ins()
                            XT_INS_RSR()
                            XT_INS_LDDR32P()
                            xtensa_queue_dbg_reg_read()
                            XT_INS_L32I()
                            XT_INS_WSR()
                            xtensa_dm_queue_execute()
                            xtensa_core_status_check()
                            LOG_TARGET_DEBUG()
                            xtensa_read_memory()
                            LOG_TARGET_WARNING()
                            buf_bswap32()
                            memcpy()
                            free()
                    buf_get_u32()
                    XT_INS_L32E_S32E_MASK()
                    XT_INS_L32E()
                    XT_INS_S32E()
                    XT_INS_RFWO_RFWU_MASK()
                    XT_INS_RFWO()
                    XT_INS_RFWU()
                LOG_DEBUG()
                xtensa_write_dirty_registers()
            BIT()
            xtensa_write_dirty_registers()
        LOG_TARGET_ERROR()
        xtensa_do_resume()
        target_call_event_callbacks()
    timeval_ms()
esp32_target_create()
    esp32_queue_tdi_idle()
        target_to_esp32()
            container_of()
        buf_set_u32()
        jtag_add_plain_ir_scan()
    calloc()
    LOG_ERROR()
    esp_xtensa_smp_init_arch_info()
        esp_xtensa_init_arch_info()
            xtensa_init_arch_info()
                calloc()
                LOG_ERROR()
                xtensa_dm_init()
                    IS_ALIGNED()
                    LOG_ERROR()
    free()
esp32_target_init()
    esp_xtensa_smp_target_init()
        esp_xtensa_target_init()
            xtensa_target_init()
                target_to_xtensa()
                calloc()
                LOG_ERROR()
                free()
                xtensa_build_reg_cache()
                    target_to_xtensa()
                    register_get_last_cache_p()
                    LOG_TARGET_WARNING()
                    calloc()
                    LOG_ERROR()
                    LOG_TARGET_DEBUG()
                    LOG_TARGET_ERROR()
                    sprintf()
                    strcmp()
                    free()
        foreach_smp_target()
        esp_xtensa_semihosting_init()
            xtensa_semihosting_init()
                semihosting_common_init()
                esp_xtensa_semihosting_setup()
                    LOG_TARGET_DEBUG()
                esp_xtensa_semihosting_post_result()
                    xtensa_reg_set()
            esp_semihosting_common()
                LOG_TARGET_DEBUG()
                semihosting_read_fields()
                semihosting_get_field()
                esp_semihosting_sys_seek()
                    lseek()
                    LOG_TARGET_DEBUG()
esp32_virt2phys()
esp32s2_arch_state()
esp32s2_assert_reset()
esp32s2_deassert_reset()
    target_to_xtensa()
    LOG_TARGET_DEBUG()
    xtensa_deassert_reset()
    xtensa_smpbreak_write()
    LOG_ERROR()
esp32s2_poll()
    esp_xtensa_poll()
        target_to_xtensa()
        target_to_esp_xtensa()
        xtensa_poll()
        xtensa_dm_power_status_get()
        PWRSTAT_COREWASRESET()
        LOG_TARGET_DEBUG()
        memset()
        esp_xtensa_dbgstubs_addr_check()
            target_to_esp_xtensa()
            esp_xtensa_apptrace_status_reg_read()
                target_to_xtensa()
                xtensa_queue_dbg_reg_read()
                xtensa_dm_queue_tdi_idle()
                xtensa_dm_queue_execute()
                LOG_ERROR()
                buf_get_u32()
            LOG_ERROR()
            xtensa_data_addr_valid()
            LOG_TARGET_INFO()
            esp_xtensa_apptrace_status_reg_write()
                target_to_xtensa()
                xtensa_queue_dbg_reg_write()
                xtensa_dm_queue_tdi_idle()
                xtensa_dm_queue_execute()
                LOG_ERROR()
    target_call_event_callbacks()
    esp_xtensa_semihosting()
        target_to_esp_xtensa()
        xtensa_reg_get()
        target_read_memory()
        LOG_TARGET_ERROR()
        buf_get_u32()
        LOG_TARGET_DEBUG()
        semihosting_common()
    target_to_esp_xtensa()
    target_resume()
    LOG_ERROR()
    esp32s2_on_halt()
        esp32s2_disable_wdts()
            target_write_u32()
            LOG_ERROR()
            target_read_u32()
        esp_xtensa_on_halt()
esp32s2_soft_reset_halt()
    LOG_TARGET_DEBUG()
    esp32s2_soc_reset()
        target_to_xtensa()
        LOG_DEBUG()
        LOG_TARGET_DEBUG()
        xtensa_halt()
        target_wait_state()
        xtensa_assert_reset()
        LOG_TARGET_ERROR()
        alive_sleep()
        xtensa_poll()
        xtensa_deassert_reset()
        assert()
        target_write_u32()
        LOG_ERROR()
        esp32s2_stall()
            esp32s2_stall_set()
                LOG_TARGET_DEBUG()
                esp32s2_set_peri_reg_mask()
                    target_read_u32()
                    target_write_u32()
                LOG_ERROR()
        xtensa_smpbreak_write()
        esp32s2_set_peri_reg_mask()
        BIT()
        timeval_ms()
        esp32s2_unstall()
            esp32s2_stall_set()
        esp32s2_disable_wdts()
    xtensa_soft_reset_halt()
        LOG_TARGET_DEBUG()
        xtensa_assert_reset()
esp32s2_step()
    xtensa_step()
        xtensa_do_step()
        target_call_event_callbacks()
    esp32s2_on_halt()
    target_call_event_callbacks()
esp32s2_target_create()
    calloc()
    LOG_ERROR()
    esp_xtensa_init_arch_info()
    free()
esp32s2_target_init()
    esp_xtensa_target_init()
    esp_xtensa_semihosting_init()
esp32s2_virt2phys()
esp32s3_arch_state()
esp32s3_on_halt()
    esp32s3_disable_wdts()
        target_write_u32()
        LOG_ERROR()
        target_read_u32()
    esp_xtensa_smp_on_halt()
esp32s3_soc_reset()
    LOG_DEBUG()
    xtensa_halt()
    target_wait_state()
    xtensa_assert_reset()
    LOG_ERROR()
    alive_sleep()
    xtensa_poll()
    xtensa_deassert_reset()
    foreach_smp_target()
    target_to_xtensa()
    xtensa_dm_core_is_stalled()
    LOG_TARGET_DEBUG()
    target_write_u32()
    LOG_TARGET_ERROR()
    target_read_buffer()
    target_write_buffer()
    xtensa_resume()
    timeval_ms()
esp32s3_target_create()
    calloc()
    LOG_ERROR()
    esp_xtensa_smp_init_arch_info()
    free()
esp32s3_target_init()
    esp_xtensa_smp_target_init()
esp32s3_virt2phys()
esp_semihosting_basedir_command()
    get_current_target()
    LOG_ERROR()
    command_print()
    free()
    strdup()
esp_usb_jtag_init()
    memset()
    esp_usb_jtag_out()
        esp_usb_jtag_command_add()
            esp_usb_jtag_write_rlestream()
                esp_usb_jtag_command_add_raw()
                    esp_usb_jtag_send_buf()
                        jtag_libusb_bulk_write()
                        LOG_DEBUG_IO()
                        LOG_DEBUG()
                        esp_usb_jtag_recv_buf()
                            LOG_ERROR()
                            jtag_libusb_bulk_read()
                            LOG_DEBUG()
                            LOG_DEBUG_IO()
                CMD_REP()
        CMD_CLK()
    esp_usb_jtag_flush()
        esp_usb_jtag_write_rlestream()
        esp_usb_jtag_command_add_raw()
        LOG_DEBUG_IO()
        esp_usb_jtag_send_buf()
        esp_usb_jtag_recv_buf()
    esp_usb_jtag_sleep()
        esp_usb_jtag_flush()
        jtag_sleep()
    esp_usb_jtag_reset()
        esp_usb_jtag_command_add()
        CMD_RST()
    esp_usb_jtag_in_rdy()
    esp_usb_jtag_in()
        esp_usb_jtag_in_rdy()
        LOG_ERROR()
        BIT()
    jtag_libusb_open()
    LOG_ERROR()
    jtag_libusb_set_configuration()
        libusb_get_device()
        libusb_get_configuration()
        libusb_get_config_descriptor()
        libusb_set_configuration()
        libusb_free_config_descriptor()
    jtag_libusb_choose_interface()
    jtag_libusb_control_transfer()
    le_to_h_u16()
    LOG_WARNING()
    LOG_INFO()
    jtag_libusb_close()
esp_usb_jtag_khz()
    LOG_WARNING()
    LOG_DEBUG()
esp_usb_jtag_quit()
    jtag_libusb_close()
    bitq_cleanup()
esp_usb_jtag_speed()
    LOG_ERROR()
    LOG_DEBUG()
    jtag_libusb_control_transfer()
esp_usb_jtag_speed_div()
esp_xtensa_apptrace_buffs_write()
    target_to_xtensa()
    XTENSA_APPTRACE_BLOCK_ID()
    XTENSA_APPTRACE_BLOCK_LEN()
    esp_xtensa_apptrace_queue_reverse_write()
        target_to_xtensa()
        IS_ALIGNED()
        ALIGN_UP()
        xtensa_queue_dbg_reg_write()
        memcpy()
        target_buffer_get_u32()
        memset()
    esp_xtensa_apptrace_queue_normal_write()
        target_to_xtensa()
        xtensa_queue_dbg_reg_write()
        memcpy()
        target_buffer_get_u32()
        memset()
    LOG_DEBUG()
    target_name()
    xtensa_queue_dbg_reg_write()
    xtensa_dm_queue_tdi_idle()
    xtensa_dm_queue_execute()
    LOG_ERROR()
esp_xtensa_apptrace_ctrl_reg_write()
    target_to_xtensa()
    XTENSA_APPTRACE_BLOCK_ID()
    XTENSA_APPTRACE_BLOCK_LEN()
    xtensa_queue_dbg_reg_write()
    xtensa_dm_queue_tdi_idle()
    xtensa_dm_queue_execute()
    LOG_ERROR()
esp_xtensa_apptrace_data_len_read()
    esp_xtensa_apptrace_ctrl_reg_read()
        target_to_xtensa()
        xtensa_queue_dbg_reg_read()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        target_buffer_get_u32()
        XTENSA_APPTRACE_BLOCK_ID_GET()
        XTENSA_APPTRACE_BLOCK_LEN_GET()
esp_xtensa_apptrace_data_read()
    target_to_xtensa()
    XTENSA_APPTRACE_BLOCK_ID()
    XTENSA_APPTRACE_BLOCK_LEN()
    LOG_DEBUG()
    target_name()
    esp_xtensa_apptrace_data_reverse_read()
        ALIGN_UP()
        xtensa_queue_dbg_reg_write()
        IS_ALIGNED()
        xtensa_queue_dbg_reg_read()
    esp_xtensa_apptrace_data_normal_read()
        xtensa_queue_dbg_reg_write()
        xtensa_queue_dbg_reg_read()
        IS_ALIGNED()
    xtensa_queue_dbg_reg_write()
    xtensa_dm_queue_tdi_idle()
    xtensa_dm_queue_execute()
    LOG_ERROR()
    IS_ALIGNED()
    memcpy()
    ALIGN_DOWN()
esp_xtensa_apptrace_leave_crit_section_start()
    esp_xtensa_swdbg_activate()
        target_to_xtensa()
        xtensa_queue_dbg_reg_write()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        LOG_ERROR()
    LOG_ERROR()
esp_xtensa_apptrace_leave_crit_section_stop()
    esp_xtensa_swdbg_activate()
    LOG_ERROR()
esp_xtensa_apptrace_usr_block_max_size_get()
    esp_xtensa_apptrace_block_max_size_get()
        target_to_xtensa()
        xtensa_dm_trace_status_read()
        LOG_ERROR()
        BIT()
        xtensa_dm_trace_config_read()
        LOG_DEBUG()
esp_xtensa_apptrace_usr_block_write()
    esp_apptrace_usr_block_write()
        LOG_ERROR()
        ARRAY_SIZE()
esp_xtensa_arch_state()
esp_xtensa_breakpoint_add()
    xtensa_breakpoint_add()
        target_to_xtensa()
        LOG_TARGET_WARNING()
        xtensa_sw_breakpoint_add()
            target_to_xtensa()
            target_read_buffer()
            LOG_TARGET_ERROR()
            MIN()
            XT_INS_BREAK()
            XT_INS_BREAKN()
            xtensa_update_instruction()
                target_to_xtensa()
                xtensa_is_icacheable()
                    xtensa_is_cacheable()
                        xtensa_memory_region_find()
                xtensa_is_dcacheable()
                    xtensa_is_cacheable()
                xtensa_mark_register_dirty()
                xtensa_queue_dbg_reg_write()
                xtensa_queue_exec_ins()
                XT_INS_RSR()
                LOG_TARGET_DEBUG()
                XT_INS_DHWBI()
                XT_INS_IHI()
                xtensa_dm_queue_execute()
                xtensa_core_status_check()
                LOG_ERROR()
                target_write_buffer()
                LOG_TARGET_ERROR()
                XT_INS_DHWB()
                LOG_DEBUG()
        LOG_TARGET_ERROR()
        LOG_TARGET_DEBUG()
esp_xtensa_breakpoint_remove()
    xtensa_breakpoint_remove()
        target_to_xtensa()
        LOG_TARGET_WARNING()
        xtensa_sw_breakpoint_remove()
            xtensa_update_instruction()
            LOG_TARGET_ERROR()
        LOG_TARGET_ERROR()
        LOG_TARGET_DEBUG()
        xtensa_reg_set()
esp_xtensa_smp_assert_reset()
esp_xtensa_smp_deassert_reset()
    LOG_TARGET_DEBUG()
    xtensa_deassert_reset()
    target_was_examined()
    xtensa_examine()
        target_to_xtensa()
        PWRCTL_DEBUGWAKEUP()
        PWRCTL_MEMWAKEUP()
        PWRCTL_COREWAKEUP()
        LOG_DEBUG()
        LOG_ERROR()
        xtensa_queue_pwr_reg_write()
        PWRCTL_JTAGDEBUGUSE()
        xtensa_dm_queue_enable()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        xtensa_dm_is_online()
        target_set_examined()
        xtensa_smpbreak_write()
esp_xtensa_smp_soft_reset_halt()
    target_to_esp_xtensa_smp()
        container_of()
    LOG_TARGET_DEBUG()
    xtensa_assert_reset()
    foreach_smp_target()
esp_xtensa_smp_step()
    target_to_esp_xtensa_smp()
    esp_xtensa_smp_smpbreak_disable()
        xtensa_smpbreak_get()
            target_to_xtensa()
        xtensa_smpbreak_set()
    xtensa_step()
    target_call_event_callbacks()
    esp_xtensa_smp_smpbreak_restore()
        xtensa_smpbreak_set()
esp_xtensa_smp_watchpoint_add()
    xtensa_watchpoint_add()
        target_to_xtensa()
        LOG_TARGET_ERROR()
        LOG_TARGET_WARNING()
        IS_PWR_OF_2()
        IS_ALIGNED()
        ALIGN_DOWN()
        BIT()
        xtensa_reg_set()
        LOG_TARGET_DEBUG()
    foreach_smp_target()
    target_was_examined()
    watchpoint_add()
        foreach_smp_target()
        watchpoint_add_internal()
            LOG_ERROR()
            calloc()
            target_add_watchpoint()
                LOG_TARGET_ERROR()
            free()
            LOG_DEBUG()
esp_xtensa_smp_watchpoint_remove()
    xtensa_watchpoint_remove()
        target_to_xtensa()
        LOG_TARGET_WARNING()
        xtensa_reg_set()
        LOG_TARGET_DEBUG()
    foreach_smp_target()
    watchpoint_remove()
        foreach_smp_target()
        watchpoint_remove_internal()
            watchpoint_free()
                target_remove_watchpoint()
                LOG_TARGET_ERROR()
                LOG_DEBUG()
                free()
        LOG_TARGET_ERROR()
esp_xtensa_target_deinit()
    LOG_DEBUG()
    target_was_examined()
    esp_xtensa_dbgstubs_restore()
        target_to_esp_xtensa()
        LOG_TARGET_INFO()
        esp_xtensa_apptrace_status_reg_write()
        LOG_ERROR()
    xtensa_target_deinit()
        target_to_xtensa()
        LOG_DEBUG()
        target_was_examined()
        xtensa_queue_dbg_reg_write()
        LOG_ERROR()
        xtensa_dm_queue_tdi_idle()
        xtensa_dm_queue_execute()
        xtensa_dm_deinit()
            dap_put_ap()
        xtensa_free_reg_cache()
            target_to_xtensa()
            register_unlink_cache()
            free()
        free()
    free()
    target_to_esp_xtensa()
etb_init()
    etb_read_reg()
        etb_read_reg_w_check()
            LOG_DEBUG()
            etb_scann()
                calloc()
                DIV_ROUND_UP()
                buf_set_u32()
                etb_set_instr()
                    buf_get_u32()
                    calloc()
                    DIV_ROUND_UP()
                    buf_set_u32()
                    jtag_add_ir_scan()
                    free()
                jtag_add_dr_scan()
                free()
            etb_set_instr()
            buf_set_u32()
            jtag_add_dr_scan()
            jtag_add_dr_scan_check()
    jtag_execute_queue()
    buf_get_u32()
etb_read_trace()
    etb_read_reg()
    jtag_execute_queue()
    buf_get_u32()
    etb_write_reg()
        LOG_DEBUG()
        etb_scann()
        etb_set_instr()
        buf_set_u32()
        jtag_add_dr_scan()
    malloc()
    etb_read_ram()
        etb_scann()
        etb_set_instr()
        buf_set_u32()
        jtag_add_dr_scan()
        jtag_add_callback()
        etb_getbuf()
            buf_get_u32()
        jtag_execute_queue()
    free()
etb_set_reg_w_exec()
    etb_set_reg()
        etb_write_reg()
        LOG_ERROR()
        buf_set_u32()
    buf_get_u32()
    jtag_execute_queue()
    LOG_ERROR()
etb_start_capture()
    LOG_ERROR()
    etb_write_reg()
    jtag_execute_queue()
etb_status()
    etb_read_reg()
    jtag_execute_queue()
    buf_get_u32()
    etb_get_reg()
        etb_read_reg()
        LOG_ERROR()
        jtag_execute_queue()
    LOG_ERROR()
    LOG_WARNING()
etb_stop_capture()
    etb_write_reg()
    jtag_execute_queue()
etm_dummy_init()
etm_dummy_read_trace()
etm_dummy_start_capture()
etm_dummy_status()
etm_dummy_stop_capture()
etm_set_reg_w_exec()
    etm_set_reg()
        etm_write_reg()
        LOG_ERROR()
        buf_set_u32()
    buf_get_u32()
    jtag_execute_queue()
    LOG_ERROR()
examine()
    dtmcontrol_scan()
    LOG_DEBUG()
    get_field()
    LOG_ERROR()
    RISCV_INFO()
    get_info()
    idcode_scan()
        jtag_add_ir_scan()
        jtag_add_dr_scan()
        jtag_execute_queue()
        LOG_ERROR()
        buf_get_u32()
        LOG_DEBUG()
    dbus_read()
    cache_set32()
    xori()
    srli()
    sw()
    cache_set_jump()
    cache_write()
    cache_check()
        get_info()
        dram_check32()
            dram_address()
            dbus_read()
            LOG_ERROR()
        dump_debug_ram()
    cache_invalidate()
    cache_get32()
    riscv_info()
    dump_debug_ram()
    riscv_xlen()
    read_remote_csr()
    LOG_WARNING()
    riscv_init_registers()
        RISCV_INFO()
        riscv_free_registers()
            free()
        calloc()
        list_empty()
        list_for_each_entry()
        LOG_DEBUG()
        free()
        qsort()
        ARRAY_SIZE()
        cmp_csr_info()
        riscv_xlen()
        riscv_supports_extension()
        sprintf()
        assert()
        list_first_entry()
        list_rotate_left()
        strlen()
        DIV_ROUND_UP()
    riscv011_poll()
    target_set_examined()
    riscv_set_current_hartid()
        RISCV_INFO()
        riscv_current_hartid()
            RISCV_INFO()
        LOG_DEBUG()
    reg_cache_set()
    LOG_INFO()
fa526_deinit_target()
    target_to_arm()
    target_to_arm920()
    arm7_9_deinit()
    arm_free_reg_cache()
    free()
fa526_target_create()
    calloc()
    fa526_init_arch_info()
        fa526_init_arch_info_2()
            arm9tdmi_examine_debug_reason()
            fa526_change_to_arm()
                LOG_ERROR()
            fa526_read_core_regs()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_STMIA()
                arm9tdmi_clock_data_in()
            fa526_read_core_regs_target_buffer()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_STMIA()
                arm9tdmi_clock_data_in_endianness()
            fa526_read_xpsr()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_MRS()
                ARMV4_5_STR()
            fa526_write_xpsr()
                target_to_arm7_9()
                LOG_DEBUG()
                arm9tdmi_clock_out()
                ARMV4_5_MSR_IM()
            fa526_write_xpsr_im8()
                target_to_arm7_9()
                LOG_DEBUG()
                arm9tdmi_clock_out()
                ARMV4_5_MSR_IM()
            fa526_write_core_regs()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_LDMIA()
            arm9tdmi_load_word_regs()
            arm9tdmi_load_hword_reg()
            arm9tdmi_load_byte_reg()
            arm9tdmi_store_word_regs()
            arm9tdmi_store_hword_reg()
            arm9tdmi_store_byte_reg()
            fa526_write_pc()
                target_to_arm7_9()
                arm9tdmi_clock_out()
                ARMV4_5_LDMIA()
            arm9tdmi_branch_resume()
            fa526_branch_resume_thumb()
                LOG_ERROR()
            arm9tdmi_enable_single_step()
            arm9tdmi_disable_single_step()
            arm920t_write_memory()
            arm7_9_bulk_write_memory()
            arm7_9_init_arch_info()
        arm920t_post_debug_entry()
        arm920t_pre_restore_context()
        arm920t_get_ttb()
        arm7_9_read_memory()
        arm7_9_write_memory()
        arm920t_disable_mmu_caches()
        arm920t_enable_mmu_caches()
faux_erase()
    memset()
faux_info()
    command_print_sameline()
faux_probe()
faux_write()
    memcpy()
feroceon_assert_reset()
    target_was_examined()
    LOG_WARNING()
    arm7_9_halt()
        LOG_ERROR()
        target_to_arm7_9()
        LOG_DEBUG()
        target_state_name()
        LOG_WARNING()
        buf_set_u32()
        embeddedice_store_reg()
        embeddedice_write_reg()
    arm7_9_assert_reset()
        target_to_arm7_9()
        jtag_get_reset_config()
        target_was_examined()
        LOG_WARNING()
        LOG_DEBUG()
        target_state_name()
        target_has_event_action()
        LOG_ERROR()
        target_name()
        jtag_add_reset()
        embeddedice_write_reg()
        jtag_add_runtest()
        target_handle_event()
        jtag_add_sleep()
        register_cache_invalidate()
feroceon_deinit_target()
    arm9tdmi_deinit_target()
        target_to_arm()
        target_to_arm7_9()
        arm7_9_deinit()
        arm_free_reg_cache()
        free()
feroceon_examine()
    arm7_9_examine()
        target_to_arm7_9()
        target_was_examined()
        embeddedice_build_reg_cache()
            malloc()
            ARRAY_SIZE()
            calloc()
            embeddedice_read_reg()
            jtag_execute_queue()
            free()
            buf_get_u32()
            LOG_INFO()
            LOG_ERROR()
            strcmp()
            target_type_name()
            target_name()
        register_get_last_cache_p()
        etm_build_reg_cache()
        target_set_examined()
        embeddedice_setup()
            target_to_arm7_9()
            embeddedice_read_reg()
            jtag_execute_queue()
            buf_set_u32()
            embeddedice_set_reg_w_exec()
                embeddedice_set_reg()
                buf_get_u32()
                jtag_execute_queue()
                LOG_ERROR()
        arm7_9_setup()
            target_to_arm7_9()
            arm7_9_clear_watchpoints()
        etm_setup()
    buf_get_u32()
    LOG_ERROR()
    embeddedice_set_reg()
    embeddedice_read_reg()
    jtag_execute_queue()
    buf_set_u32()
    embeddedice_store_reg()
feroceon_init_target()
    arm9tdmi_init_target()
        arm9tdmi_build_reg_cache()
            register_get_last_cache_p()
            target_to_arm()
            arm_build_reg_cache()
        arm_semihosting_init()
feroceon_target_create()
    calloc()
    arm926ejs_init_arch_info()
    feroceon_common_setup()
    arm926ejs_write_memory()
    feroceon_read_cp15()
        arm9tdmi_clock_out()
        ARMV4_5_MRC()
        arm7_9_execute_sys_speed()
        ARMV4_5_STMIA()
        jtag_execute_queue()
    feroceon_write_cp15()
        arm9tdmi_clock_out()
        ARMV4_5_LDMIA()
        ARMV4_5_MCR()
        arm7_9_execute_sys_speed()
fespi_auto_probe()
    fespi_probe()
        free()
        LOG_ERROR()
        LOG_DEBUG()
        fespi_write_reg()
            target_write_u32()
            LOG_ERROR()
        FESPI_TXWM()
        fespi_set_dir()
            fespi_read_reg()
                target_read_u32()
                LOG_ERROR()
            fespi_write_reg()
            FESPI_FMT_DIR()
        fespi_disable_hw_mode()
            fespi_read_reg()
            fespi_write_reg()
        fespi_read_flash_id()
            LOG_ERROR()
            fespi_txwm_wait()
                timeval_ms()
                fespi_read_reg()
                LOG_ERROR()
            fespi_wip()
                fespi_set_dir()
                fespi_write_reg()
                timeval_ms()
                fespi_tx()
                    timeval_ms()
                    fespi_read_reg()
                    LOG_ERROR()
                    fespi_write_reg()
                fespi_rx()
                    timeval_ms()
                    fespi_read_reg()
                    LOG_ERROR()
                alive_sleep()
                LOG_ERROR()
            fespi_set_dir()
            fespi_write_reg()
            fespi_tx()
            fespi_rx()
        fespi_enable_hw_mode()
            fespi_read_reg()
            fespi_write_reg()
        LOG_INFO()
        LOG_WARNING()
        malloc()
fespi_erase()
    LOG_DEBUG()
    LOG_ERROR()
    fespi_write_reg()
    FESPI_TXWM()
    fespi_txwm_wait()
    fespi_disable_hw_mode()
    fespi_wip()
    fespi_erase_sector()
        fespi_tx()
        fespi_txwm_wait()
        fespi_write_reg()
        fespi_wip()
    keep_alive()
    fespi_enable_hw_mode()
fespi_protect()
fespi_protect_check()
fespi_write()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    riscv_info()
    is_riscv()
    riscv_xlen()
    target_alloc_working_area()
    target_write_buffer()
    target_free_working_area()
    MIN()
    target_get_working_area_avail()
    init_reg_param()
    buf_set_u64()
    target_run_algorithm()
    ARRAY_SIZE()
    buf_get_u64()
    fespi_txwm_wait()
    fespi_disable_hw_mode()
    fespi_wip()
    slow_fespi_write_buffer()
        fespi_tx()
        fespi_txwm_wait()
        fespi_write_reg()
        keep_alive()
    fespi_enable_hw_mode()
fill_malloc()
    malloc()
    memset()
fill_task_pid()
    fill_buffer()
    get_buffer()
    LOG_ERROR()
flash_fespi()
    fespi_txwm_wait()
        fespi_read_reg()
    ERROR_STACK()
    fespi_disable_hw_mode()
        fespi_read_reg()
        fespi_write_reg()
    fespi_wip()
        fespi_set_dir()
            fespi_read_reg()
            fespi_write_reg()
            FESPI_FMT_DIR()
        fespi_write_reg()
        fespi_tx()
            fespi_read_reg()
            fespi_write_reg()
        ERROR_STACK()
        fespi_rx()
            fespi_read_reg()
    fespi_write_buffer()
        fespi_tx()
        ERROR_STACK()
        fespi_txwm_wait()
        fespi_write_reg()
        fespi_wip()
    fespi_enable_hw_mode()
        fespi_read_reg()
        fespi_write_reg()
fm3_auto_probe()
    fm3_probe()
        LOG_ERROR()
        malloc()
fm3_erase()
    LOG_ERROR()
    LOG_INFO()
    target_write_u32()
    target_read_u32()
    target_alloc_working_area()
    LOG_WARNING()
    target_write_buffer()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    fm3_busy_wait()
        target_read_u8()
        usleep()
        LOG_ERROR()
        LOG_DEBUG()
    target_free_working_area()
    destroy_reg_param()
fm3_write_block()
    LOG_ERROR()
    LOG_INFO()
    target_write_u32()
    LOG_WARNING()
    target_alloc_working_area()
    target_write_buffer()
    target_free_working_area()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    buf_get_u32()
    destroy_reg_param()
fm4_auto_probe()
    fm4_probe()
        LOG_WARNING()
        mb9bf_probe()
            LOG_DEBUG()
            calloc()
        s6e2cc_probe()
            target_read_u32()
            LOG_WARNING()
            LOG_DEBUG()
            calloc()
            s6e2cc_init_sector()
        s6e2dh_probe()
            calloc()
fm4_flash_erase()
    LOG_WARNING()
    LOG_DEBUG()
    fm4_disable_hw_watchdog()
        target_write_u32()
    fm4_enter_flash_cpu_programming_mode()
        target_write_u32()
        target_read_u32()
    target_alloc_working_area()
    LOG_ERROR()
    target_write_buffer()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    ARRAY_SIZE()
    buf_get_u32()
    destroy_reg_param()
    target_free_working_area()
    fm4_enter_flash_cpu_rom_mode()
        target_write_u32()
        target_read_u32()
fm4_flash_write()
    DIV_ROUND_UP()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    fm4_disable_hw_watchdog()
    target_alloc_working_area()
    target_write_buffer()
    MIN()
    target_get_working_area_avail()
    init_reg_param()
    fm4_enter_flash_cpu_programming_mode()
    buf_set_u32()
    target_run_algorithm()
    ARRAY_SIZE()
    buf_get_u32()
    fm4_enter_flash_cpu_rom_mode()
    destroy_reg_param()
    target_free_working_area()
fm4_get_info_command()
    LOG_WARNING()
    command_print_sameline()
freertos_create()
    ARRAY_SIZE()
    strcmp()
    LOG_ERROR()
freertos_detect_rtos()
freertos_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
freertos_get_thread_ascii_info()
    target_read_buffer()
    LOG_ERROR()
    strcpy()
    malloc()
    strlen()
freertos_get_thread_reg_list()
    target_read_u32()
    LOG_ERROR()
    LOG_DEBUG()
    target_to_armv7m()
    is_armv7m()
    LOG_OUTPUT()
    rtos_generic_stack_read()
freertos_set_current_thread()
freertos_update_threads()
    LOG_ERROR()
    target_read_u32()
    LOG_DEBUG()
    rtos_free_threadlist()
    malloc()
    strcpy()
    free()
    target_read_buffer()
    strlen()
ft232r_init()
    jtag_libusb_open()
    adapter_get_required_serial()
    LOG_ERROR()
    libusb_detach_kernel_driver()
    libusb_set_auto_detach_kernel_driver()
    libusb_claim_interface()
    jtag_libusb_control_transfer()
    malloc()
ft232r_khz()
    LOG_DEBUG()
ft232r_quit()
    jtag_libusb_control_transfer()
    LOG_ERROR()
    libusb_release_interface()
    jtag_libusb_close()
    free()
ft232r_speed()
    LOG_DEBUG()
    jtag_libusb_control_transfer()
    LOG_ERROR()
ft232r_speed_div()
ftdi_execute_command()
    ftdi_execute_runtest()
        LOG_DEBUG_IO()
        tap_state_name()
        tap_get_state()
        move_to_state()
            tap_get_state()
            tap_get_tms_path()
            tap_get_tms_path_len()
            assert()
            LOG_DEBUG_IO()
            tap_state_name()
            tap_set_state()
            tap_state_transition()
            mpsse_clock_tms_cs_out()
                mpsse_clock_tms_cs()
                    LOG_DEBUG_IO()
                    assert()
                    buffer_write_space()
                    buffer_read_space()
                    mpsse_flush()
                        LOG_DEBUG_IO()
                        assert()
                        buffer_write_byte()
                            LOG_DEBUG_IO()
                            assert()
                        libusb_alloc_transfer()
                        libusb_fill_bulk_transfer()
                        write_cb()
                            LOG_DEBUG_IO()
                            DEBUG_PRINT_BUF()
                            libusb_submit_transfer()
                        libusb_submit_transfer()
                        read_cb()
                            DEBUG_PRINT_BUF()
                            DIV_ROUND_UP()
                            memcpy()
                            LOG_DEBUG_IO()
                            libusb_submit_transfer()
                        timeval_ms()
                        libusb_handle_events_timeout_completed()
                        keep_alive()
                        libusb_cancel_transfer()
                        LOG_WARNING()
                        LOG_ERROR()
                        libusb_error_name()
                        bit_copy_execute()
                            list_for_each_entry_safe()
                            bit_copy()
                            list_del()
                            free()
                        bit_copy_discard()
                            list_for_each_entry_safe()
                            list_del()
                            free()
                        mpsse_purge()
                            LOG_DEBUG()
                            bit_copy_discard()
                            libusb_control_transfer()
                            LOG_ERROR()
                            libusb_error_name()
                        libusb_free_transfer()
                    buffer_write_byte()
                    bit_copy()
                    buffer_add_read()
                        LOG_DEBUG_IO()
                        assert()
                        DIV_ROUND_UP()
                        bit_copy_queued()
                            malloc()
                            list_add_tail()
        mpsse_clock_tms_cs_out()
        ftdi_end_state()
            tap_is_state_stable()
            tap_set_end_state()
            LOG_ERROR()
            tap_state_name()
            exit()
        tap_get_end_state()
    ftdi_execute_statemove()
        LOG_DEBUG_IO()
        tap_state_name()
        ftdi_end_state()
        tap_get_state()
        tap_get_end_state()
        move_to_state()
    ftdi_execute_pathmove()
        LOG_DEBUG_IO()
        tap_state_name()
        tap_get_state()
        tap_state_transition()
        buf_set_u32()
        LOG_ERROR()
        exit()
        tap_set_state()
        mpsse_clock_tms_cs_out()
        tap_set_end_state()
    ftdi_execute_scan()
        LOG_DEBUG_IO()
        jtag_scan_type()
        tap_get_state()
        move_to_state()
        ftdi_end_state()
        tap_get_end_state()
        tap_state_name()
    ftdi_execute_sleep()
        LOG_DEBUG_IO()
        mpsse_flush()
        jtag_sleep()
        tap_state_name()
        tap_get_state()
    ftdi_execute_stableclocks()
        tap_get_state()
        mpsse_clock_tms_cs_out()
        LOG_DEBUG_IO()
        tap_state_name()
    ftdi_execute_tms()
        LOG_DEBUG_IO()
        mpsse_clock_tms_cs_out()
    LOG_ERROR()
ftdi_execute_queue()
    find_signal_by_name()
    ftdi_set_signal()
        LOG_ERROR()
        mpsse_set_data_bits_low_byte()
            LOG_DEBUG_IO()
            buffer_write_space()
            mpsse_flush()
            buffer_write_byte()
        mpsse_set_data_bits_high_byte()
            LOG_DEBUG_IO()
            buffer_write_space()
            mpsse_flush()
            buffer_write_byte()
    mpsse_flush()
    LOG_ERROR()
ftdi_initialize()
    tap_get_tms_path_len()
    LOG_DEBUG()
    LOG_ERROR()
    mpsse_open()
        calloc()
        bit_copy_queue_init()
            INIT_LIST_HEAD()
        malloc()
        libusb_init()
        LOG_ERROR()
        libusb_error_name()
        open_matching_device()
            libusb_get_device_list()
            LOG_ERROR()
            libusb_error_name()
            libusb_get_device_descriptor()
            jtag_libusb_match_ids()
            libusb_open()
            device_location_equal()
                strdup()
                libusb_get_bus_number()
                libusb_get_port_numbers()
                LOG_ERROR()
                LOG_DEBUG()
                strtok()
                atoi()
                free()
            libusb_close()
            string_descriptor_equal()
                libusb_get_string_descriptor_ascii()
                LOG_ERROR()
                libusb_error_name()
                strncmp()
            libusb_free_device_list()
            libusb_get_config_descriptor()
            libusb_get_device()
            libusb_get_configuration()
            libusb_set_configuration()
            libusb_detach_kernel_driver()
            LOG_WARNING()
            libusb_claim_interface()
            libusb_control_transfer()
            libusb_free_config_descriptor()
        libusb_control_transfer()
        mpsse_purge()
        mpsse_close()
            libusb_close()
            libusb_exit()
            bit_copy_discard()
            free()
    adapter_get_required_serial()
    adapter_usb_get_location()
    find_signal_by_name()
    ftdi_set_signal()
    mpsse_set_data_bits_low_byte()
    mpsse_set_data_bits_high_byte()
    mpsse_loopback_config()
        LOG_DEBUG()
        single_byte_boolean_helper()
            LOG_DEBUG_IO()
            buffer_write_space()
            mpsse_flush()
            buffer_write_byte()
    mpsse_set_frequency()
        LOG_DEBUG()
        assert()
        mpsse_rtck_config()
            mpsse_is_high_speed()
            LOG_DEBUG()
            single_byte_boolean_helper()
        mpsse_divide_by_5_config()
            mpsse_is_high_speed()
            LOG_DEBUG()
            single_byte_boolean_helper()
        mpsse_set_divisor()
            LOG_DEBUG()
            LOG_DEBUG_IO()
            buffer_write_space()
            mpsse_flush()
            buffer_write_byte()
    adapter_get_speed_khz()
    mpsse_flush()
ftdi_khz()
    mpsse_is_high_speed()
    LOG_DEBUG()
ftdi_quit()
    mpsse_close()
    free()
ftdi_reset()
    find_signal_by_name()
    LOG_DEBUG_IO()
    ftdi_set_signal()
    LOG_ERROR()
    jtag_get_reset_config()
    mpsse_flush()
ftdi_speed()
    mpsse_set_frequency()
    LOG_ERROR()
    LOG_INFO()
ftdi_speed_div()
ftdi_swd_init()
    LOG_INFO()
    create_signals()
        create_default_signal()
            create_signal()
                calloc()
                strdup()
                free()
            LOG_ERROR()
    malloc()
ftdi_swd_read_reg()
    assert()
    ftdi_swd_queue_cmd()
        ftdi_swd_run_queue()
            LOG_DEBUG_IO()
            find_signal_by_name()
            mpsse_clock_data_out()
                mpsse_clock_data()
                    LOG_DEBUG_IO()
                    buffer_write_space()
                    buffer_read_space()
                    mpsse_flush()
                    buffer_write_byte()
                    buffer_write()
                        LOG_DEBUG_IO()
                        assert()
                        DIV_ROUND_UP()
                        bit_copy()
                    buffer_add_read()
            ftdi_set_signal()
            mpsse_flush()
            LOG_ERROR()
            buf_get_u32()
            swd_cmd_returns_ack()
            swd_ack_to_error_code()
            parity_u32()
        realloc()
        LOG_DEBUG()
        mpsse_clock_data_out()
        ftdi_swd_swdio_en()
            find_signal_by_name()
            ftdi_set_signal()
            mpsse_set_data_bits_low_byte()
        mpsse_clock_data_in()
            mpsse_clock_data()
        buf_set_u32()
        parity_u32()
ftdi_swd_switch_seq()
    LOG_DEBUG()
    ftdi_swd_swdio_en()
    mpsse_clock_data_out()
    LOG_ERROR()
ftdi_swd_write_reg()
    assert()
    ftdi_swd_queue_cmd()
gatemate_load()
    gatemate_read_file()
        memset()
        strrchr()
        LOG_ERROR()
        strcasecmp()
        cpld_read_raw_bit_file()
        gatemate_read_cfg_file()
            fopen()
            LOG_ERROR()
            strerror()
            gatemate_getline()
                read()
                realloc()
                malloc()
                LOG_ERROR()
                fgetc()
            gatemate_read_cfg_line()
                isxdigit()
                unhexify()
                gatemate_add_byte_to_bitfile()
                    realloc()
                    malloc()
                    LOG_ERROR()
                LOG_ERROR()
            free()
            fclose()
    gatemate_set_instr()
        calloc()
        DIV_ROUND_UP()
        LOG_ERROR()
        buf_set_u32()
        jtag_add_ir_scan()
        jtag_add_runtest()
        free()
    free()
    jtag_add_dr_scan()
    jtag_execute_queue()
gdb_connection_closed()
    get_target_from_connection()
    log_remove_callback()
        free()
    gdb_log_callback()
        gdb_output_con()
            strlen()
            malloc()
            hexify()
            gdb_put_packet()
            free()
    LOG_DEBUG()
    target_name()
    target_state_name()
    image_close()
    free()
    delete_debug_msg_receiver()
        free()
    target_unregister_event_callback()
        free()
    gdb_target_callback_event_handler()
        gdb_frontend_halted()
            target_get_gdb_fileio_info()
                LOG_TARGET_ERROR()
            gdb_fileio_reply()
                strcmp()
                sprintf()
                LOG_DEBUG()
                target_resume()
                strlen()
                gdb_put_packet()
                rtos_update_threads()
            gdb_signal_reply()
                rtos_update_threads()
                snprintf()
                LOG_TARGET_DEBUG()
                gdb_last_signal()
                    LOG_TARGET_DEBUG()
                    target_debug_reason_str()
                    LOG_USER()
                watchpoint_hit()
                    target_hit_watchpoint()
                        LOG_TARGET_ERROR()
                    LOG_DEBUG()
                gdb_put_packet()
        target_call_event_callbacks()
    target_call_event_callbacks()
gdb_input()
    gdb_input_inner()
        get_target_from_connection()
        gdb_get_packet()
            gdb_get_packet_inner()
                gdb_get_char()
                LOG_DEBUG()
                gdb_log_incoming_packet()
                LOG_WARNING()
                fetch_packet()
                    LOG_ERROR()
                    gdb_get_char_fast()
                    gdb_get_char()
                    strtoul()
                gdb_write()
        gdb_log_incoming_packet()
        gdb_thread_packet()
            get_target_from_connection()
            rtos_thread_packet()
        gdb_query_packet()
            get_target_from_connection()
            strncmp()
            malloc()
            unhexify()
            target_call_timer_callbacks_now()
                target_call_timer_callbacks_check_time()
            Jim_GetAssocData()
            Jim_DeleteAssocData()
            Jim_SetAssocData()
            Jim_EvalObj()
            Jim_NewStringObj()
            free()
            Jim_GetString()
            Jim_GetResult()
            alloc_printf()
            strdup()
            hexify()
            gdb_put_packet()
            gdb_output_con()
            gdb_send_error()
                snprintf()
                gdb_put_packet()
            strtoull()
            LOG_ERROR()
            strtoul()
            target_checksum_memory()
            snprintf()
            gdb_error()
                LOG_DEBUG()
                gdb_send_error()
            gdb_target_description_supported()
                target_get_gdb_arch()
                target_get_gdb_reg_list_noread()
                    target_get_gdb_reg_list()
                        target_was_examined()
                        LOG_ERROR()
                LOG_ERROR()
                get_reg_features_list()
                    calloc()
                free()
            LOG_INFO()
            LOG_WARNING()
            xml_printf()
            flash_get_bank_count()
            strlen()
            gdb_memory_map()
                get_target_from_connection()
                strtoul()
                xml_printf()
                malloc()
                flash_get_bank_count()
                get_flash_bank_by_num_noprobe()
                get_flash_bank_by_num()
                free()
                gdb_error()
                qsort()
                compare_bank()
                LOG_WARNING()
                target_address_max()
                    target_address_bits()
                memcpy()
                gdb_put_packet()
            decode_xfer_read()
            gdb_get_target_description_chunk()
                LOG_ERROR()
                gdb_generate_target_description()
                    smp_reg_list_noread()
                        target_get_gdb_reg_list_noread()
                        malloc()
                        LOG_ERROR()
                        foreach_smp_target()
                        target_was_examined()
                        free()
                        LOG_WARNING()
                        target_name()
                    LOG_ERROR()
                    get_reg_features_list()
                    xml_printf()
                    target_get_gdb_arch()
                    calloc()
                    strcmp()
                    lookup_add_arch_defined_types()
                        strcmp()
                    gdb_generate_reg_type_description()
                        lookup_add_arch_defined_types()
                        gdb_generate_reg_type_description()
                        xml_printf()
                        gdb_get_reg_type_name()
                    gdb_get_reg_type_name()
                    free()
                strlen()
                malloc()
                strncpy()
                free()
            gdb_get_thread_list_chunk()
                gdb_generate_thread_list()
                    xml_printf()
                    free()
                LOG_ERROR()
                strlen()
                MIN()
                malloc()
                strncpy()
                free()
        gdb_get_registers_packet()
            get_target_from_connection()
            LOG_DEBUG()
            rtos_get_gdb_reg_list()
                get_target_from_connection()
                LOG_DEBUG()
                LOG_ERROR()
                rtos_put_gdb_reg_list()
                    DIV_ROUND_UP()
                    malloc()
                    gdb_put_packet()
                    strlen()
                    free()
                free()
            target_get_gdb_reg_list()
            gdb_error()
            DIV_ROUND_UP()
            assert()
            malloc()
            gdb_get_reg_value_as_str()
                DIV_ROUND_UP()
                gdb_str_to_target()
                    DIV_ROUND_UP()
                    gdb_reg_pos()
                    sprintf()
                memset()
            free()
            strndup()
            gdb_put_packet()
        gdb_set_registers_packet()
            get_target_from_connection()
            LOG_DEBUG()
            LOG_WARNING()
            target_get_gdb_reg_list()
            gdb_error()
            DIV_ROUND_UP()
            LOG_ERROR()
            malloc()
            gdb_target_to_reg()
                LOG_ERROR()
                exit()
                sscanf()
                gdb_reg_pos()
            free()
            gdb_put_packet()
        gdb_get_register_packet()
            get_target_from_connection()
            strtoul()
            LOG_DEBUG()
            rtos_get_gdb_reg()
                get_target_from_connection()
                LOG_DEBUG()
                calloc()
                LOG_ERROR()
                free()
            target_get_gdb_reg_list_noread()
            gdb_error()
            LOG_ERROR()
            calloc()
            DIV_ROUND_UP()
            gdb_get_reg_value_as_str()
            free()
            gdb_put_packet()
        gdb_set_register_packet()
            get_target_from_connection()
            strtoul()
            LOG_DEBUG()
            LOG_ERROR()
            strlen()
            malloc()
            gdb_target_to_reg()
            rtos_set_reg()
                get_target_from_connection()
            free()
            gdb_put_packet()
            target_get_gdb_reg_list_noread()
            gdb_error()
            DIV_ROUND_UP()
        gdb_read_memory_packet()
            get_target_from_connection()
            strtoull()
            LOG_ERROR()
            strtoul()
            LOG_WARNING()
            gdb_put_packet()
            malloc()
            LOG_DEBUG()
            rtos_read_buffer()
            target_read_buffer()
            memset()
            hexify()
            free()
            gdb_error()
        gdb_write_memory_packet()
            get_target_from_connection()
            strtoull()
            LOG_ERROR()
            strtoul()
            malloc()
            LOG_DEBUG()
            unhexify()
            rtos_write_buffer()
            target_write_buffer()
            gdb_put_packet()
            gdb_error()
            free()
        gdb_breakpoint_watchpoint_packet()
            get_target_from_connection()
            LOG_DEBUG()
            target_name()
            strtoul()
            LOG_ERROR()
            strtoull()
            breakpoint_add()
            gdb_put_packet()
            gdb_error()
            breakpoint_remove()
            watchpoint_add()
            watchpoint_remove()
        gdb_last_signal_packet()
            get_target_from_connection()
            gdb_put_packet()
            gdb_last_signal()
            snprintf()
        LOG_WARNING()
        LOG_ERROR()
        LOG_DEBUG()
        gdb_sig_halted()
            snprintf()
            gdb_put_packet()
        target_call_event_callbacks()
        gdb_step_continue_packet()
            get_target_from_connection()
            LOG_DEBUG()
            strtoull()
            target_resume()
            target_step()
                target_call_event_callbacks()
        gdb_frontend_halted()
        gdb_v_packet()
            get_target_from_connection()
            strncmp()
            gdb_handle_vcont_packet()
                get_target_from_connection()
                gdb_put_packet()
                LOG_DEBUG()
                target_name()
                target_resume()
                LOG_INFO()
                target_poll()
                target_call_event_callbacks()
                rtos_update_threads()
                snprintf()
                gdb_sig_halted()
                target_step()
                gdb_signal_reply()
                LOG_ERROR()
            gdb_put_packet()
            gdb_handle_vrun_packet()
                get_target_from_connection()
                free()
                next_hex_encoded_field()
                    strchr()
                    strlen()
                    malloc()
                    unhexify()
                    free()
                alloc_printf()
                LOG_INFO()
                gdb_restart_inferior()
                    get_target_from_connection()
                    breakpoint_clear_target()
                        foreach_smp_target()
                        breakpoint_clear_target_internal()
                            LOG_DEBUG()
                            target_name()
                            breakpoint_free()
                    watchpoint_clear_target()
                        LOG_DEBUG()
                        target_name()
                        watchpoint_free()
                    command_run_linef()
                    target_name()
                    gdb_thread_packet()
                gdb_put_packet()
            LOG_ERROR()
            strtoul()
            flash_set_dirty()
                flash_bank_list()
            target_call_event_callbacks()
            flash_erase_address_range()
                flash_iterate_address_range()
                    get_flash_bank_by_addr()
                        LOG_ERROR()
                    LOG_DEBUG()
                    flash_iterate_address_range_inner()
                        get_flash_bank_by_addr()
                        LOG_ERROR()
                        LOG_WARNING()
                flash_driver_erase()
                    LOG_ERROR()
            gdb_send_error()
            malloc()
            image_open()
            image_add_section()
                realloc()
                memcpy()
                malloc()
            flash_write()
                flash_write_unlock_verify()
                    flash_set_dirty()
                    calloc()
                    malloc()
                    qsort()
                    compare_section()
                    LOG_WARNING()
                    get_flash_bank_by_addr()
                    assert()
                    LOG_ERROR()
                    flash_write_check_gap()
                        flash_write_align_end()
                        flash_write_align_start()
                    LOG_INFO()
                    LOG_DEBUG()
                    flash_write_align_start()
                    flash_write_align_end()
                    memset()
                    image_read_section()
                    free()
                    flash_unlock_address_range()
                        flash_iterate_address_range()
                        flash_driver_unprotect()
                            flash_driver_protect()
                                LOG_ERROR()
                    flash_erase_address_range()
                    flash_driver_write()
                        LOG_ERROR()
                    flash_driver_verify()
                        default_flash_verify()
                            image_calculate_checksum()
                            target_checksum_memory()
                            LOG_DEBUG()
                        LOG_ERROR()
            LOG_DEBUG()
            image_close()
            free()
        gdb_detach()
            gdb_put_packet()
        gdb_write_memory_binary_packet()
            get_target_from_connection()
            strtoull()
            LOG_ERROR()
            strtoul()
            gdb_put_packet()
            gdb_error()
            LOG_DEBUG()
            rtos_write_buffer()
            target_write_buffer()
        gdb_put_packet()
        gdb_restart_inferior()
        gdb_read_smp_packet()
            get_target_from_connection()
            LOG_WARNING()
            strncmp()
            buf_set_u32()
            hexify()
            gdb_put_packet()
        gdb_write_smp_packet()
            get_target_from_connection()
            LOG_WARNING()
            strncmp()
            strtoul()
            gdb_put_packet()
        gdb_fileio_response_packet()
            get_target_from_connection()
            strtoul()
            LOG_DEBUG()
            target_gdb_fileio_end()
                LOG_TARGET_ERROR()
            target_resume()
            target_step()
        target_halt()
        target_poll()
        LOG_INFO()
gdb_keep_client_alive()
    gdb_output_con()
gdb_new_connection()
    malloc()
    get_target_from_connection()
    gdb_write()
    command_set_output_handler()
    gdb_output()
        LOG_USER_N()
    breakpoint_clear_target()
    watchpoint_clear_target()
    gdb_get_char()
    gdb_putback_char()
    target_call_event_callbacks()
    rtos_update_threads()
    flash_get_bank_count()
    get_flash_bank_by_num_noprobe()
    get_flash_bank_by_num()
    LOG_ERROR()
    log_printf_lf()
    target_name()
    target_state_name()
    target_was_examined()
    LOG_WARNING()
    target_register_event_callback()
        malloc()
    gdb_target_callback_event_handler()
    log_add_callback()
        malloc()
    gdb_log_callback()
get_ambiqmicro_info()
    LOG_ERROR()
    command_print_sameline()
get_at91sam7_info()
    command_print_sameline()
get_ath79_info()
    command_print_sameline()
get_current()
    calloc()
    foreach_smp_target()
    target_get_gdb_reg_list()
    free()
    get_buffer()
    fill_buffer()
    LOG_ERROR()
    fill_task()
        calloc()
        fill_buffer()
        get_buffer()
        LOG_ERROR()
        free()
    get_name()
        linux_read_memory()
        LOG_ERROR()
        target_buffer_get_u32()
    insert_into_threadlist()
get_efm32x_info()
    efm32x_read_info()
    LOG_ERROR()
    command_print_sameline()
get_fespi_info()
    command_print_sameline()
get_info()
    command_print_sameline()
get_lpc2000_info()
    command_print_sameline()
get_lpcspifi_info()
    command_print_sameline()
get_mdr_info()
    command_print_sameline()
get_niietcm4_info()
    command_print_sameline()
get_psoc4_info()
    psoc4_family_by_id()
    command_print_sameline()
    psoc4_get_silicon_id()
        psoc4_sysreq()
            target_alloc_working_area()
            LOG_DEBUG()
            target_write_buffer()
            LOG_WARNING()
            target_buffer_set_u32()
            target_write_u32()
            init_reg_param()
            buf_set_u32()
            target_to_armv7m()
            LOG_ERROR()
            target_run_algorithm()
            ARRAY_SIZE()
            target_read_u32()
            destroy_reg_param()
            target_free_working_area()
        LOG_ERROR()
        target_read_u32()
    psoc4_decode_chip_protection()
        LOG_WARNING()
get_stacking_info_arm926ejs()
    target_read_buffer()
    LOG_ERROR()
    LOG_DEBUG()
get_stellaris_info()
    stellaris_read_clock_info()
        target_read_u32()
        LOG_DEBUG()
    command_print_sameline()
get_stm32l4_info()
    command_print_sameline()
    get_stm32l4_rev_str()
        assert()
    get_stm32l4_bank_type_str()
        assert()
        stm32l4_is_otp()
get_stm32x_info()
    stm32x_get_device_id()
        target_read_u32()
        cortex_m_get_impl_part()
        LOG_INFO()
    command_print_sameline()
get_stm32x_info()
    stm32x_get_device_id()
        stm32x_get_property_addr()
            target_was_examined()
            LOG_ERROR()
            cortex_m_get_impl_part()
            strcmp()
            target_type_name()
            target_address_bits()
        target_read_u32()
    get_stm32f0_revision()
    command_print_sameline()
get_stmqspi_info()
    command_print_sameline()
    BIT()
get_stmsmi_info()
    command_print_sameline()
get_str7x_info()
    command_print_sameline()
get_target_by_num()
get_tms470_info()
    tms470_read_part_info()
        target_read_u32()
        LOG_INFO()
        LOG_WARNING()
        free()
        LOG_ERROR()
        malloc()
        memcpy()
        target_write_u32()
    command_print_sameline()
    tms470_check_flash_unlocked()
        target_read_u32()
        LOG_INFO()
get_w600_info()
    w600_get_flash_id()
        w600_start()
            w600_write_enable()
                w600_start_do()
                    QFLASH_CMD_DATALEN()
                    LOG_DEBUG()
                    target_write_u32()
                    alive_sleep()
                    target_read_u32()
                    LOG_ERROR()
            w600_start_do()
            w600_get_delay()
            w600_write_disable()
                w600_start_do()
        target_read_u32()
    command_print_sameline()
gowin_get_ipdbg_hub()
    LOG_ERROR()
gowin_load_to_sram()
    gowin_read_file()
        memset()
        strrchr()
        LOG_ERROR()
        strcasecmp()
        cpld_read_raw_bit_file()
        gowin_read_fs_file()
            fopen()
            LOG_ERROR()
            strerror()
            gowin_read_fs_file_header()
                fgets()
                feof()
                ferror()
                strlen()
                gowin_read_fs_file_bitsequence()
                gowin_add_byte_to_bit_file()
                    realloc()
                    malloc()
                    LOG_ERROR()
                BIT()
            free()
            fclose()
            fgets()
            feof()
            ferror()
            strlen()
            gowin_read_fs_file_bitsequence()
            gowin_add_byte_to_bit_file()
    flip_u32()
    gowin_read_register()
        gowin_set_instr()
            calloc()
            DIV_ROUND_UP()
            LOG_ERROR()
            buf_set_u32()
            jtag_add_ir_scan()
            jtag_add_runtest()
            free()
        jtag_execute_queue()
        jtag_add_dr_scan()
        le_to_h_u32()
    free()
    LOG_ERROR()
    gowin_enable_config()
        gowin_set_instr()
        jtag_execute_queue()
        gowin_check_status_flag()
            gowin_read_register()
    gowin_erase_sram()
        gowin_set_instr()
        jtag_add_sleep()
        jtag_execute_queue()
        gowin_check_status_flag()
        gowin_runtest_idle()
            adapter_get_speed_khz()
            DIV_ROUND_UP()
            jtag_add_runtest()
            jtag_execute_queue()
    gowin_set_instr()
    jtag_add_dr_scan()
    jtag_add_runtest()
    jtag_execute_queue()
    gowin_disable_config()
        gowin_set_instr()
        jtag_execute_queue()
        gowin_check_status_flag()
gpifcomplete_isr()
gpifwaveform_isr()
halt()
    LOG_DEBUG()
    jtag_add_ir_scan()
    cache_set32()
    csrsi()
    csrr()
    sw()
    cache_set_jump()
    cache_write()
    LOG_ERROR()
help_del_command()
    list_for_each_entry()
    lh()
    strcmp()
    list_del()
    free()
highspeed_isr()
hl_assert_reset()
    target_to_adapter()
    target_to_armv7m()
    LOG_DEBUG()
    jtag_get_reset_config()
    adapter_assert_reset()
    target_was_examined()
    LOG_TARGET_DEBUG()
    target_examine_one()
    LOG_ERROR()
    register_cache_invalidate()
hl_deassert_reset()
    jtag_get_reset_config()
    LOG_DEBUG()
    adapter_deassert_reset()
    target_resume()
hl_interface_config_trace()
    LOG_ERROR()
hl_interface_init()
    LOG_DEBUG()
    hl_layout_init()
        LOG_DEBUG()
        LOG_ERROR()
hl_interface_khz()
hl_interface_override_target()
hl_interface_poll_trace()
hl_interface_quit()
    LOG_DEBUG()
    jtag_command_queue_reset()
    free()
hl_interface_reset()
hl_interface_speed()
hl_interface_speed_div()
hl_jtag_transport_select()
    LOG_DEBUG()
    register_commands()
hl_layout_close()
hl_layout_open()
    LOG_DEBUG()
hl_swd_transport_select()
    LOG_DEBUG()
    register_commands()
hl_target_request_data()
    target_to_adapter()
    hl_dcc_read()
hl_transport_init()
    LOG_DEBUG()
    get_current_target()
    LOG_ERROR()
    get_current_transport()
    strcmp()
    hl_interface_open()
        LOG_DEBUG()
        jtag_get_reset_config()
        LOG_WARNING()
        hl_interface_init_reset()
            adapter_assert_reset()
            adapter_deassert_reset()
    hl_interface_init_target()
        LOG_DEBUG()
        LOG_WARNING()
        LOG_ERROR()
hwthread_create()
    LOG_INFO()
    hwthread_target_for_threadid()
        get_target_from_connection()
        hwthread_find_thread()
            foreach_smp_target()
            threadid_from_target()
    hwthread_thread_packet()
        get_target_from_connection()
        sscanf()
        hwthread_target_for_threadid()
        LOG_ERROR()
        gdb_put_packet()
        threadid_from_target()
        rtos_thread_packet()
hwthread_detect_rtos()
hwthread_get_symbol_list_to_lookup()
    calloc()
hwthread_get_thread_reg()
    hwthread_find_thread()
    LOG_ERROR()
    target_was_examined()
    register_get_by_number()
    assert()
    memcpy()
hwthread_get_thread_reg_list()
    hwthread_find_thread()
    target_was_examined()
    target_get_gdb_reg_list()
    calloc()
    free()
hwthread_read_buffer()
    hwthread_find_thread()
    target_read_buffer()
hwthread_set_reg()
    hwthread_find_thread()
    register_get_by_number()
hwthread_smp_init()
    hwthread_update_threads()
        rtos_free_threadlist()
        foreach_smp_target()
        target_was_examined()
        LOG_WARNING()
        malloc()
        threadid_from_target()
        hwthread_fill_thread()
            threadid_from_target()
            memset()
            strdup()
            target_name()
            snprintf()
            debug_reason_name()
        LOG_DEBUG()
hwthread_write_buffer()
    hwthread_find_thread()
    target_write_buffer()
ibn_isr()
icdi_usb_assert_srst()
icdi_usb_halt()
    icdi_send_cmd()
        snprintf()
        icdi_send_packet()
            assert()
            LOG_ERROR()
            sprintf()
            LOG_DEBUG()
            memcpy()
            libusb_bulk_transfer()
    icdi_get_cmd_result()
        assert()
        memcmp()
        unhexify()
    LOG_ERROR()
icdi_usb_idcode()
icdi_usb_open()
    LOG_DEBUG()
    calloc()
    LOG_ERROR()
    adapter_get_required_serial()
    jtag_libusb_open()
    libusb_claim_interface()
    malloc()
    icdi_usb_version()
        icdi_send_remote_cmd()
            sprintf()
            hexify()
            strlen()
            icdi_send_packet()
        LOG_ERROR()
        unhexify()
        LOG_WARNING()
        LOG_INFO()
    icdi_usb_query()
        icdi_send_cmd()
        icdi_get_cmd_result()
        LOG_ERROR()
        strstr()
        strtol()
        LOG_DEBUG()
        realloc()
    icdi_usb_close()
        jtag_libusb_close()
        free()
icdi_usb_override_target()
    strcmp()
icdi_usb_read_reg()
    snprintf()
    icdi_send_cmd()
    icdi_get_cmd_result()
    LOG_ERROR()
    unhexify()
    le_to_h_u32()
icdi_usb_read_regs()
icdi_usb_reset()
icdi_usb_run()
    icdi_send_cmd()
    icdi_get_cmd_result()
    LOG_ERROR()
icdi_usb_state()
    icdi_usb_read_mem()
        icdi_usb_read_mem_int()
            snprintf()
            icdi_send_cmd()
            icdi_get_cmd_result()
            LOG_ERROR()
            remote_unescape_input()
                LOG_ERROR()
    le_to_h_u32()
icdi_usb_step()
    icdi_send_cmd()
    icdi_get_cmd_result()
    LOG_ERROR()
icdi_usb_write_debug_reg()
    h_u32_to_le()
    icdi_usb_write_mem()
        icdi_usb_write_mem_int()
            snprintf()
            remote_escape_output()
            LOG_ERROR()
            icdi_send_packet()
            icdi_get_cmd_result()
icdi_usb_write_reg()
    h_u32_to_le()
    snprintf()
    hexify()
    icdi_send_cmd()
    icdi_get_cmd_result()
    LOG_ERROR()
imx31_init()
    validate_target_state()
        LOG_ERROR()
    target_read_u16()
    target_read_u32()
    target_write_u32()
    LOG_ERROR()
    test_iomux_settings()
        target_read_u32()
        LOG_ERROR()
    initialize_nf_controller()
        target_write_u16()
        target_read_u16()
        LOG_ERROR()
    imx31_command()
        validate_target_state()
        target_write_u16()
        poll_for_complete_op()
            LOG_ERROR()
    imx31_address()
        validate_target_state()
        target_write_u16()
        poll_for_complete_op()
    do_data_output()
        target_write_u16()
        MX3_NF_BIT_DATAOUT_TYPE()
        poll_for_complete_op()
        target_read_u16()
        LOG_DEBUG()
    LOG_INFO()
imx31_nand_ready()
    validate_target_state()
    target_read_u16()
    alive_sleep()
imx31_read_data()
    validate_target_state()
    do_data_output()
    get_next_halfword_from_sram_buffer()
        LOG_ERROR()
        target_read_u16()
    get_next_byte_from_sram_buffer()
        LOG_ERROR()
        target_read_u16()
imx31_read_page()
    LOG_ERROR()
    validate_target_state()
    imx31_command()
    imx31_address()
    do_data_output()
    target_read_buffer()
imx31_reset()
    validate_target_state()
    initialize_nf_controller()
imx31_write_data()
    LOG_ERROR()
imx31_write_page()
    LOG_ERROR()
    validate_target_state()
    imx31_command()
    imx31_address()
    target_write_buffer()
    LOG_DEBUG()
    target_write_u16()
    poll_for_complete_op()
    do_data_output()
    target_read_u16()
imx_gpio_init()
    LOG_INFO()
    transport_is_jtag()
    imx_gpio_jtag_mode_possible()
        is_gpio_valid()
    LOG_ERROR()
    transport_is_swd()
    imx_gpio_swd_mode_possible()
        is_gpio_valid()
    open()
    strerror()
    sysconf()
    mmap()
    close()
    gpio_mode_get()
    gpio_clear()
    gpio_set()
    gpio_mode_input_set()
    gpio_mode_output_set()
    LOG_DEBUG()
imx_gpio_khz()
    LOG_DEBUG()
imx_gpio_quit()
    transport_is_jtag()
    gpio_mode_set()
        gpio_mode_output_set()
        gpio_mode_input_set()
    transport_is_swd()
imx_gpio_read()
    gpio_level()
imx_gpio_reset()
    gpio_clear()
    gpio_set()
imx_gpio_speed()
imx_gpio_speed_div()
imx_gpio_swd_write()
    gpio_set()
    gpio_clear()
    asm()
imx_gpio_swdio_drive()
    gpio_mode_output_set()
    gpio_mode_input_set()
imx_gpio_swdio_read()
    gpio_level()
imx_gpio_write()
    gpio_set()
    gpio_clear()
    asm()
init_target()
    LOG_DEBUG()
    RISCV_INFO()
    get_register()
        get_info()
        maybe_write_tselect()
            get_info()
            write_remote_csr()
                LOG_DEBUG()
                cache_set_load()
                    slot_offset()
                    cache_set32()
                    load()
                cache_set32()
                csrw()
                cache_set_jump()
                cache_set()
                    slot_offset()
                    cache_set32()
                    riscv_xlen()
                cache_write()
        reg_cache_get()
        update_mstatus_actual()
            get_register()
        set_field()
        cache_set_load()
        cache_set32()
        csrw()
        cache_set()
        riscv_xlen()
        fsw()
        fsd()
        cache_set_jump()
        cache_write()
        get_field()
        register_read()
            get_info()
            cache_set32()
            csrr()
            cache_set_store()
            cache_set_jump()
            LOG_ERROR()
            cache_write()
            cache_get32()
            LOG_WARNING()
            gdb_regno_name()
            cache_get()
            LOG_DEBUG()
    set_register()
        register_write()
            get_info()
            maybe_write_tselect()
            cache_set_load()
            cache_set32()
            csrw()
            cache_set_jump()
            cache_set_store()
            update_mstatus_actual()
            set_field()
            cache_set()
            riscv_xlen()
            flw()
            fld()
            LOG_ERROR()
            cache_write()
            cache_get32()
            LOG_WARNING()
            gdb_regno_name()
    read_memory()
        LOG_ERROR()
        jtag_add_ir_scan()
        cache_set32()
        lw()
        lb()
        sw()
        lh()
        cache_set_jump()
        cache_write()
        get_info()
        scans_new()
        MIN()
        scans_reset()
        scans_add_read32()
        scans_add_write32()
        scans_execute()
        scans_get_u32()
        scans_get_u64()
        LOG_DEBUG()
        increase_dbus_busy_delay()
        increase_interrupt_high_delay()
        wait_for_debugint_clear()
        LOG_INFO()
        LOG_USER()
        scans_delete()
        cache_clean()
    riscv011_authdata_read()
        LOG_ERROR()
        wait_for_authbusy()
            time()
            dbus_read()
            get_field()
            LOG_ERROR()
        dbus_read()
    riscv011_authdata_write()
        LOG_ERROR()
        wait_for_authbusy()
        dbus_write()
    calloc()
    riscv_init_registers()
init_target()
    LOG_DEBUG()
    RISCV_INFO()
    riscv013_get_register()
        LOG_DEBUG()
        target_name()
        gdb_regno_name()
        riscv_select_current_hart()
            riscv_set_current_hartid()
        register_read()
            register_read_direct()
                register_read_abstract()
                    RISCV013_INFO()
                    access_register_command()
                        set_field()
                        LOG_ERROR()
                        gdb_regno_name()
                        assert()
                    execute_abstract_command()
                        RISCV013_INFO()
                        get_field()
                        LOG_DEBUG()
                        dmi_write_exec()
                            dmi_op()
                        wait_for_idle()
                            RISCV013_INFO()
                            time()
                            dmi_read()
                                dmi_op()
                            get_field()
                            LOG_ERROR()
                        dmi_write()
                    LOG_INFO()
                    read_abstract_arg()
                        LOG_ERROR()
                        dmi_read()
                register_size()
                    riscv_xlen()
                has_sufficient_progbuf()
                    RISCV013_INFO()
                    RISCV_INFO()
                riscv_program_init()
                    memset()
                    riscv_xlen()
                register_read()
                prep_for_register_access()
                    is_fpu_reg()
                    is_vector_reg()
                    register_read()
                    register_write_direct()
                        LOG_DEBUG()
                        riscv_current_hartid()
                        gdb_regno_name()
                        register_write_abstract()
                            RISCV013_INFO()
                            access_register_command()
                            write_abstract_arg()
                                LOG_ERROR()
                                dmi_write()
                            execute_abstract_command()
                            LOG_INFO()
                        register_size()
                        has_sufficient_progbuf()
                        riscv_is_halted()
                            RISCV_INFO()
                            assert()
                        riscv_program_init()
                        register_read()
                        prep_for_register_access()
                        riscv_supports_extension()
                        riscv_xlen()
                        riscv_program_insert()
                            riscv_debug_buffer_size()
                                RISCV_INFO()
                            LOG_ERROR()
                        fld()
                        scratch_reserve()
                            get_info()
                            examine_progbuf()
                                get_info()
                                LOG_INFO()
                                register_read()
                                riscv_program_init()
                                riscv_program_insert()
                                auipc()
                                riscv_program_exec()
                                    keep_alive()
                                    LOG_DEBUG()
                                    riscv_get_register()
                                    riscv_program_ebreak()
                                        RISCV_INFO()
                                        riscv_debug_buffer_size()
                                        riscv_program_insert()
                                        ebreak()
                                    LOG_ERROR()
                                    riscv_debug_buffer_size()
                                    riscv_program_write()
                                        LOG_DEBUG()
                                        riscv_write_debug_buffer()
                                            RISCV_INFO()
                                    riscv_execute_debug_buffer()
                                        RISCV_INFO()
                                    riscv_read_debug_buffer()
                                        RISCV_INFO()
                                    riscv_set_register()
                                register_read_direct()
                                sw()
                                register_write_direct()
                                dmi_read()
                            target_alloc_working_area()
                            LOG_ERROR()
                        register_write_direct()
                        scratch_release()
                            target_free_working_area()
                        scratch_write64()
                            dmi_write()
                            write_memory()
                                LOG_ERROR()
                                RISCV_INFO()
                                RISCV013_INFO()
                                mem_should_skip_progbuf()
                                    assert()
                                    has_sufficient_progbuf()
                                    LOG_DEBUG()
                                    riscv_xlen()
                                write_memory_progbuf()
                                    RISCV013_INFO()
                                    riscv_xlen()
                                    LOG_ERROR()
                                    LOG_DEBUG()
                                    select_dmi()
                                    modify_privilege()
                                        has_sufficient_progbuf()
                                        register_read()
                                        get_field()
                                        set_field()
                                        register_write_direct()
                                    register_read()
                                    riscv_program_init()
                                    has_sufficient_progbuf()
                                    get_field()
                                    riscv_program_csrrsi()
                                        assert()
                                        riscv_program_insert()
                                        csrrsi()
                                    riscv_program_sbr()
                                        riscv_program_insert()
                                        sb()
                                    riscv_program_shr()
                                        riscv_program_insert()
                                        sh()
                                    riscv_program_swr()
                                        riscv_program_insert()
                                        sw()
                                    riscv_program_sdr()
                                        riscv_program_insert()
                                        sd()
                                    riscv_program_csrrci()
                                        assert()
                                        riscv_program_insert()
                                        csrrci()
                                    riscv_program_addi()
                                        riscv_program_insert()
                                        addi()
                                    riscv_program_ebreak()
                                    riscv_program_write()
                                    riscv_batch_alloc()
                                        calloc()
                                        malloc()
                                        LOG_ERROR()
                                        free()
                                    buf_get_u64()
                                    log_memory_access()
                                        sprintf()
                                        assert()
                                        LOG_DEBUG()
                                    register_write_direct()
                                    riscv_batch_free()
                                        free()
                                    dmi_write()
                                    access_register_command()
                                    execute_abstract_command()
                                    riscv_batch_add_dmi_write()
                                        assert()
                                        riscv_dmi_write_u64_bits()
                                            RISCV_INFO()
                                        riscv_fill_dmi_write_u64()
                                            RISCV_INFO()
                                        riscv_fill_dmi_nop_u64()
                                            RISCV_INFO()
                                    riscv_batch_full()
                                    batch_run()
                                        RISCV013_INFO()
                                        RISCV_INFO()
                                        riscv_batch_run()
                                            LOG_DEBUG()
                                            riscv_batch_add_nop()
                                                assert()
                                                riscv_dmi_write_u64_bits()
                                                riscv_fill_dmi_nop_u64()
                                            riscv_add_bscan_tunneled_scan()
                                            jtag_add_dr_scan()
                                            jtag_add_runtest()
                                            keep_alive()
                                            jtag_execute_queue()
                                            LOG_ERROR()
                                            buffer_shr()
                                            dump_field()
                                    dmi_op()
                                    dmi_read()
                                    riscv013_clear_abstract_error()
                                        time()
                                        dmi_read()
                                        get_field()
                                        LOG_ERROR()
                                        dmi_write()
                                    increase_ac_busy_delay()
                                        get_info()
                                        LOG_DEBUG()
                                    register_read_direct()
                                    execute_fence()
                                        riscv_program_init()
                                        riscv_program_fence_i()
                                            riscv_program_insert()
                                            fence_i()
                                        riscv_program_fence()
                                            riscv_program_insert()
                                            fence()
                                        riscv_program_exec()
                                        LOG_DEBUG()
                                mem_should_skip_sysbus()
                                    assert()
                                    RISCV013_INFO()
                                    sba_supports_access()
                                        RISCV013_INFO()
                                        get_field()
                                    LOG_DEBUG()
                                    get_field()
                                get_field()
                                write_memory_bus_v0()
                                    LOG_DEBUG()
                                    dmi_write()
                                    buf_get_u64()
                                    set_field()
                                write_memory_bus_v1()
                                    RISCV013_INFO()
                                    sb_sbaccess()
                                        set_field()
                                        assert()
                                    set_field()
                                    dmi_write()
                                    sb_write_address()
                                        RISCV013_INFO()
                                        get_field()
                                        dmi_op()
                                    LOG_DEBUG()
                                    riscv_batch_alloc()
                                    riscv_batch_available_scans()
                                    riscv_batch_add_dmi_write()
                                    log_memory_access()
                                    batch_run()
                                    riscv_batch_free()
                                    dmi_op()
                                    time()
                                    get_field()
                                    LOG_ERROR()
                                    dmi_read()
                                    sb_read_address()
                                        RISCV013_INFO()
                                        get_field()
                                        dmi_read()
                                mem_should_skip_abstract()
                                    assert()
                                    LOG_DEBUG()
                                    riscv_xlen()
                                    LOG_ERROR()
                                write_memory_abstract()
                                    RISCV013_INFO()
                                    LOG_DEBUG()
                                    access_memory_command()
                                        set_field()
                                        abstract_memory_size()
                                            set_field()
                                            LOG_ERROR()
                                    buf_get_u64()
                                    write_abstract_arg()
                                    riscv_xlen()
                                    LOG_ERROR()
                                    execute_abstract_command()
                                    read_abstract_arg()
                                    LOG_WARNING()
                                log_mem_access_result()
                                    RISCV_INFO()
                                    snprintf()
                                    LOG_WARNING()
                                    LOG_DEBUG()
                                target_name()
                        csrr()
                        vsetvli()
                        fmv_d_x()
                        fmv_w_x()
                        riscv_program_csrw()
                            assert()
                            riscv_program_insert()
                            csrrw()
                        LOG_ERROR()
                        riscv_program_exec()
                        buf_set_u64()
                        cleanup_after_register_access()
                            is_fpu_reg()
                            is_vector_reg()
                            register_write_direct()
                    set_field()
                riscv_supports_extension()
                riscv_xlen()
                riscv_program_insert()
                fsd()
                scratch_reserve()
                register_write_direct()
                scratch_release()
                fmv_x_d()
                fmv_x_w()
                riscv_program_csrr()
                    assert()
                    riscv_program_insert()
                    csrrs()
                LOG_ERROR()
                gdb_regno_name()
                riscv_program_exec()
                scratch_read64()
                    dmi_read()
                    read_memory()
                        LOG_ERROR()
                        RISCV_INFO()
                        RISCV013_INFO()
                        mem_should_skip_progbuf()
                        read_memory_progbuf()
                            riscv_xlen()
                            LOG_ERROR()
                            LOG_DEBUG()
                            select_dmi()
                            memset()
                            execute_fence()
                            read_memory_progbuf_one()
                                modify_privilege()
                                register_read()
                                riscv_program_init()
                                has_sufficient_progbuf()
                                get_field()
                                riscv_program_csrrsi()
                                riscv_program_lbr()
                                    riscv_program_insert()
                                    lb()
                                riscv_program_lhr()
                                    riscv_program_insert()
                                    lh()
                                riscv_program_lwr()
                                    riscv_program_insert()
                                    lw()
                                riscv_program_ldr()
                                    riscv_program_insert()
                                    ld()
                                LOG_ERROR()
                                riscv_program_csrrci()
                                riscv_program_ebreak()
                                riscv_program_write()
                                write_abstract_arg()
                                riscv_xlen()
                                access_register_command()
                                execute_abstract_command()
                                buf_set_u64()
                                log_memory_access()
                                riscv_set_register()
                                register_write_direct()
                            modify_privilege()
                            register_read()
                            riscv_program_init()
                            has_sufficient_progbuf()
                            get_field()
                            riscv_program_csrrsi()
                            riscv_program_lbr()
                            riscv_program_lhr()
                            riscv_program_lwr()
                            riscv_program_ldr()
                            riscv_program_csrrci()
                            riscv_program_addi()
                            riscv_program_ebreak()
                            riscv_program_write()
                            read_memory_progbuf_inner()
                                RISCV013_INFO()
                                register_write_direct()
                                access_register_command()
                                riscv_xlen()
                                execute_abstract_command()
                                register_read_direct()
                                buf_set_u64()
                                log_memory_access()
                                dmi_write()
                                dmi_read_exec()
                                    dmi_op()
                                LOG_DEBUG()
                                riscv_batch_alloc()
                                riscv_batch_add_dmi_read()
                                    assert()
                                    riscv_dmi_write_u64_bits()
                                    riscv_fill_dmi_read_u64()
                                        RISCV_INFO()
                                    riscv_fill_dmi_nop_u64()
                                riscv_batch_full()
                                batch_run()
                                dmi_read()
                                get_field()
                                increase_ac_busy_delay()
                                riscv013_clear_abstract_error()
                                riscv_batch_free()
                                dmi_write_exec()
                                read()
                                assert()
                                riscv_batch_get_dmi_read_op()
                                    assert()
                                    buf_get_u32()
                                riscv_batch_get_dmi_read_data()
                                    assert()
                                    buf_get_u32()
                                LOG_WARNING()
                            buf_set_u64()
                            riscv_set_register()
                            register_write_direct()
                        mem_should_skip_sysbus()
                        get_field()
                        read_memory_bus_v0()
                            LOG_ERROR()
                            LOG_DEBUG()
                            dmi_read()
                            dmi_write()
                            set_field()
                            buf_set_u32()
                        read_memory_bus_v1()
                            LOG_ERROR()
                            RISCV013_INFO()
                            set_field()
                            sb_sbaccess()
                            dmi_write()
                            sb_write_address()
                            jtag_add_runtest()
                            jtag_execute_queue()
                            assert()
                            dmi_scan()
                            increase_dmi_busy_delay()
                            buf_set_u32()
                            MIN()
                            log_memory_access()
                            read_sbcs_nonbusy()
                                time()
                                dmi_read()
                                get_field()
                                LOG_ERROR()
                            get_field()
                            read_memory_bus_word()
                                assert()
                            sb_read_address()
                        mem_should_skip_abstract()
                        read_memory_abstract()
                            RISCV013_INFO()
                            LOG_DEBUG()
                            memset()
                            access_memory_command()
                            write_abstract_arg()
                            riscv_xlen()
                            LOG_ERROR()
                            execute_abstract_command()
                            read_abstract_arg()
                            LOG_WARNING()
                            buf_set_u64()
                        log_mem_access_result()
                        target_name()
                register_read_direct()
                cleanup_after_register_access()
                LOG_DEBUG()
                riscv_current_hartid()
            buf_set_u64()
        set_field()
        get_field()
    riscv013_set_register()
        riscv013_select_current_hart()
            RISCV_INFO()
            get_dm()
            dmi_read()
            set_hartsel()
            dmi_write()
        LOG_DEBUG()
        gdb_regno_name()
        register_write_direct()
        register_read_direct()
        LOG_ERROR()
        register_read()
        set_field()
        get_field()
    riscv013_get_register_buf()
        assert()
        riscv_select_current_hart()
        register_read()
        prep_for_register_access()
        prep_for_vector_access()
            RISCV_INFO()
            riscv_xlen()
            LOG_ERROR()
            register_read()
            register_write_direct()
            DIV_ROUND_UP()
        riscv_xlen()
        riscv_program_init()
        riscv_program_insert()
        vmv_x_s()
        vslide1down_vx()
        riscv_program_exec()
        register_read_direct()
        buf_set_u64()
        cleanup_after_vector_access()
            register_write_direct()
        cleanup_after_register_access()
        register_write_direct()
    riscv013_set_register_buf()
        assert()
        riscv_select_current_hart()
        register_read()
        prep_for_register_access()
        prep_for_vector_access()
        riscv_xlen()
        riscv_program_init()
        riscv_program_insert()
        vslide1down_vx()
        register_write_direct()
        buf_get_u64()
        riscv_program_exec()
        cleanup_after_vector_access()
        cleanup_after_register_access()
    riscv013_select_current_hart()
    riscv013_is_halted()
        dmstatus_read()
        get_field()
        LOG_ERROR()
        riscv_current_hartid()
        LOG_INFO()
        set_hartsel()
        dmi_write()
    riscv013_resume_go()
        select_prepped_harts()
            get_dm()
            RISCV_INFO()
            assert()
            memset()
            list_for_each_entry()
            riscv_info()
            get_info()
            LOG_DEBUG()
            dmi_write()
        riscv013_step_or_resume_current_hart()
            RISCV_INFO()
            LOG_DEBUG()
            riscv_is_halted()
            LOG_ERROR()
            set_hartsel()
            dmi_write()
            set_field()
            usleep()
            dmstatus_read()
            get_field()
            riscv_halt()
                RISCV_INFO()
                get_target_type()
                    LOG_ERROR()
                    RISCV_INFO()
                LOG_DEBUG()
                foreach_smp_target()
                halt_prep()
                    RISCV_INFO()
                    LOG_DEBUG()
                    target_name()
                    riscv_select_current_hart()
                    riscv_is_halted()
                riscv_info()
                halt_go()
                    RISCV_INFO()
                    get_target_type()
                    riscv_halt_go_all_harts()
                        RISCV_INFO()
                        riscv_select_current_hart()
                        riscv_is_halted()
                        LOG_DEBUG()
                        target_name()
                        riscv_invalidate_register_cache()
                            LOG_DEBUG()
                            register_cache_invalidate()
                halt_finish()
                    target_call_event_callbacks()
    riscv013_step_current_hart()
        riscv013_step_or_resume_current_hart()
    riscv013_on_halt()
    riscv013_resume_prep()
        riscv013_on_step_or_resume()
            maybe_execute_fence_i()
                has_sufficient_progbuf()
                execute_fence()
            register_read()
            set_field()
            riscv_set_register()
    riscv013_halt_prep()
    riscv013_halt_go()
        select_prepped_harts()
        RISCV_INFO()
        LOG_DEBUG()
        set_hartsel()
        dmi_write()
        riscv_is_halted()
        dmstatus_read()
        dmi_read()
        LOG_ERROR()
        set_field()
        get_dm()
        list_for_each_entry()
    riscv013_on_step()
        riscv013_on_step_or_resume()
    riscv013_halt_reason()
        register_read()
        LOG_DEBUG()
        get_field()
        riscv_enumerate_triggers()
        LOG_ERROR()
    riscv013_read_debug_buffer()
        dmi_read()
    riscv013_write_debug_buffer()
        get_dm()
        dmi_write()
        LOG_DEBUG()
    riscv013_execute_debug_buffer()
        set_field()
        execute_abstract_command()
    riscv013_fill_dmi_write_u64()
        RISCV013_INFO()
        buf_set_u64()
    riscv013_fill_dmi_read_u64()
        RISCV013_INFO()
        buf_set_u64()
    riscv013_fill_dmi_nop_u64()
        RISCV013_INFO()
        buf_set_u64()
    riscv013_dmi_write_u64_bits()
        RISCV013_INFO()
    riscv013_authdata_read()
        LOG_ERROR()
        wait_for_authbusy()
            time()
            dmstatus_read()
            get_field()
            LOG_ERROR()
        dmi_read()
    riscv013_authdata_write()
        LOG_ERROR()
        wait_for_authbusy()
        dmi_write()
        get_field()
        LOG_INFO()
        get_dm()
        list_for_each_entry()
        examine()
            dtmcontrol_scan()
            LOG_DEBUG()
            get_field()
            LOG_ERROR()
            get_info()
            get_dm()
            dmi_write()
            dmi_read()
            dmstatus_read()
            LOG_INFO()
            RISCV_INFO()
            has_sufficient_progbuf()
            LOG_WARNING()
            riscv013_select_current_hart()
            halted()
            riscv_is_halted()
            riscv013_halt_go()
            register_read_abstract()
            register_read()
            riscv_supports_extension()
            discover_vlenb()
                RISCV_INFO()
                register_read()
                LOG_WARNING()
                target_name()
                LOG_INFO()
            riscv_init_registers()
            riscv013_step_or_resume_current_hart()
            target_set_examined()
            set_haltgroup()
                write()
                set_field()
                dmi_write()
                read()
                dmi_read()
                get_field()
            riscv_count_harts()
                RISCV_INFO()
    dmi_read()
    dmi_write()
    read_memory()
    riscv013_hart_count()
        get_dm()
        assert()
    riscv013_data_bits()
        RISCV013_INFO()
        RISCV_INFO()
        has_sufficient_progbuf()
        riscv_xlen()
        get_field()
        LOG_ERROR()
    calloc()
    sample_memory()
        sample_memory_bus_v1()
            RISCV013_INFO()
            get_field()
            LOG_ERROR()
            ARRAY_SIZE()
            timeval_ms()
            riscv_batch_alloc()
            sba_supports_access()
            sb_sbaccess()
            riscv_batch_add_dmi_write()
            riscv_batch_add_dmi_read()
            riscv_batch_free()
            batch_run()
            riscv_batch_get_dmi_read_data()
            dmi_write()
            read()
            assert()
            buf_set_u64()
    get_info()
intel_get_ipdbg_hub()
    LOG_ERROR()
intel_load()
    adapter_get_speed_khz()
    DIV_ROUND_UP()
    intel_check_config()
        LOG_ERROR()
        intel_check_for_unique_id()
            ARRAY_SIZE()
        intel_fill_device_parameters()
            ARRAY_SIZE()
    intel_read_file()
        strrchr()
        LOG_ERROR()
        strcasecmp()
        cpld_read_raw_bit_file()
    intel_set_instr()
        calloc()
        DIV_ROUND_UP()
        LOG_ERROR()
        buf_set_u32()
        jtag_add_ir_scan()
        free()
    free()
    jtag_add_runtest()
    jtag_execute_queue()
    jtag_add_dr_scan()
    calloc()
    LOG_ERROR()
ipdbg_on_connection_closed()
    LOG_INFO()
    ipdbg_stop_polling()
        LOG_INFO()
        target_unregister_timer_callback()
        ipdbg_polling_callback()
            ipdbg_shift_vir()
                ipdbg_shift_instr()
                    buf_get_u32()
                    calloc()
                    DIV_ROUND_UP()
                    LOG_ERROR()
                    buf_set_u32()
                    ipdbg_init_scan_field()
                    jtag_add_ir_scan()
                    jtag_execute_queue()
                    free()
                calloc()
                DIV_ROUND_UP()
                LOG_ERROR()
                buf_set_u32()
                ipdbg_init_scan_field()
                jtag_add_dr_scan()
                jtag_execute_queue()
                free()
            ipdbg_shift_instr()
            BIT()
            ipdbg_fifo_is_empty()
            ipdbg_jtag_transfer_byte()
                ipdbg_get_from_fifo()
                    ipdbg_fifo_is_empty()
                ipdbg_shift_data()
                    calloc()
                    DIV_ROUND_UP()
                    LOG_ERROR()
                    buf_set_u32()
                    free()
                    ipdbg_init_scan_field()
                    jtag_add_dr_scan()
                    jtag_execute_queue()
                    buf_get_u32()
                ipdbg_distribute_data_from_hub()
                    LOG_INFO()
                    ipdbg_fifo_is_full()
                    ipdbg_move_buffer_to_connection()
                        ipdbg_fifo_is_empty()
                        ipdbg_zero_rd_idx()
                        connection_write()
                        LOG_ERROR()
                    ipdbg_append_to_fifo()
                        ipdbg_fifo_is_full()
                        ipdbg_zero_rd_idx()
                BIT()
                LOG_INFO()
            ipdbg_shift_data()
            ipdbg_distribute_data_from_hub()
            ipdbg_move_buffer_to_connection()
ipdbg_on_connection_input()
    ipdbg_fifo_is_full()
    ipdbg_zero_rd_idx()
    connection_read()
    LOG_ERROR()
    strerror()
ipdbg_on_new_connection()
    ipdbg_init_fifo()
    ipdbg_start_polling()
        ipdbg_shift_vir()
        ipdbg_shift_instr()
        ipdbg_shift_data()
        LOG_INFO()
        target_register_timer_callback()
        ipdbg_polling_callback()
    LOG_ERROR()
    LOG_INFO()
is_thread_id_valid_arm926ejs()
jep106_table_manufacturer()
    LOG_DEBUG()
    ARRAY_SIZE()
jim_arm_tpiu_swo_configure()
    jim_to_command()
    jim_getopt_setup()
        memset()
    strcmp()
    Jim_WrongNumArgs()
    arm_tpiu_swo_configure()
        assert()
        Jim_SetResultFormatted()
        Jim_SetEmptyResult()
        adiv5_jim_mem_ap_spot_configure()
            adiv5_jim_spot_configure()
        jim_getopt_nvp()
            jim_getopt_obj()
            jim_nvp_name2value_obj()
        jim_getopt_nvp_unknown()
            jim_set_result_nvp_unknown()
                Jim_SetResultFormatted()
                Jim_AppendStrings()
                Jim_GetResult()
        jim_getopt_wide()
        Jim_SetResultString()
        Jim_SetResult()
        Jim_NewIntObj()
        jim_nvp_value2name()
            jim_nvp_value2name_simple()
        Jim_NewStringObj()
        jim_getopt_string()
            jim_getopt_obj()
            Jim_GetString()
        strtol()
        free()
        strdup()
        LOG_ERROR()
        Jim_WrongNumArgs()
        calloc()
        Jim_DecrRefCount()
        jim_getopt_obj()
        Jim_DuplicateObj()
        Jim_IncrRefCount()
jim_arm_tpiu_swo_create()
    jim_getopt_setup()
    Jim_WrongNumArgs()
    calloc()
    LOG_ERROR()
    INIT_LIST_HEAD()
    adiv5_mem_ap_spot_init()
    jim_getopt_obj()
    strdup()
    Jim_GetString()
    free()
    arm_tpiu_swo_configure()
    Jim_SetResultString()
    arm_tpiu_swo_create()
        current_command_context()
        assert()
        Jim_GetCommand()
        Jim_NewStringObj()
        Jim_SetResultFormatted()
        register_commands_with_data()
        list_add_tail()
jim_capture()
    command_log_capture_start()
        Jim_NewStringObj()
        Jim_IncrRefCount()
        malloc()
        LOG_ERROR()
        Jim_DecrRefCount()
        log_add_callback()
        tcl_output()
            Jim_AppendString()
            strlen()
    jtag_poll_mask()
    Jim_GetString()
    Jim_Eval_Named()
    jtag_poll_unmask()
    command_log_capture_finish()
        log_remove_callback()
        tcl_output()
        Jim_GetString()
        Jim_SetResult()
        Jim_DecrRefCount()
        free()
jim_command_mode()
    current_command_context()
    alloc_concatenate_strings()
        assert()
        strdup()
        Jim_GetString()
        LOG_ERROR()
        alloc_printf()
        free()
    Jim_NewStringObj()
    Jim_IncrRefCount()
    Jim_GetCommand()
    Jim_DecrRefCount()
    free()
    jimcmd_is_proc()
    jimcmd_is_oocd_command()
        jim_command_dispatch()
            alloc_printf()
            Jim_GetString()
            Jim_NewStringObj()
            Jim_IncrRefCount()
            free()
            Jim_GetCommand()
            Jim_EvalObjPrefix()
            Jim_DecrRefCount()
            script_debug()
                alloc_printf()
                Jim_GetString()
                free()
                LOG_DEBUG()
            jim_to_command()
            current_command_context()
            command_can_run()
                LOG_ERROR()
            target_call_timer_callbacks()
            exec_command()
                script_command_args_alloc()
                    malloc()
                    Jim_GetString()
                    strdup()
                    script_command_args_free()
                        free()
                run_command()
                    Jim_NewEmptyStringObj()
                    Jim_IncrRefCount()
                    command_run_linef()
                    LOG_DEBUG()
                    Jim_String()
                    strlen()
                    Jim_SetResultString()
                    Jim_DecrRefCount()
                script_command_args_free()
                command_retval_set()
                    Jim_GetAssocData()
    Jim_SetResultString()
    jimcmd_privdata()
jim_cti_create()
    jim_getopt_setup()
    Jim_WrongNumArgs()
    cti_create()
        current_command_context()
        assert()
        Jim_WrongNumArgs()
        jim_getopt_obj()
        Jim_GetCommand()
        Jim_GetString()
        Jim_SetResultFormatted()
        calloc()
        adiv5_mem_ap_spot_init()
        cti_configure()
            adiv5_jim_mem_ap_spot_configure()
            Jim_SetResultFormatted()
            Jim_String()
            Jim_SetResultString()
        free()
        strdup()
        register_commands_with_data()
        list_add_tail()
        dap_get_ap()
        Jim_SetResultString()
jim_dap_create()
    jim_getopt_setup()
    Jim_WrongNumArgs()
    dap_create()
        current_command_context()
        assert()
        Jim_WrongNumArgs()
        jim_getopt_obj()
        Jim_GetCommand()
        Jim_GetString()
        Jim_SetResultFormatted()
        calloc()
        dap_instance_init()
            INIT_LIST_HEAD()
        strdup()
        dap_configure()
            Jim_SetEmptyResult()
            jim_getopt_nvp()
            jim_getopt_nvp_unknown()
            jim_getopt_obj()
            jtag_tap_by_jim_obj()
                Jim_GetString()
                jtag_tap_by_string()
                Jim_SetResultFormatted()
            Jim_SetResultString()
            jim_getopt_wide()
            Jim_SetResultFormatted()
        Jim_SetResultString()
        dap_check_config()
            transport_is_jtag()
            transport_is_dapdirect_jtag()
            transport_is_hla()
            dap_is_multidrop()
            list_for_each_entry()
            lh()
            transport_is_swd()
            LOG_ERROR()
            adiv5_dap_name()
            transport_is_dapdirect_swd()
        transport_is_hla()
        register_commands_with_data()
        list_add_tail()
        free()
jim_debug_argv_string()
    Jim_FreeObj()
    Jim_NewEmptyStringObj()
    Jim_AppendStrings()
    Jim_String()
jim_get_nvp()
    jim_nvp_name2value_obj()
jim_getopt_debug()
    fprintf()
    Jim_String()
jim_getopt_double()
    jim_getopt_obj()
    Jim_GetDouble()
    Jim_SetResultFormatted()
jim_getopt_enum()
    jim_getopt_obj()
    Jim_GetEnum()
jim_jtag_configure()
    jim_to_command()
    jim_getopt_setup()
    strcmp()
    Jim_WrongNumArgs()
    jim_getopt_obj()
    jtag_tap_by_jim_obj()
    jtag_tap_configure_cmd()
        Jim_SetEmptyResult()
        jim_getopt_nvp()
        jim_getopt_nvp_unknown()
        jtag_tap_configure_event()
            Jim_WrongNumArgs()
            jim_getopt_nvp()
            jim_getopt_nvp_unknown()
            Jim_SetEmptyResult()
            calloc()
            Jim_DecrRefCount()
            jim_getopt_obj()
            Jim_DuplicateObj()
            Jim_IncrRefCount()
            Jim_SetResult()
        Jim_SetResultFormatted()
        Jim_WrongNumArgs()
        Jim_SetResult()
        Jim_NewIntObj()
jim_nvp_name2value_obj_nocase()
    jim_nvp_name2value_nocase()
        jim_nvp_name2value_nocase_simple()
            strcasecmp()
    Jim_String()
jim_nvp_value2name_obj()
    Jim_GetWide()
    jim_nvp_value2name()
jim_target_array2mem()
    current_command_context()
    assert()
    get_current_target()
    target_array2mem()
        LOG_WARNING()
        Jim_WrongNumArgs()
        Jim_GetString()
        Jim_GetLong()
        Jim_SetResult()
        Jim_NewEmptyStringObj()
        Jim_AppendStrings()
        Jim_GetResult()
        Jim_GetWide()
        strncmp()
        sprintf()
        malloc()
        MIN()
        get_u64_array_element()
            alloc_printf()
            Jim_NewStringObj()
            free()
            Jim_IncrRefCount()
            Jim_GetVariable()
            Jim_DecrRefCount()
            Jim_GetWide()
        free()
        target_buffer_set_u64()
        target_buffer_set_u32()
        target_buffer_set_u16()
        target_write_phys_memory()
        target_write_memory()
        LOG_ERROR()
jim_target_configure()
    jim_to_command()
    jim_getopt_setup()
    strcmp()
    Jim_WrongNumArgs()
    current_command_context()
    assert()
    get_current_target()
    target_configure()
        Jim_SetEmptyResult()
        jim_getopt_nvp()
        jim_getopt_nvp_unknown()
        Jim_SetResultFormatted()
        Jim_WrongNumArgs()
        Jim_SetResultString()
        target_type_name()
        LOG_INFO()
        calloc()
        jim_getopt_obj()
        Jim_DecrRefCount()
        Jim_DuplicateObj()
        Jim_IncrRefCount()
        Jim_SetResult()
        target_free_all_working_areas()
        jim_getopt_wide()
        Jim_NewIntObj()
        jim_nvp_value2name_simple()
        jtag_tap_by_jim_obj()
        rtos_create()
            Jim_WrongNumArgs()
            os_free()
                free()
            jim_getopt_string()
            strcmp()
            os_alloc()
                calloc()
                rtos_thread_packet()
                rtos_target_for_threadid()
                    get_target_from_connection()
            os_alloc_create()
                os_alloc()
                os_free()
            Jim_SetResultFormatted()
            Jim_GetResult()
            Jim_AppendStrings()
        current_command_context()
        jim_getopt_string()
        free()
        strdup()
jim_target_create()
    jim_getopt_setup()
    Jim_WrongNumArgs()
    target_create()
        current_command_context()
        assert()
        Jim_WrongNumArgs()
        jim_getopt_obj()
        Jim_GetCommand()
        Jim_GetString()
        Jim_SetResultFormatted()
        jim_getopt_string()
        get_current_transport()
        LOG_ERROR()
        LOG_INFO()
        strcmp()
        Jim_AppendStrings()
        Jim_GetResult()
        calloc()
        new_target_number()
        malloc()
        free()
        memcpy()
        target_configure()
        Jim_SetResultString()
        rtos_destroy()
            os_free()
        strdup()
        LOG_DEBUG()
        register_commands()
        register_commands_override_target()
        append_to_list_all_targets()
jim_target_invoke_event()
    jim_getopt_setup()
    Jim_GetString()
    Jim_SetResultFormatted()
    jim_getopt_nvp()
    jim_getopt_nvp_unknown()
    current_command_context()
    assert()
    get_current_target()
    target_handle_event()
jim_target_mem2array()
    current_command_context()
    assert()
    get_current_target()
    target_mem2array()
        LOG_WARNING()
        Jim_WrongNumArgs()
        Jim_GetString()
        Jim_GetLong()
        Jim_SetResult()
        Jim_NewEmptyStringObj()
        Jim_AppendStrings()
        Jim_GetResult()
        Jim_GetWide()
        strncmp()
        sprintf()
        malloc()
        MIN()
        target_read_phys_memory()
        target_read_memory()
        LOG_ERROR()
        target_buffer_get_u64()
        target_buffer_get_u32()
        target_buffer_get_u16()
        new_u64_array_element()
            alloc_printf()
            Jim_NewStringObj()
            Jim_NewWideObj()
            free()
            Jim_IncrRefCount()
            Jim_SetVariable()
            Jim_DecrRefCount()
        free()
jlink_execute_queue()
    jlink_execute_command()
        jlink_execute_stableclocks()
            LOG_DEBUG_IO()
            jlink_stableclocks()
                tap_get_state()
                jlink_clock_data()
                    jlink_flush()
                        jtag_debug_state_machine()
                        jaylink_jtag_io()
                        LOG_ERROR()
                        jaylink_strerror()
                        jlink_tap_init()
                            memset()
                        buf_set_buf()
                        LOG_DEBUG_IO()
                    buf_set_buf()
        jlink_execute_runtest()
            LOG_DEBUG_IO()
            jlink_end_state()
                tap_is_state_stable()
                tap_set_end_state()
                LOG_ERROR()
                exit()
            jlink_runtest()
                tap_get_end_state()
                tap_get_state()
                jlink_end_state()
                jlink_state_move()
                    tap_get_tms_path()
                    tap_get_state()
                    tap_get_end_state()
                    tap_get_tms_path_len()
                    jlink_clock_data()
                    tap_set_state()
                jlink_stableclocks()
        jlink_execute_statemove()
            LOG_DEBUG_IO()
            jlink_end_state()
            jlink_state_move()
        jlink_execute_pathmove()
            LOG_DEBUG_IO()
            jlink_path_move()
                tap_state_transition()
                tap_get_state()
                jlink_clock_data()
                LOG_ERROR()
                tap_state_name()
                exit()
                tap_set_state()
                tap_set_end_state()
        jlink_execute_scan()
            LOG_DEBUG_IO()
            jtag_scan_type()
            LOG_DEBUG()
            tap_get_state()
            jlink_end_state()
            jlink_state_move()
            tap_get_end_state()
            tap_state_name()
        jlink_execute_sleep()
            LOG_DEBUG_IO()
            jlink_flush()
            jtag_sleep()
        LOG_ERROR()
    jlink_flush()
jlink_init()
    LOG_DEBUG()
    jaylink_version_package_get_string()
    jaylink_library_has_cap()
    LOG_ERROR()
    jaylink_init()
    jaylink_strerror()
    jaylink_log_set_callback()
    jaylink_log_handler()
        log_vprintf_lf()
    jaylink_exit()
    adapter_get_required_serial()
    jaylink_parse_serial_number()
    jlink_open_device()
        jaylink_discovery_scan()
        LOG_ERROR()
        jaylink_strerror()
        jaylink_exit()
        jaylink_get_devices()
        adapter_usb_get_location()
        jaylink_free_devices()
        jaylink_device_get_serial_number()
        LOG_WARNING()
        jaylink_device_get_usb_address()
        jlink_usb_location_equal()
            jaylink_device_get_usb_bus_ports()
            LOG_WARNING()
            jaylink_strerror()
            adapter_usb_location_equal()
            free()
        jaylink_open()
    jaylink_get_firmware_version()
    jaylink_close()
    LOG_INFO()
    free()
    LOG_WARNING()
    memset()
    jaylink_get_caps()
    jaylink_has_cap()
    jaylink_get_extended_caps()
    jaylink_get_hardware_version()
    adjust_swd_buffer_size()
    read_device_config()
        jaylink_read_raw_config()
        LOG_ERROR()
        jaylink_strerror()
    memcpy()
    jaylink_get_hardware_status()
    strcpy()
    jlink_register()
        jaylink_has_cap()
        jaylink_register()
        LOG_ERROR()
        jaylink_strerror()
    select_interface()
        jaylink_has_cap()
        LOG_ERROR()
        jaylink_get_available_interfaces()
        jaylink_strerror()
        jaylink_select_interface()
    jlink_reset()
        LOG_DEBUG()
        jaylink_set_reset()
        jaylink_clear_reset()
        jaylink_jtag_clear_trst()
        jaylink_jtag_set_trst()
    jtag_sleep()
    jlink_tap_init()
    jlink_speed()
        jaylink_has_cap()
        jaylink_get_speeds()
        LOG_ERROR()
        jaylink_strerror()
        LOG_INFO()
        jaylink_set_speed()
    adapter_get_speed_khz()
    jlink_clock_data()
    jlink_flush()
jlink_khz()
jlink_quit()
    jaylink_swo_stop()
    LOG_ERROR()
    jaylink_strerror()
    jaylink_has_cap()
    jaylink_unregister()
    jaylink_close()
    jaylink_exit()
jlink_reset_safe()
    jlink_flush()
    jlink_reset()
jlink_speed_div()
jlink_swd_init()
jlink_swd_read_reg()
    assert()
    jlink_swd_queue_cmd()
        DIV_ROUND_UP()
        jlink_swd_run_queue()
            LOG_DEBUG()
            jlink_queue_data_out()
                bit_copy()
                fill_buffer()
                    buf_set_u32()
            jaylink_swd_io()
            LOG_ERROR()
            jaylink_strerror()
            swd_cmd_returns_ack()
            buf_get_u32()
            swd_ack_to_error_code()
            parity_u32()
            jlink_tap_init()
        jlink_queue_data_out()
        jlink_queue_data_in()
            fill_buffer()
        buf_set_u32()
        parity_u32()
jlink_swd_switch_seq()
    LOG_DEBUG()
    LOG_ERROR()
    jlink_queue_data_out()
jlink_swd_write_reg()
    assert()
    jlink_swd_queue_cmd()
jsp_connection_closed()
    target_unregister_timer_callback()
    jsp_poll_read()
        memset()
        or1k_adv_jtag_jsp_xfer()
            LOG_DEBUG()
            adbg_select_module()
                LOG_DEBUG()
                jtag_add_dr_scan()
                jtag_execute_queue()
            memset()
            memcpy()
            jtag_add_dr_scan()
            jtag_execute_queue()
        telnet_write()
            connection_write()
    free()
jsp_input()
    connection_read()
    LOG_ERROR()
    strerror()
    or1k_adv_jtag_jsp_xfer()
    telnet_write()
    exit()
jsp_new_connection()
    malloc()
    telnet_write()
    strlen()
    target_register_timer_callback()
    jsp_poll_read()
jtag_ap_q_read()
    jtag_limit_queue_size()
        dap_run()
    jtag_check_reconnect()
        jtag_connect()
            dap_dp_init()
    jtag_ap_q_bankselect()
        is_adiv6()
        LOG_DEBUG()
        jtag_dp_q_write()
            jtag_limit_queue_size()
            adi_jtag_dp_scan_u32()
                LOG_DEBUG()
                buf_set_u32()
                adi_jtag_dp_scan()
                    dap_cmd_new()
                        list_empty()
                        calloc()
                        list_first_entry()
                        lh()
                        list_del()
                        INIT_LIST_HEAD()
                        memcpy()
                    adi_jtag_dp_scan_cmd()
                        arm_jtag_set_instr()
                        buf_set_u32()
                        jtag_add_dr_scan()
                        jtag_add_runtest()
                    list_add_tail()
                jtag_add_callback()
    adi_jtag_dp_scan_u32()
jtag_ap_q_write()
    jtag_limit_queue_size()
    jtag_check_reconnect()
    jtag_ap_q_bankselect()
    adi_jtag_dp_scan_u32()
jtag_check_value_mask_callback()
    jtag_check_value_inner()
        buf_cmp_mask()
            buf_cmp_masked()
            buf_cmp_trailing()
                buf_cmp_masked()
        buf_cmp()
            memcmp()
            buf_cmp_trailing()
        buf_to_hex_str()
        LOG_WARNING()
        free()
jtag_data_read()
    dsp5680xx_drscan()
    LOG_DEBUG()
jtag_debug_state_machine_()
    LOG_DEBUG_IO()
    tap_state_name()
    DIV_ROUND_UP()
    JTAG_DEBUG_STATE_APPEND()
    tap_state_transition()
    JTAG_DEBUG_STATE_PRINT()
jtag_dp_q_read()
    jtag_limit_queue_size()
    adi_jtag_dp_scan_u32()
jtag_dp_run()
    adi_jtag_finish_read()
        adi_jtag_dp_scan_u32()
    jtagdp_overrun_check()
        LIST_HEAD()
        jtag_execute_queue()
        list_for_each_entry()
        lh()
        is_adiv6()
        log_dap_cmd()
            is_adiv6()
            LOG_DEBUG()
            dap_reg_name()
                MEM_AP_REG_CSW()
                MEM_AP_REG_TAR()
                MEM_AP_REG_TAR64()
                MEM_AP_REG_DRW()
                MEM_AP_REG_BD0()
                MEM_AP_REG_BD1()
                MEM_AP_REG_BD2()
                MEM_AP_REG_BD3()
                MEM_AP_REG_CFG()
                MEM_AP_REG_BASE()
                MEM_AP_REG_BASE64()
                AP_REG_IDR()
            buf_get_u32()
        LOG_ERROR()
        list_first_entry()
        list_entry()
        list_for_each_entry_from()
        le_to_h_u32()
        memcpy()
        dap_cmd_new()
        timeval_ms()
        adi_jtag_dp_scan_cmd_sync()
            adi_jtag_dp_scan_cmd()
            jtag_execute_queue()
        jtag_ap_q_abort()
            adi_jtag_dp_scan_u32()
            jtag_execute_queue()
        adi_jtag_scan_inout_check_u32()
            adi_jtag_dp_scan_u32()
            jtag_execute_queue()
        dap_cmd_release()
            container_of()
            free()
            list_add()
        list_for_each_entry_safe_from()
        list_move_tail()
        flush_journal()
            list_for_each_entry_safe()
            list_del()
            dap_cmd_release()
        LOG_INFO()
        list_empty()
        buf_set_u32()
        list_add()
        list_for_each_entry_safe()
        LOG_DEBUG()
    jtagdp_transaction_endcheck()
        adi_jtag_scan_inout_check_u32()
        LOG_DEBUG()
        LOG_ERROR()
        flush_journal()
jtag_dp_sync()
    jtagdp_overrun_check()
jtag_dpi_execute_queue()
    jtag_dpi_runtest()
        LOG_ERROR()
        DIV_ROUND_UP()
        malloc()
        snprintf()
        write_sock()
            LOG_ERROR()
            write()
            strerror()
        strlen()
        read_sock()
            LOG_ERROR()
            read()
            strerror()
        free()
    jtag_dpi_stableclocks()
        jtag_dpi_runtest()
    jtag_dpi_reset()
        LOG_DEBUG_IO()
        write_sock()
        strlen()
        LOG_ERROR()
    jtag_sleep()
    jtag_dpi_scan()
        jtag_build_buffer()
        LOG_ERROR()
        DIV_ROUND_UP()
        free()
        malloc()
        memcpy()
        snprintf()
        write_sock()
        strlen()
        read_sock()
        jtag_read_buffer()
    LOG_ERROR()
jtag_dpi_init()
    socket()
    LOG_ERROR()
    strerror()
    memset()
    htons()
    strdup()
    inet_addr()
    connect()
    close()
    htonl()
    setsockopt()
    LOG_INFO()
jtag_dpi_quit()
    free()
    close()
jtag_quit()
    list_for_each_entry_safe()
    list_del()
    free()
jtag_select()
    jtag_register_commands()
        register_commands()
    svf_register_commands()
        register_commands()
    xsvf_register_commands()
        register_commands()
    ipdbg_register_commands()
        register_commands()
jtag_send_sequence()
    jtag_add_tms_seq()
        jtag_checks()
        interface_add_tms_seq()
            cmd_queue_alloc()
            buf_cpy()
            DIV_ROUND_UP()
            jtag_queue_command()
        jtag_set_error()
    LOG_ERROR()
    jtag_execute_queue()
jtag_vpi_execute_queue()
    jtag_vpi_reset()
        memset()
        jtag_vpi_send_cmd()
            LOG_LEVEL_IS()
            buf_to_hex_str()
            LOG_DEBUG_IO()
            jtag_vpi_cmd_to_str()
            free()
            h_u32_to_le()
            write_socket()
            WSAGetLastError()
            log_socket_error()
            exit()
            LOG_ERROR()
    jtag_vpi_runtest()
        jtag_vpi_state_move()
            tap_get_state()
            tap_get_tms_path()
            tap_get_tms_path_len()
            jtag_vpi_tms_seq()
                memset()
                DIV_ROUND_UP()
                memcpy()
                jtag_vpi_send_cmd()
            tap_set_state()
        jtag_vpi_queue_tdi()
            DIV_ROUND_UP()
            jtag_vpi_queue_tdi_xfer()
                DIV_ROUND_UP()
                memset()
                memcpy()
                jtag_vpi_send_cmd()
                jtag_vpi_receive_cmd()
                    read_socket()
                    WSAGetLastError()
                    log_socket_error()
                    exit()
                    LOG_ERROR()
                    le_to_h_u32()
                LOG_LEVEL_IS()
                buf_to_hex_str()
                LOG_DEBUG_IO()
                free()
    jtag_vpi_stableclocks()
        assert()
        memset()
        tap_get_state()
        jtag_vpi_tms_seq()
    jtag_vpi_state_move()
    jtag_vpi_path_move()
        DIV_ROUND_UP()
        memset()
        jtag_vpi_tms_seq()
    jtag_vpi_tms()
        jtag_vpi_tms_seq()
    jtag_sleep()
    jtag_vpi_scan()
        jtag_build_buffer()
        jtag_vpi_state_move()
        jtag_vpi_queue_tdi()
        jtag_vpi_clock_tms()
            jtag_vpi_tms_seq()
        tap_set_state()
        jtag_read_buffer()
        free()
    LOG_ERROR()
jtag_vpi_init()
    socket()
    LOG_ERROR()
    memset()
    htons()
    strdup()
    inet_addr()
    connect()
    close()
    htonl()
    setsockopt()
    LOG_INFO()
jtag_vpi_quit()
    jtag_vpi_stop_simulation()
        memset()
        jtag_vpi_send_cmd()
    LOG_WARNING()
    close_socket()
    log_socket_error()
    free()
jtagspi_auto_probe()
    jtagspi_probe()
        free()
        jtagspi_cmd()
            assert()
            LOG_DEBUG()
            h_u32_to_be()
            flip_u8()
                flip_u32()
            jtag_tap_count_enabled()
            jtagspi_set_ir()
                LOG_DEBUG()
                buf_set_u32()
                jtag_add_ir_scan()
            jtag_add_dr_scan()
            jtag_execute_queue()
        le_to_h_u24()
        memset()
        memcpy()
        LOG_ERROR()
        LOG_INFO()
        LOG_WARNING()
        malloc()
jtagspi_erase()
    LOG_DEBUG()
    LOG_ERROR()
    jtagspi_bulk_erase()
        timeval_ms()
        jtagspi_write_enable()
            jtagspi_cmd()
            jtagspi_read_status()
                jtagspi_cmd()
                LOG_DEBUG()
            LOG_ERROR()
        jtagspi_cmd()
        jtagspi_wait()
            timeval_ms()
            jtagspi_read_status()
            LOG_DEBUG()
            alive_sleep()
            LOG_ERROR()
        LOG_INFO()
    LOG_WARNING()
    jtagspi_sector_erase()
        timeval_ms()
        jtagspi_write_enable()
        jtagspi_cmd()
        fill_addr()
        jtagspi_wait()
        LOG_INFO()
jtagspi_info()
    command_print_sameline()
jtagspi_protect()
jtagspi_read()
    LOG_ERROR()
    jtagspi_cmd()
    fill_addr()
    LOG_DEBUG()
jtagspi_write()
    LOG_ERROR()
    jtagspi_page_write()
        jtagspi_write_enable()
        jtagspi_cmd()
        fill_addr()
        jtagspi_wait()
    LOG_DEBUG()
kinetis_blank_check()
    kinetis_check_run_mode()
        LOG_ERROR()
        kinetis_read_pmstat()
            target_read_u8()
            target_read_u32()
        LOG_INFO()
        target_write_u8()
        target_write_u32()
    kinetis_ftfx_prepare()
        fstat()
        target_read_u8()
        LOG_ERROR()
        kinetis_ftfx_clear_error()
            target_write_u8()
    kinetis_ftfx_command()
        fstat()
        timeval_ms()
        target_write_memory()
        target_write_u8()
        target_read_u8()
        LOG_DEBUG()
        kinetis_ftfx_decode_error()
            LOG_ERROR()
    kinetis_ftfx_clear_error()
    LOG_DEBUG()
    LOG_WARNING()
kinetis_erase()
    kinetis_check_run_mode()
    kinetis_ftfx_prepare()
    kinetis_ftfx_command()
    LOG_WARNING()
    kinetis_fill_fcf()
        memset()
        LOG_WARNING()
        kinetis_auto_probe()
            kinetis_probe()
                assert()
                kinetis_probe_chip()
                    target_read_u32()
                    LOG_ERROR()
                    ARRAY_SIZE()
                    strcpy()
                    strcat()
                    snprintf()
                    LOG_DEBUG()
                    LOG_WARNING()
                    LOG_INFO()
                    kinetis_create_missing_banks()
                        LOG_ERROR()
                        strncpy()
                        strstr()
                        snprintf()
                        free()
                        strdup()
                        target_name()
                        calloc()
                        flash_bank_add()
                MAX()
                LOG_DEBUG()
                LOG_ERROR()
                LOG_WARNING()
                free()
                alloc_block_array()
        assert()
        target_buffer_set_u32()
    kinetis_write_inner()
        LOG_INFO()
        kinetis_make_ram_ready()
            target_read_u8()
            kinetis_ftfx_command()
        LOG_WARNING()
        LOG_DEBUG()
        kinetis_write_sections()
            malloc()
            memset()
            memcpy()
            target_write_memory()
            LOG_DEBUG()
            LOG_ERROR()
            kinetis_ftfx_command()
            keep_alive()
            free()
        LOG_ERROR()
        malloc()
        memset()
        memcpy()
        kinetis_disable_wdog()
            kinetis_probe_chip()
            kinetis_disable_wdog_kx()
                target_read_u16()
                LOG_INFO()
                kinetis_disable_wdog_algo()
                    LOG_ERROR()
                    target_alloc_working_area()
                    target_write_buffer()
                    init_reg_param()
                    buf_set_u32()
                    target_run_algorithm()
                    destroy_reg_param()
                    target_free_working_area()
            target_read_u8()
            LOG_INFO()
            target_write_u8()
            LOG_ERROR()
            kinetis_disable_wdog32()
                target_read_u32()
                LOG_INFO()
                kinetis_disable_wdog_algo()
                LOG_ERROR()
        kinetis_write_block()
            fstat()
            target_alloc_working_area()
            LOG_WARNING()
            target_write_buffer()
            target_get_working_area_avail()
            LOG_ERROR()
            init_reg_param()
            buf_set_u32()
            target_run_flash_async_algorithm()
            buf_get_u32()
            target_read_u8()
            kinetis_ftfx_decode_error()
            target_write_u8()
            target_free_working_area()
            destroy_reg_param()
        kinetis_ftfx_command()
        keep_alive()
        free()
        kinetis_invalidate_flash_cache()
            target_write_u8()
            target_write_u32()
    LOG_DEBUG()
    kinetis_invalidate_flash_cache()
kinetis_free_driver_priv()
    free()
kinetis_info()
    command_print_sameline()
kinetis_ke_auto_probe()
    kinetis_ke_probe()
        target_read_u32()
        KINETIS_KE_SRSID_FAMID()
        LOG_ERROR()
        KINETIS_KE_SRSID_SUBFAMID()
        LOG_INFO()
        free()
        assert()
        malloc()
kinetis_ke_blank_check()
    fstat()
    LOG_ERROR()
    kinetis_ke_prepare_flash()
        KINETIS_KE_SRSID_SUBFAMID()
        target_read_u8()
        target_write_u8()
        alive_sleep()
        KINETIS_KE_SRSID_PINCOUNT()
        LOG_ERROR()
        target_write_u32()
        ICS_C2_BDIV()
        FTMRX_FCLKDIV_FDIV()
        LOG_WARNING()
        LOG_INFO()
    kinetis_ke_ftmrx_command()
        target_write_u8()
        target_read_u8()
        alive_sleep()
    LOG_DEBUG()
kinetis_ke_erase()
    fstat()
    LOG_ERROR()
    kinetis_ke_prepare_flash()
    kinetis_ke_ftmrx_command()
    LOG_WARNING()
kinetis_ke_info()
    command_print_sameline()
kinetis_ke_protect()
    LOG_WARNING()
    LOG_ERROR()
kinetis_ke_protect_check()
    LOG_ERROR()
    target_read_u8()
    LOG_WARNING()
kinetis_ke_write()
    LOG_ERROR()
    LOG_WARNING()
    kinetis_ke_stop_watchdog()
        LOG_ERROR()
        target_read_u8()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_buffer()
        target_run_algorithm()
        LOG_INFO()
        target_free_working_area()
    kinetis_ke_prepare_flash()
    malloc()
    LOG_INFO()
    memset()
    memcpy()
    kinetis_ke_write_words()
        LOG_INFO()
        target_alloc_working_area()
        LOG_WARNING()
        buf_set_u32()
        target_write_buffer()
        target_free_working_area()
        init_reg_param()
        target_run_flash_async_algorithm()
        buf_get_u32()
        LOG_ERROR()
        destroy_reg_param()
    free()
kinetis_protect()
    LOG_ERROR()
    LOG_INFO()
kinetis_protect_check()
    target_read_u32()
    target_read_u8()
    LOG_ERROR()
kinetis_write()
    kinetis_check_run_mode()
    kinetis_ftfx_prepare()
    kinetis_fill_fcf()
    memcpy()
    memcmp()
    LOG_INFO()
    kinetis_write_inner()
    target_read_memory()
    LOG_WARNING()
kitprog_acquire_psoc()
    jtag_libusb_control_transfer()
    LOG_DEBUG()
kitprog_get_status()
    LOG_DEBUG()
kitprog_init()
    malloc()
    LOG_ERROR()
    kitprog_usb_open()
        jtag_libusb_open()
        LOG_ERROR()
        kitprog_get_usb_serial()
            libusb_get_string_descriptor_ascii()
            LOG_ERROR()
            calloc()
            strncpy()
        LOG_WARNING()
        strlen()
        calloc()
        mbstowcs()
        free()
        hid_open()
        libusb_claim_interface()
    kitprog_get_info()
        kitprog_get_version()
            kitprog_hid_command()
                hid_write()
                LOG_DEBUG()
                hid_read_timeout()
                LOG_ERROR()
                hid_error()
        LOG_INFO()
        LOG_ERROR()
        kitprog_get_millivolts()
            kitprog_hid_command()
    mm_to_version()
    LOG_WARNING()
    kitprog_set_unknown()
        jtag_libusb_control_transfer()
        LOG_DEBUG()
    kitprog_swd_sync()
        jtag_libusb_control_transfer()
        LOG_DEBUG()
    kitprog_set_protocol()
        jtag_libusb_control_transfer()
        LOG_DEBUG()
    kitprog_swd_seq()
        jtag_libusb_control_transfer()
        LOG_DEBUG()
    kitprog_generic_acquire()
kitprog_quit()
    kitprog_usb_close()
        hid_close()
        hid_exit()
        jtag_libusb_close()
    free()
kitprog_reset()
    LOG_ERROR()
    kitprog_reset_target()
        jtag_libusb_control_transfer()
        LOG_DEBUG()
kitprog_swd_init()
kitprog_swd_read_reg()
    assert()
    kitprog_swd_queue_cmd()
        kitprog_swd_run_queue()
            LOG_DEBUG_IO()
            LOG_DEBUG()
            jtag_libusb_bulk_write()
            LOG_ERROR()
            jtag_libusb_bulk_read()
kitprog_swd_switch_seq()
    LOG_DEBUG()
    kitprog_swd_seq()
    LOG_ERROR()
kitprog_swd_write_reg()
    assert()
    kitprog_swd_queue_cmd()
lakemont_arch_state()
    target_to_x86_32()
    LOG_USER()
    debug_reason_name()
    buf_get_u32()
lakemont_get_core_reg()
    check_not_halted()
        halted()
        LOG_ERROR()
    LOG_DEBUG()
    buf_get_u32()
lakemont_reset_assert()
    target_to_x86_32()
    LOG_DEBUG()
    lakemont_halt()
        do_halt()
            enter_probemode()
                get_tapstatus()
                    irscan()
                        target_to_x86_32()
                        LOG_ERROR()
                        jtag_add_ir_scan()
                        jtag_execute_queue()
                    drscan()
                        target_to_x86_32()
                        LOG_ERROR()
                        jtag_add_dr_scan()
                        jtag_execute_queue()
                        LOG_DEBUG()
                    buf_get_u32()
                LOG_DEBUG()
                irscan()
                drscan()
                LOG_ERROR()
            lakemont_update_after_probemode_entry()
                save_context()
                    read_all_core_hw_regs()
                        target_to_x86_32()
                        read_hw_reg()
                            target_to_x86_32()
                            submit_reg_pir()
                                LOG_DEBUG()
                                submit_pir()
                                    target_to_x86_32()
                                    buf_set_u64()
                                    irscan()
                                    drscan()
                                    jtag_add_sleep()
                                LOG_ERROR()
                            submit_instruction_pir()
                                LOG_DEBUG()
                                submit_pir()
                                LOG_ERROR()
                            irscan()
                            drscan()
                            jtag_add_sleep()
                            buf_get_u32()
                            buf_set_u32()
                            LOG_DEBUG()
                        LOG_ERROR()
                        LOG_DEBUG()
                    LOG_ERROR()
                halt_prep()
                    target_to_x86_32()
                    write_hw_reg()
                        target_to_x86_32()
                        buf_get_u32()
                        buf_set_u32()
                        LOG_DEBUG()
                        submit_reg_pir()
                        submit_instruction_pir()
                        irscan()
                        drscan()
                    LOG_DEBUG()
                    buf_get_u32()
                    I()
                    submit_reg_pir()
                target_call_event_callbacks()
        LOG_ERROR()
    LOG_ERROR()
    lakemont_reset_break()
        target_to_x86_32()
        LOG_DEBUG()
        jtag_tap_by_position()
        LOG_ERROR()
        jtag_add_ir_scan()
        jtag_execute_queue()
        jtag_add_dr_scan()
    x86_32_common_write_io()
        target_to_x86_32()
        buf_get_u32()
        LOG_DEBUG()
        check_not_halted()
        LOG_ERROR()
    lakemont_resume()
        target_to_x86_32()
        check_not_halted()
        buf_get_u32()
        breakpoint_find()
        lakemont_step()
            target_to_x86_32()
            buf_get_u32()
            check_not_halted()
            breakpoint_find()
            x86_32_common_remove_breakpoint()
                LOG_DEBUG()
                check_not_halted()
                unset_breakpoint()
                    LOG_DEBUG()
                    LOG_WARNING()
                    unset_hwbp()
                        target_to_x86_32()
                        LOG_ERROR()
                        unset_debug_regs()
                            target_to_x86_32()
                            LOG_DEBUG()
                            buf_get_u32()
                            DR7_BP_FREE()
                            DR7_GLOBAL_DISABLE()
                            LOG_ERROR()
                            DR7_RESET_RWLEN_BITS()
                            buf_set_u32()
                        LOG_USER()
                    LOG_ERROR()
                    unset_swbp()
                        target_to_x86_32()
                        LOG_DEBUG()
                        calcaddr_physfromlin()
                            target_to_x86_32()
                            buf_get_u32()
                            x86_32_common_read_phys_mem()
                                target_to_x86_32()
                                read_phys_mem()
                                    LOG_DEBUG()
                                    target_to_x86_32()
                                    check_not_halted()
                                    LOG_ERROR()
                                    read_mem()
                                        target_to_x86_32()
                                        buf_get_u32()
                                        LOG_ERROR()
                            LOG_ERROR()
                            target_buffer_get_u64()
                            target_buffer_get_u32()
                        read_phys_mem()
                        write_phys_mem()
                            target_to_x86_32()
                            LOG_DEBUG()
                            check_not_halted()
                            LOG_ERROR()
                            write_mem()
                                target_to_x86_32()
                                buf_get_u32()
                                LOG_ERROR()
                        LOG_ERROR()
                        free()
                        LOG_USER()
            LOG_DEBUG()
            buf_set_u32()
            get_tapstatus()
            restore_context()
                target_to_x86_32()
                write_all_core_hw_regs()
                    target_to_x86_32()
                    write_hw_reg()
                    LOG_ERROR()
                    LOG_DEBUG()
                LOG_ERROR()
            exit_probemode()
                get_tapstatus()
                LOG_DEBUG()
                LOG_USER()
                irscan()
                drscan()
            target_call_event_callbacks()
            save_context()
            halt_prep()
            LOG_USER()
            LOG_ERROR()
            x86_32_common_add_breakpoint()
                LOG_DEBUG()
                check_not_halted()
                set_breakpoint()
                    target_to_x86_32()
                    LOG_DEBUG()
                    LOG_ERROR()
                    set_hwbp()
                        target_to_x86_32()
                        LOG_ERROR()
                        set_debug_regs()
                            target_to_x86_32()
                            LOG_DEBUG()
                            buf_get_u32()
                            DR7_BP_FREE()
                            DR7_GLOBAL_ENABLE()
                            LOG_ERROR()
                            DR7_SET_EXE()
                            DR7_SET_LENGTH()
                            DR7_SET_WRITE()
                            DR7_SET_ACCESS()
                            buf_set_u32()
                        breakpoint_hw_set()
                        LOG_USER()
                    set_swbp()
                        target_to_x86_32()
                        LOG_DEBUG()
                        calcaddr_physfromlin()
                        read_phys_mem()
                        write_phys_mem()
                        LOG_ERROR()
                        malloc()
                        LOG_USER()
        LOG_ERROR()
        buf_set_u32()
        do_resume()
            restore_context()
            exit_probemode()
            LOG_USER()
            target_call_event_callbacks()
        LOG_USER()
    x86_32_common_reset_breakpoints_watchpoints()
        target_to_x86_32()
        free()
lakemont_reset_deassert()
    LOG_DEBUG()
    target_was_examined()
    lakemont_poll()
        get_tapstatus()
        LOG_ERROR()
        LOG_INFO()
        LOG_DEBUG()
        save_context()
        halt_prep()
        target_to_x86_32()
        buf_get_u32()
        LOG_USER()
        breakpoint_find()
        buf_set_u32()
        target_call_event_callbacks()
    lakemont_update_after_probemode_entry()
    LOG_ERROR()
    LOG_WARNING()
    target_name()
    target_halt()
lakemont_set_core_reg()
    buf_get_u32()
    LOG_DEBUG()
    check_not_halted()
    buf_set_u32()
lattice_get_ipdbg_hub()
    LOG_ERROR()
lattice_load_command()
    lattice_check_device_family()
        ARRAY_SIZE()
        LOG_ERROR()
    lattice_read_file()
        strrchr()
        LOG_ERROR()
        strcasecmp()
        lattice_read_bit_file()
            cpld_read_raw_bit_file()
            strncmp()
            LOG_INFO()
            be_to_h_u32()
            LOG_ERROR()
            flip_u32()
    lattice_ecp2_load()
        lattice_preload()
            DIV_ROUND_UP()
            lattice_set_instr()
                calloc()
                DIV_ROUND_UP()
                LOG_ERROR()
                buf_set_u32()
                jtag_add_ir_scan()
                free()
            malloc()
            LOG_ERROR()
            memset()
            jtag_add_dr_scan()
            jtag_execute_queue()
            free()
        lattice_set_instr()
        jtag_add_runtest()
        jtag_add_sleep()
        lattice_ecp2_3_erase_device()
            lattice_set_instr()
            jtag_add_dr_scan()
            jtag_add_runtest()
            jtag_add_sleep()
            lattice_verify_usercode()
                lattice_read_usercode()
                    lattice_ecp2_3_read_usercode()
                        lattice_read_u32_register()
                            lattice_set_instr()
                            jtag_add_runtest()
                            jtag_add_sleep()
                            h_u32_to_le()
                            jtag_add_dr_scan()
                            jtag_execute_queue()
                            le_to_h_u32()
                    lattice_ecp5_read_usercode()
                        lattice_read_u32_register()
                    lattice_certus_read_usercode()
                        lattice_read_u32_register()
                LOG_ERROR()
        lattice_ecp2_3_program_config_map()
            lattice_set_instr()
            jtag_add_runtest()
            jtag_add_sleep()
            jtag_add_dr_scan()
            jtag_execute_queue()
        lattice_ecp2_3_exit_programming_mode()
            lattice_set_instr()
            jtag_add_runtest()
            jtag_add_sleep()
            jtag_execute_queue()
        lattice_verify_status_register_u32()
            lattice_read_status_u32()
                lattice_ecp2_3_read_status()
                    lattice_read_u32_register()
                lattice_ecp5_read_status()
                    lattice_read_u32_register()
            LOG_ERROR()
    lattice_ecp3_load()
        lattice_preload()
        lattice_set_instr()
        jtag_add_runtest()
        jtag_add_sleep()
        lattice_ecp2_3_erase_device()
        lattice_ecp2_3_program_config_map()
        lattice_ecp2_3_exit_programming_mode()
        lattice_verify_status_register_u32()
    LOG_WARNING()
    lattice_ecp5_load()
        lattice_preload()
        lattice_ecp5_enable_sram_programming()
            lattice_set_instr()
            jtag_add_dr_scan()
            jtag_add_runtest()
            jtag_add_sleep()
            jtag_execute_queue()
        lattice_verify_status_register_u32()
        lattice_ecp5_erase_sram()
            lattice_set_instr()
            jtag_add_dr_scan()
            jtag_add_runtest()
            jtag_add_sleep()
            jtag_execute_queue()
        lattice_ecp5_init_address()
            lattice_set_instr()
            jtag_add_dr_scan()
            jtag_add_runtest()
            jtag_add_sleep()
            jtag_execute_queue()
        lattice_ecp5_program_config_map()
            lattice_set_instr()
            jtag_add_runtest()
            jtag_add_sleep()
            jtag_add_dr_scan()
            jtag_execute_queue()
        lattice_ecp5_exit_programming_mode()
            lattice_set_instr()
            jtag_add_runtest()
            jtag_add_sleep()
            jtag_execute_queue()
    lattice_certus_load()
        lattice_preload()
        lattice_verify_status_register_u64()
            lattice_read_status_u64()
                lattice_certus_read_status()
                    lattice_read_u64_register()
                        lattice_set_instr()
                        h_u64_to_le()
                        jtag_add_dr_scan()
                        jtag_execute_queue()
                        le_to_h_u64()
            LOG_ERROR()
        LOG_ERROR()
        lattice_certus_enable_transparent_mode()
            lattice_set_instr()
            jtag_add_dr_scan()
            jtag_add_runtest()
            jtag_execute_queue()
        lattice_certus_enable_programming()
            lattice_set_instr()
            jtag_add_runtest()
            jtag_execute_queue()
            jtag_add_dr_scan()
        lattice_certus_erase_device()
            lattice_set_instr()
            jtag_add_dr_scan()
            jtag_add_runtest()
            jtag_execute_queue()
            jtag_add_sleep()
            lattice_verify_status_register_u64()
        lattice_certus_init_address()
            lattice_set_instr()
            jtag_add_runtest()
            jtag_execute_queue()
        lattice_certus_program_config_map()
            lattice_set_instr()
            jtag_add_dr_scan()
            jtag_execute_queue()
        lattice_certus_exit_programming_mode()
            lattice_set_instr()
            jtag_add_runtest()
            jtag_execute_queue()
    LOG_ERROR()
    free()
linux_compute_virt2phys()
    LOG_ERROR()
linux_gdb_h_packet()
linux_gdb_t_packet()
linux_gdb_thread_packet()
linux_gdb_thread_update()
linux_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
linux_get_tasks()
linux_identify_current_threads()
linux_os_clean()
linux_os_create()
linux_os_detect()
    LOG_INFO()
linux_os_dummy_update()
linux_os_smp_init()
linux_os_thread_reg_list()
    LOG_ERROR()
    foreach_smp_target()
    target_get_gdb_reg_list()
    calloc()
linux_ps_command()
linux_task_update()
linux_thread_extra_info()
linux_thread_packet()
linuxgpiod_blink()
    is_gpio_config_valid()
    gpiod_line_set_value()
    LOG_WARNING()
linuxgpiod_init()
    LOG_INFO()
    adapter_gpio_get_config()
    transport_is_jtag()
    linuxgpiod_jtag_mode_possible()
        is_gpio_config_valid()
    LOG_ERROR()
    helper_get_line()
        is_gpio_config_valid()
        gpiod_chip_open_by_number()
        LOG_ERROR()
        adapter_gpio_get_name()
        gpiod_chip_get_line()
        LOG_WARNING()
        gpiod_version_string()
        gpiod_line_request()
    transport_is_swd()
    linuxgpiod_swd_mode_possible()
        is_gpio_config_valid()
    linuxgpiod_quit()
        LOG_DEBUG()
        helper_release()
            gpiod_line_release()
            gpiod_chip_close()
linuxgpiod_read()
    gpiod_line_get_value()
    LOG_WARNING()
linuxgpiod_reset()
    LOG_DEBUG()
    gpiod_line_set_value()
    LOG_WARNING()
linuxgpiod_swd_write()
    gpiod_line_set_value()
    LOG_WARNING()
linuxgpiod_swdio_drive()
    gpiod_line_release()
    gpiod_line_set_value()
    LOG_WARNING()
    gpiod_line_request_output()
    gpiod_line_request_input()
linuxgpiod_swdio_read()
    gpiod_line_get_value()
    LOG_WARNING()
linuxgpiod_write()
    gpiod_line_set_value()
    LOG_WARNING()
liste_add_task()
liste_del_task()
    LOG_INFO()
    free()
log_printf()
    va_start()
    alloc_vprintf()
    log_puts()
    free()
    va_end()
lpc2000_erase()
    LOG_ERROR()
    lpc2000_iap_working_area_init()
        target_alloc_working_area()
        LOG_ERROR()
        target_buffer_set_u32()
        ARMV4_5_T_BX()
        ARMV5_T_BKPT()
        ARMV4_5_BX()
        ARMV4_5_B()
        exit()
        target_write_memory()
        target_free_working_area()
    lpc2000_iap_call()
        target_read_u32()
        LOG_ERROR()
        exit()
        init_mem_param()
        target_buffer_set_u32()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        target_buffer_get_u32()
        LOG_DEBUG()
        destroy_mem_param()
        destroy_reg_param()
    LOG_WARNING()
    target_free_working_area()
lpc2000_erase_check()
    LOG_ERROR()
    lpc2000_iap_blank_check()
        lpc2000_iap_working_area_init()
        lpc2000_iap_call()
        LOG_ERROR()
        exit()
        target_free_working_area()
lpc2000_probe()
    lpc2000_auto_probe_flash()
        LOG_ERROR()
        get_lpc2000_part_id()
            LOG_ERROR()
            lpc2000_iap_working_area_init()
            lpc2000_iap_call()
            target_free_working_area()
        exit()
    get_lpc2000_part_id()
    LOG_INFO()
    lpc2000_build_sector_list()
        malloc()
        LOG_ERROR()
        exit()
lpc2000_write()
    LOG_ERROR()
    LOG_WARNING()
    DIV_ROUND_UP()
    LOG_DEBUG()
    assert()
    buf_get_u32()
    buf_set_u32()
    lpc2000_iap_working_area_init()
    target_alloc_working_area()
    target_free_working_area()
    lpc2000_iap_call()
    target_write_buffer()
    malloc()
    memcpy()
    memset()
    free()
lpc288x_erase()
    lpc288x_system_ready()
        LOG_ERROR()
    LOG_INFO()
    lpc288x_set_flash_clk()
        target_write_u32()
    lpc288x_wait_status_busy()
        alive_sleep()
        target_read_u32()
        LOG_DEBUG()
    lpc288x_load_timer()
        target_write_u32()
    target_write_u32()
lpc288x_probe()
    LOG_ERROR()
    lpc288x_read_part_info()
        target_read_u32()
        LOG_WARNING()
        malloc()
lpc288x_protect()
    lpc288x_system_ready()
    lpc288x_set_flash_clk()
    target_write_u32()
lpc288x_protect_check()
lpc288x_write()
    FLASH_PAGE_SIZE()
    lpc288x_system_ready()
    LOG_INFO()
    lpc288x_set_flash_clk()
    memset()
    memcpy()
    lpc288x_wait_status_busy()
    target_write_u32()
    target_write_buffer()
    lpc288x_load_timer()
lpc2900_erase()
    lpc2900_is_ready()
        LOG_ERROR()
    LOG_INFO()
    lpc2900_read_security_status()
        lpc2900_is_ready()
        target_write_u32()
        target_read_memory()
    lpc2900_setup()
        target_write_u32()
    target_write_u32()
    lpc2900_calc_tr()
    lpc2900_wait_status()
        alive_sleep()
        target_read_u32()
        LOG_DEBUG()
lpc2900_erase_check()
    lpc2900_is_ready()
    LOG_INFO()
    lpc2900_run_bist128()
        target_write_u32()
        lpc2900_wait_status()
        target_read_memory()
        target_buffer_get_u32_array()
lpc2900_probe()
    LOG_ERROR()
    target_read_u32()
    LOG_WARNING()
    LOG_INFO()
    malloc()
    lpc2900_read_security_status()
lpc2900_protect_check()
    lpc2900_read_security_status()
lpc2900_write()
    FLASH_PAGE_SIZE()
    lpc2900_is_ready()
    lpc2900_setup()
    lpc2900_read_security_status()
    target_write_u32()
    lpc2900_calc_tr()
    target_alloc_working_area_try()
    LOG_INFO()
    target_buffer_set_u32_array()
    ARRAY_SIZE()
    target_write_buffer()
    LOG_ERROR()
    target_free_all_working_areas()
    init_reg_param()
    lpc2900_address2sector()
    memset()
    memcpy()
    LOG_DEBUG()
    buf_set_u32()
    target_run_algorithm()
    destroy_reg_param()
    target_write_memory()
    lpc2900_wait_status()
lpc3180_address()
    LOG_ERROR()
    target_write_u32()
lpc3180_command()
    LOG_ERROR()
    target_write_u32()
lpc3180_init()
    LOG_ERROR()
    LOG_WARNING()
    LOG_DEBUG()
    target_write_u32()
    lpc3180_cycle_time()
        target_read_u32()
        lpc3180_pll()
            LOG_WARNING()
        LOG_DEBUG()
    lpc3180_reset()
        LOG_ERROR()
        target_write_u32()
        lpc3180_controller_ready()
            LOG_ERROR()
            LOG_DEBUG()
            target_read_u8()
            target_read_u32()
            alive_sleep()
lpc3180_nand_ready()
    LOG_ERROR()
    LOG_DEBUG()
    target_read_u8()
    target_read_u32()
    alive_sleep()
lpc3180_read_data()
    LOG_ERROR()
    target_read_u8()
    target_read_u16()
    target_read_u32()
lpc3180_read_page()
    LOG_ERROR()
    malloc()
    target_write_u32()
    lpc3180_controller_ready()
    free()
    target_read_u32()
    LOG_WARNING()
    target_read_memory()
    memcpy()
    nand_page_command()
    target_alloc_working_area()
    lpc3180_tc_ready()
        LOG_ERROR()
        LOG_DEBUG()
        target_read_u32()
        alive_sleep()
    target_free_working_area()
    LOG_INFO()
    nand_read_page_raw()
lpc3180_write_data()
    LOG_ERROR()
    target_write_u32()
lpc3180_write_page()
    LOG_ERROR()
    target_write_u32()
    malloc()
    memset()
    memcpy()
    target_write_memory()
    lpc3180_controller_ready()
    free()
    nand_read_status()
    nand_write_page_raw()
        nand_page_command()
        nand_write_data_page()
        LOG_ERROR()
        nand_write_finish()
    nand_page_command()
    target_alloc_working_area()
    nand_write_finish()
    lpc3180_tc_ready()
    target_free_working_area()
    LOG_INFO()
lpc32xx_address()
    LOG_ERROR()
    target_write_u32()
lpc32xx_command()
    LOG_ERROR()
    target_write_u32()
lpc32xx_init()
    LOG_ERROR()
    LOG_DEBUG()
    target_write_u32()
    lpc32xx_cycle_time()
        target_read_u32()
        LOG_ERROR()
        lpc32xx_pll()
            LOG_WARNING()
        LOG_DEBUG()
    lpc32xx_reset()
        LOG_ERROR()
        target_write_u32()
        lpc32xx_controller_ready()
            LOG_ERROR()
            LOG_DEBUG()
            target_read_u8()
            target_read_u32()
            alive_sleep()
lpc32xx_nand_ready()
    LOG_ERROR()
    LOG_DEBUG()
    target_read_u8()
    target_read_u32()
    alive_sleep()
lpc32xx_read_data()
    LOG_ERROR()
    target_read_u8()
    target_read_u32()
lpc32xx_read_page()
    LOG_ERROR()
    lpc32xx_read_page_mlc()
        target_write_u32()
        LOG_ERROR()
        lpc32xx_controller_ready()
        target_read_u32()
        LOG_WARNING()
        target_read_memory()
        memcpy()
    target_alloc_working_area()
    lpc32xx_read_page_slc()
        LOG_DEBUG()
        lpc32xx_make_dma_list()
        target_write_memory()
        LOG_ERROR()
        nand_page_command()
        target_write_u32()
        lpc32xx_start_slc_dma()
            target_write_u32()
            LOG_ERROR()
            lpc32xx_tc_ready()
                LOG_DEBUG()
                target_read_u32()
                LOG_ERROR()
                alive_sleep()
        target_read_memory()
        lpc32xx_dump_oob()
            LOG_DEBUG()
        slc_ecc_copy_to_buffer()
        nand_correct_data()
            countbits()
        LOG_WARNING()
    target_free_working_area()
lpc32xx_write_data()
    LOG_ERROR()
    target_write_u32()
lpc32xx_write_page()
    LOG_ERROR()
    lpc32xx_write_page_mlc()
        target_write_u32()
        LOG_ERROR()
        memset()
        memcpy()
        target_write_memory()
        lpc32xx_controller_ready()
        nand_read_status()
    nand_write_page_raw()
    target_alloc_working_area()
    lpc32xx_write_page_slc()
        LOG_DEBUG()
        lpc32xx_make_dma_list()
        target_write_memory()
        LOG_ERROR()
        nand_page_command()
        target_write_u32()
        memset()
        memcpy()
        lpc32xx_start_slc_dma()
        lpc32xx_dma_ready()
            LOG_DEBUG()
            target_read_u32()
            LOG_ERROR()
            alive_sleep()
        target_read_memory()
        slc_ecc_copy_to_buffer()
        lpc32xx_dump_oob()
        lpc32xx_tc_ready()
        nand_write_finish()
    target_free_working_area()
lpcspifi_auto_probe()
    lpcspifi_probe()
        lpcspifi_read_flash_id()
            LOG_ERROR()
            LOG_DEBUG()
            lpcspifi_set_sw_mode()
                lpcspifi_set_hw_mode()
                    LOG_DEBUG()
                    ssp_write_reg()
                        target_write_u32()
                    target_alloc_working_area()
                    LOG_ERROR()
                    target_write_buffer()
                    target_free_working_area()
                    init_reg_param()
                    buf_set_u32()
                    target_run_algorithm()
                    destroy_reg_param()
                ioconfig_write_reg()
                    target_write_u32()
                io_write_reg()
                    target_write_u32()
                ssp_write_reg()
            wait_till_ready()
                timeval_ms()
                read_status_reg()
                    ssp_setcs()
                        io_write_reg()
                    ssp_write_reg()
                    poll_ssp_busy()
                        ssp_read_reg()
                            target_read_u32()
                        timeval_ms()
                        alive_sleep()
                        LOG_ERROR()
                    ssp_read_reg()
                alive_sleep()
                LOG_ERROR()
            ssp_setcs()
            ssp_write_reg()
            poll_ssp_busy()
            ssp_read_reg()
        lpcspifi_set_hw_mode()
        LOG_ERROR()
        LOG_INFO()
        LOG_WARNING()
        malloc()
lpcspifi_erase()
    LOG_DEBUG()
    LOG_ERROR()
    lpcspifi_bulk_erase()
        lpcspifi_set_sw_mode()
        lpcspifi_write_enable()
            ssp_setcs()
            ssp_write_reg()
            poll_ssp_busy()
            ssp_read_reg()
            read_status_reg()
            LOG_ERROR()
        ssp_setcs()
        ssp_write_reg()
        poll_ssp_busy()
        ssp_read_reg()
        wait_till_ready()
    lpcspifi_set_hw_mode()
    LOG_WARNING()
    target_alloc_working_area()
    target_write_buffer()
    target_free_working_area()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    destroy_reg_param()
lpcspifi_protect()
lpcspifi_protect_check()
lpcspifi_write()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    lpcspifi_set_hw_mode()
    target_alloc_working_area()
    target_write_buffer()
    target_free_working_area()
    target_get_working_area_avail()
    init_reg_param()
    buf_set_u32()
    target_run_flash_async_algorithm()
    destroy_reg_param()
ls1_sap_arch_state()
    LOG_DEBUG()
ls1_sap_assert_reset()
    LOG_DEBUG()
ls1_sap_deassert_reset()
    LOG_DEBUG()
ls1_sap_halt()
    LOG_DEBUG()
ls1_sap_init_target()
    LOG_DEBUG()
ls1_sap_poll()
ls1_sap_read_memory()
    LOG_DEBUG()
    ls1_sap_set_addr_high()
        ls1_sap_set_instr()
            buf_get_u32()
            calloc()
            DIV_ROUND_UP()
            buf_set_u32()
            jtag_add_ir_scan()
            free()
        buf_set_u32()
        jtag_add_dr_scan()
    ls1_sap_memory_cmd()
        ls1_sap_set_instr()
        buf_set_u64()
        jtag_add_dr_scan()
    ls1_sap_memory_read()
        ls1_sap_set_instr()
        jtag_add_dr_scan()
    jtag_execute_queue()
ls1_sap_resume()
    LOG_DEBUG()
ls1_sap_step()
    LOG_DEBUG()
ls1_sap_target_create()
    calloc()
ls1_sap_write_memory()
    LOG_DEBUG()
    ls1_sap_set_addr_high()
    ls1_sap_memory_cmd()
    ls1_sap_memory_write()
        ls1_sap_set_instr()
        jtag_add_dr_scan()
    jtag_execute_queue()
max32xxx_erase()
    LOG_ERROR()
    max32xxx_mass_erase()
        LOG_ERROR()
        LOG_WARNING()
        max32xxx_flash_op_pre()
            target_read_u32()
            target_write_u32()
            LOG_ERROR()
            LOG_WARNING()
        target_read_u32()
        target_write_u32()
        max32xxx_flash_op_post()
            target_write_u32()
            target_read_u32()
    max32xxx_flash_op_pre()
    LOG_WARNING()
    target_write_u32()
    target_read_u32()
    max32xxx_flash_op_post()
max32xxx_probe()
    free()
    calloc()
    target_read_u32()
    LOG_DEBUG()
    max32xxx_protect_check()
        target_read_u32()
    LOG_WARNING()
max32xxx_write()
    LOG_ERROR()
    LOG_DEBUG()
    LOG_WARNING()
    max32xxx_flash_op_pre()
    target_read_u32()
    target_write_u32()
    max32xxx_write_block()
        LOG_DEBUG()
        target_alloc_working_area()
        target_alloc_working_area_try()
        target_free_working_area()
        target_name()
        target_write_buffer()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        LOG_ERROR()
        destroy_reg_param()
    max32xxx_flash_op_post()
    target_write_buffer()
mdr_auto_probe()
    mdr_probe()
        free()
        malloc()
mdr_erase()
    LOG_ERROR()
    target_read_u32()
    target_write_u32()
    mdr_mass_erase()
        target_read_u32()
        target_write_u32()
mdr_read()
    default_flash_read()
        target_read_buffer()
    LOG_ERROR()
    target_read_u32()
    target_write_u32()
    buf_set_u32()
mdr_write()
    LOG_ERROR()
    malloc()
    LOG_INFO()
    memcpy()
    target_read_u32()
    target_write_u32()
    mdr_write_block()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_buffer()
        target_alloc_working_area_try()
        target_free_working_area()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        LOG_ERROR()
        buf_get_u32()
        destroy_reg_param()
    LOG_WARNING()
    free()
    target_checksum_memory()
mem_ap_arch_state()
    LOG_DEBUG()
mem_ap_assert_reset()
    LOG_DEBUG()
mem_ap_deassert_reset()
    target_call_event_callbacks()
    LOG_DEBUG()
mem_ap_deinit_target()
    LOG_DEBUG()
    dap_put_ap()
    free()
mem_ap_examine()
    target_was_examined()
    dap_get_ap()
    LOG_ERROR()
    target_set_examined()
    mem_ap_init()
mem_ap_get_gdb_arch()
mem_ap_get_gdb_reg_list()
    calloc()
    LOG_ERROR()
mem_ap_halt()
    LOG_DEBUG()
    target_call_event_callbacks()
mem_ap_init_target()
    LOG_DEBUG()
mem_ap_poll()
mem_ap_read_memory()
    LOG_DEBUG()
    mem_ap_read_buf()
mem_ap_reg_get()
mem_ap_reg_set()
mem_ap_resume()
    LOG_DEBUG()
mem_ap_step()
    LOG_DEBUG()
    target_call_event_callbacks()
mem_ap_target_create()
    LOG_ERROR()
    calloc()
    strdup()
mem_ap_write_memory()
    LOG_DEBUG()
    mem_ap_write_buf()
mips32_arch_state()
    target_to_mips32()
    LOG_USER()
    debug_reason_name()
    buf_get_u32()
mips32_blank_check_memory()
    target_to_mips32()
    LOG_ERROR()
    MIPS32_LB()
    MIPS32_AND()
    MIPS32_ADDIU()
    NEG16()
    MIPS32_BNE()
    MIPS32_SDBBP()
    target_alloc_working_area()
    pracc_swap16_array()
    ARRAY_SIZE()
    target_buffer_set_u32_array()
    target_write_buffer()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    buf_get_u32()
    destroy_reg_param()
    target_free_working_area()
mips32_checksum_memory()
    target_to_mips32()
    MIPS32_ADDIU()
    MIPS32_BEQ()
    MIPS32_LB()
    MIPS32_ADDI()
    MIPS32_SLL()
    MIPS32_LUI()
    MIPS32_XOR()
    MIPS32_ORI()
    MIPS32_ADDU()
    MIPS32_SLTI()
    MIPS32_MOVN()
    MIPS32_BNE()
    NEG16()
    MIPS32_SDBBP()
    target_alloc_working_area()
    pracc_swap16_array()
    ARRAY_SIZE()
    target_buffer_set_u32_array()
    target_write_buffer()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    buf_get_u32()
    destroy_reg_param()
    target_free_working_area()
mips32_get_core_reg()
    target_to_mips32()
mips32_get_gdb_reg_list()
    target_to_mips32()
    malloc()
mips32_run_algorithm()
    target_to_mips32()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_TARGET_ERROR()
    buf_get_u32()
    mips32_run_and_wait()
        target_resume()
        target_wait_state()
        target_halt()
        buf_get_u32()
        LOG_DEBUG()
    buf_set_u32()
mips32_set_core_reg()
    buf_get_u32()
    buf_set_u32()
mips64_arch_state()
    LOG_ERROR()
    exit()
    LOG_USER()
    debug_reason_name()
    buf_get_u64()
mips64_get_core_reg()
mips64_get_gdb_reg_list()
    malloc()
mips64_run_algorithm()
mips64_set_core_reg()
    buf_get_u64()
    buf_set_u64()
mips_ejtag_add_scan_96()
    assert()
    buf_set_u32()
    jtag_add_dr_scan()
    keep_alive()
mips_m4k_add_breakpoint()
    target_to_mips32()
    LOG_INFO()
    mips_m4k_set_breakpoint()
        target_to_mips32()
        LOG_WARNING()
        LOG_ERROR()
        breakpoint_hw_set()
        target_write_u32()
        LOG_DEBUG()
        MIPS32_SDBBP()
        SWAP16()
        target_read_memory()
        target_read_u32()
        target_buffer_set_u32()
        target_write_memory()
        target_buffer_get_u32()
        target_write_u16()
        MIPS16_SDBBP()
        target_read_u16()
mips_m4k_add_watchpoint()
    target_to_mips32()
    LOG_INFO()
    mips_m4k_set_watchpoint()
        target_to_mips32()
        LOG_WARNING()
        LOG_ERROR()
        watchpoint_set()
        target_write_u32()
        LOG_DEBUG()
mips_m4k_assert_reset()
    target_to_m4k()
    target_was_examined()
    LOG_WARNING()
    LOG_DEBUG()
    target_state_name()
    jtag_get_reset_config()
    jtag_add_reset()
    mips_ejtag_set_instr()
    target_has_event_action()
    target_handle_event()
    mips_ejtag_drscan_8_out()
        assert()
        jtag_add_dr_scan()
    mips_ejtag_drscan_32_out()
    jtag_add_sleep()
    register_cache_invalidate()
    target_halt()
mips_m4k_deassert_reset()
    LOG_DEBUG()
    target_state_name()
    jtag_add_reset()
mips_m4k_examine()
    target_to_m4k()
    target_was_examined()
    mips_ejtag_get_idcode()
        mips_ejtag_set_instr()
        mips_ejtag_drscan_32()
    LOG_ERROR()
    mips_ejtag_set_instr()
    LOG_DEBUG()
    mips_ejtag_init()
        mips_ejtag_get_impcode()
            mips_ejtag_set_instr()
            mips_ejtag_drscan_32()
        LOG_ERROR()
        LOG_DEBUG()
        ejtag_main_print_imp()
            LOG_DEBUG()
            EJTAG_IMP_HAS()
            ejtag_v20_print_imp()
                LOG_DEBUG()
                EJTAG_IMP_HAS()
            ejtag_v26_print_imp()
                LOG_DEBUG()
                EJTAG_IMP_HAS()
        mips_ejtag_init_mmr()
    mips32_examine()
        target_to_mips32()
        target_was_examined()
        target_set_examined()
mips_m4k_init_target()
    mips32_build_reg_cache()
        target_to_mips32()
        register_get_last_cache_p()
        malloc()
        calloc()
        register_init_dummy()
        LOG_ERROR()
mips_m4k_poll()
    target_to_mips32()
    get_mips_m4k()
        foreach_smp_target()
    target_call_event_callbacks()
    mips_ejtag_set_instr()
    mips_ejtag_drscan_32()
    LOG_DEBUG()
    mips_m4k_debug_entry()
        target_to_mips32()
        mips32_save_context()
            target_to_mips32()
            mips32_pracc_read_regs()
                pracc_queue_init()
                MIPS32_MFC0()
                MIPS32_MFLO()
                MIPS32_MFHI()
                pracc_add()
                MIPS32_MTC0()
                MIPS32_LUI()
                MIPS32_SW()
                MIPS32_B()
                NEG16()
                mips32_pracc_queue_exec()
                pracc_queue_free()
        mips_ejtag_config_step()
            pracc_queue_init()
            pracc_add()
            MIPS32_MFC0()
            MIPS32_ORI()
            MIPS32_XORI()
            MIPS32_MTC0()
            MIPS32_LUI()
            UPPER16()
            MIPS32_B()
            NEG16()
            LOWER16()
            mips32_pracc_queue_exec()
            pracc_queue_free()
        mips32_configure_break_unit()
            target_to_mips32()
            target_read_u32()
            mips32_configure_ibs()
                target_to_mips32()
                target_read_u32()
                calloc()
                target_write_u32()
            mips32_configure_dbs()
                target_to_mips32()
                target_read_u32()
                calloc()
                target_write_u32()
            LOG_WARNING()
            LOG_DEBUG()
        mips_m4k_examine_debug_reason()
            target_to_mips32()
            target_read_u32()
            target_write_u32()
        mips32_cpu_probe()
            target_to_mips32()
            mips32_read_c0_prid()
                target_to_mips32()
                mips32_cp0_read()
                    pracc_queue_init()
                    pracc_add()
                    MIPS32_LUI()
                    MIPS32_MFC0()
                    MIPS32_SW()
                    UPPER16()
                    MIPS32_B()
                    NEG16()
                    MIPS32_ORI()
                    LOWER16()
                    mips32_pracc_queue_exec()
                    pracc_queue_free()
                LOG_ERROR()
            LOG_DEBUG()
        mips32_read_config_regs()
            target_to_mips32()
            LOG_DEBUG()
            LOG_USER()
        buf_get_u32()
        LOG_DEBUG()
        target_state_name()
    update_halt_gdb()
        mips_m4k_halt_smp()
            foreach_smp_target()
            mips_m4k_halt()
                target_to_mips32()
                LOG_DEBUG()
                target_state_name()
                LOG_WARNING()
                jtag_get_reset_config()
                jtag_get_srst()
                LOG_ERROR()
                mips_ejtag_enter_debug()
                    mips_ejtag_set_instr()
                    disable_dcr_mp()
                        mips32_dmaacc_read_mem()
                            mips32_dmaacc_read_mem8()
                                ejtag_dma_read_b()
                                    mips_ejtag_set_instr()
                                    mips_ejtag_drscan_32()
                                    ejtag_dma_dstrt_poll()
                                        timeval_ms()
                                        LOG_ERROR()
                                        mips_ejtag_drscan_32()
                                    LOG_ERROR()
                            mips32_dmaacc_read_mem16()
                                ejtag_dma_read_h()
                                    mips_ejtag_set_instr()
                                    mips_ejtag_drscan_32()
                                    ejtag_dma_dstrt_poll()
                                    LOG_ERROR()
                            mips32_dmaacc_read_mem32()
                                ejtag_dma_read()
                                    mips_ejtag_set_instr()
                                    mips_ejtag_drscan_32()
                                    ejtag_dma_dstrt_poll()
                                    LOG_ERROR()
                        mips32_dmaacc_write_mem()
                            mips32_dmaacc_write_mem8()
                                ejtag_dma_write_b()
                                    mips_ejtag_set_instr()
                                    mips_ejtag_drscan_32()
                                    ejtag_dma_dstrt_poll()
                                    LOG_ERROR()
                            mips32_dmaacc_write_mem16()
                                ejtag_dma_write_h()
                                    mips_ejtag_set_instr()
                                    mips_ejtag_drscan_32()
                                    ejtag_dma_dstrt_poll()
                                    LOG_ERROR()
                            mips32_dmaacc_write_mem32()
                                ejtag_dma_write()
                                    mips_ejtag_set_instr()
                                    mips_ejtag_drscan_32()
                                    ejtag_dma_dstrt_poll()
                                    LOG_ERROR()
                        LOG_ERROR()
                    mips_ejtag_drscan_32()
                    LOG_DEBUG()
                    LOG_ERROR()
            LOG_ERROR()
mips_m4k_read_memory()
    target_to_mips32()
    LOG_DEBUG()
    LOG_WARNING()
    mips_m4k_bulk_read_memory()
        target_to_mips32()
        LOG_DEBUG()
        target_alloc_working_area()
        LOG_ERROR()
        malloc()
        mips32_pracc_fastdata_xfer()
            MIPS32_SW()
            MIPS32_LUI()
            UPPER16()
            MIPS32_ORI()
            LOWER16()
            MIPS32_LW()
            MIPS32_BNE()
            NEG16()
            MIPS32_ADDI()
            MIPS32_JR()
            MIPS32_MFC0()
            pracc_swap16_array()
            ARRAY_SIZE()
            mips32_pracc_write_mem()
                mips32_pracc_write_mem_generic()
                    pracc_queue_init()
                    UPPER16()
                    pracc_add()
                    MIPS32_LUI()
                    pracc_add_li32()
                        LOWER16()
                        pracc_add()
                        MIPS32_LUI()
                        UPPER16()
                        MIPS32_ORI()
                    MIPS32_B()
                    NEG16()
                    MIPS32_MFC0()
                    mips32_pracc_queue_exec()
                    exit()
                    pracc_queue_free()
                KSEGX()
                mips32_cp0_read()
                LOG_DEBUG()
                mips32_pracc_synchronize_cache()
                    pracc_queue_init()
                    pracc_add()
                    MIPS32_LUI()
                    MIPS32_RDHWR()
                    MIPS32_SW()
                    pracc_add_li32()
                    MIPS32_B()
                    NEG16()
                    MIPS32_MFC0()
                    mips32_pracc_queue_exec()
                    exit()
                    mips32_cp0_read()
                    IS_PWR_OF_2()
                    LOG_DEBUG()
                    UPPER16()
                    MIPS32_SYNCI()
                    LOWER16()
                    MIPS32_CACHE()
                    MIPS32_SYNC()
                    pracc_queue_free()
            LOG_DEBUG()
            MIPS32_XORI()
            wait_for_pracc_rw()
            mips_ejtag_set_instr()
            mips_ejtag_drscan_32_out()
            mips32_pracc_finish()
            mips32_pracc_read_ctrl_addr()
            mips_ejtag_fastdata_scan()
                assert()
                buf_set_u32()
                jtag_add_dr_scan()
                jtag_add_callback()
                keep_alive()
            adapter_get_speed_khz()
            jtag_execute_queue()
            LOG_ERROR()
        target_buffer_set_u32_array()
        free()
    malloc()
    LOG_ERROR()
    mips32_pracc_read_mem()
        mips32_pracc_read_u32()
            pracc_queue_init()
            pracc_add()
            MIPS32_LUI()
            UPPER16()
            MIPS32_LW()
            LOWER16()
            MIPS32_SW()
            pracc_add_li32()
            MIPS32_B()
            NEG16()
            MIPS32_MFC0()
            mips32_pracc_queue_exec()
            pracc_queue_free()
        pracc_queue_init()
        malloc()
        LOG_ERROR()
        exit()
        UPPER16()
        pracc_add()
        MIPS32_LUI()
        pracc_add_li32()
        MIPS32_B()
        NEG16()
        MIPS32_MFC0()
        mips32_pracc_queue_exec()
        pracc_queue_free()
        free()
    mips32_dmaacc_read_mem()
    target_buffer_set_u32_array()
    target_buffer_set_u16_array()
        target_buffer_set_u16()
    free()
mips_m4k_remove_breakpoint()
    target_to_mips32()
    LOG_WARNING()
    mips_m4k_unset_breakpoint()
        target_to_mips32()
        LOG_WARNING()
        LOG_DEBUG()
        target_write_u32()
        MIPS32_SDBBP()
        SWAP16()
        target_read_memory()
        target_buffer_get_u32()
        target_write_memory()
        target_buffer_get_u16()
        MIPS16_SDBBP()
mips_m4k_remove_watchpoint()
    target_to_mips32()
    LOG_WARNING()
    mips_m4k_unset_watchpoint()
        target_to_mips32()
        LOG_WARNING()
        LOG_DEBUG()
        target_write_u32()
mips_m4k_resume()
    target_call_event_callbacks()
    mips_m4k_internal_restore()
        target_to_mips32()
        LOG_WARNING()
        target_free_all_working_areas()
        mips_m4k_enable_breakpoints()
            mips_m4k_set_breakpoint()
        mips_m4k_enable_watchpoints()
            mips_m4k_set_watchpoint()
        mips_m4k_isa_filter()
        buf_set_u32()
        buf_get_u32()
        mips32_restore_context()
            target_to_mips32()
            mips32_pracc_write_regs()
                pracc_queue_init()
                MIPS32_MTC0()
                MIPS32_MTLO()
                MIPS32_MTHI()
                pracc_add_li32()
                pracc_add()
                MIPS32_LUI()
                UPPER16()
                MIPS32_B()
                NEG16()
                MIPS32_ORI()
                LOWER16()
                mips32_pracc_queue_exec()
                pracc_queue_free()
        breakpoint_find()
        LOG_DEBUG()
        mips_m4k_unset_breakpoint()
        mips_m4k_single_step_core()
            target_to_mips32()
            mips_ejtag_config_step()
            mips32_enable_interrupts()
                target_read_u32()
                target_write_u32()
            mips_ejtag_exit_debug()
            mips_m4k_debug_entry()
        mips_m4k_set_breakpoint()
        mips32_enable_interrupts()
        mips_ejtag_exit_debug()
        register_cache_invalidate()
        target_call_event_callbacks()
    mips_m4k_restore_smp()
        foreach_smp_target()
        mips_m4k_internal_restore()
        LOG_ERROR()
mips_m4k_step()
    target_to_mips32()
    LOG_WARNING()
    mips_m4k_isa_filter()
    buf_set_u32()
    breakpoint_find()
    buf_get_u32()
    mips_m4k_unset_breakpoint()
    mips32_restore_context()
    mips_ejtag_config_step()
    target_call_event_callbacks()
    mips32_enable_interrupts()
    mips_ejtag_exit_debug()
    register_cache_invalidate()
    LOG_DEBUG()
    mips_m4k_debug_entry()
    mips_m4k_set_breakpoint()
mips_m4k_target_create()
    calloc()
    mips_m4k_init_arch_info()
        mips32_init_arch_info()
            mips32_read_core_reg()
                target_to_mips32()
                buf_set_u32()
            mips32_write_core_reg()
                target_to_mips32()
                buf_get_u32()
                LOG_DEBUG()
mips_m4k_write_memory()
    target_to_mips32()
    LOG_DEBUG()
    LOG_WARNING()
    mips_m4k_bulk_write_memory()
        target_to_mips32()
        LOG_DEBUG()
        target_alloc_working_area()
        LOG_ERROR()
        malloc()
        target_buffer_get_u32_array()
        mips32_pracc_fastdata_xfer()
        free()
    malloc()
    LOG_ERROR()
    target_buffer_get_u32_array()
    target_buffer_get_u16_array()
    mips32_pracc_write_mem()
    mips32_dmaacc_write_mem()
    free()
mips_mips64_add_breakpoint()
    mips64_extend_sign()
    LOG_INFO()
    mips_mips64_set_breakpoint()
        LOG_WARNING()
        mips_mips64_set_hwbp()
            LOG_DEBUG()
            LOG_WARNING()
            exit()
            target_write_u64()
                target_was_examined()
                LOG_ERROR()
                LOG_DEBUG()
                target_buffer_set_u64()
                target_write_memory()
        LOG_DEBUG()
        mips_mips64_set_sdbbp()
            target_read_memory()
            target_write_u32()
            target_read_u32()
            LOG_ERROR()
        mips_mips16_set_sdbbp()
            target_read_memory()
            target_write_u16()
            MIPS16_SDBBP()
            target_read_u16()
            LOG_ERROR()
        LOG_ERROR()
mips_mips64_add_watchpoint()
    LOG_INFO()
    mips_mips64_set_watchpoint()
        LOG_WARNING()
        LOG_ERROR()
        watchpoint_set()
        target_write_u64()
        LOG_DEBUG()
mips_mips64_assert_reset()
    LOG_DEBUG()
    target_state_name()
    jtag_get_reset_config()
    LOG_ERROR()
    mips_ejtag_set_instr()
    jtag_add_reset()
    jtag_add_sleep()
    mips64_invalidate_core_regs()
    target_halt()
mips_mips64_checksum_memory()
mips_mips64_deassert_reset()
    LOG_DEBUG()
    target_state_name()
    jtag_add_reset()
mips_mips64_examine()
    mips_ejtag_init()
    mips64_examine()
        target_was_examined()
        target_set_examined()
mips_mips64_halt()
    LOG_DEBUG()
    target_state_name()
    LOG_WARNING()
    jtag_get_reset_config()
    jtag_get_srst()
    LOG_ERROR()
    mips_ejtag_enter_debug()
mips_mips64_init_target()
    mips64_build_reg_cache()
        calloc()
        LOG_ERROR()
        reg_type2size()
        register_get_last_cache_p()
        free()
mips_mips64_poll()
    mips_ejtag_set_instr()
    mips_ejtag_drscan_32()
    LOG_DEBUG()
    mips_mips64_debug_entry()
        mips64_save_context()
            mips64_pracc_read_regs()
                MIPS64_DMTC0()
                MIPS64_LUI()
                UPPER16()
                MIPS64_ORI()
                LOWER16()
                MIPS64_SD()
                MIPS64_DMFC0()
                MIPS64_MFLO()
                MIPS64_MFHI()
                MIPS64_MFC0()
                MIPS64_SRL()
                MIPS64_ANDI()
                MIPS64_BEQ()
                MIPS64_CFC1()
                MIPS64_DMFC1()
                MIPS64_LD()
                MIPS64_B()
                NEG16()
                LOG_DEBUG()
                mips64_pracc_exec()
                    LOG_DEBUG()
                    wait_for_pracc_rw()
                        mips_ejtag_set_instr()
                        mips_ejtag_drscan_32()
                        LOG_DEBUG()
                    mips_ejtag_set_instr()
                    mips_ejtag_drscan_32()
                    LOG_ERROR()
                    mips64_pracc_exec_write()
                        mips_ejtag_set_instr()
                        mips_ejtag_drscan_64()
                            buf_set_u64()
                            jtag_add_dr_scan()
                            jtag_execute_queue()
                            LOG_ERROR()
                            buf_get_u64()
                            keep_alive()
                        mips_ejtag_drscan_32()
                        jtag_add_clocks()
                            tap_is_state_stable()
                            LOG_ERROR()
                            tap_state_name()
                            jtag_set_error()
                            jtag_checks()
                            interface_jtag_add_clocks()
                                cmd_queue_alloc()
                                jtag_queue_command()
                        jtag_execute_queue()
                        LOG_DEBUG()
                        LOG_ERROR()
                    mips64_pracc_exec_read()
                        LOG_ERROR()
                        LOG_DEBUG()
                        mips_ejtag_set_instr()
                        mips_ejtag_drscan_64()
                        mips_ejtag_drscan_32()
                        jtag_add_clocks()
                        jtag_execute_queue()
                ARRAY_SIZE()
        mips64_ejtag_config_step()
            MIPS64_MTC0()
            MIPS64_MFC0()
            MIPS64_ORI()
            MIPS64_B()
            NEG16()
            MIPS64_LUI()
            UPPER16()
            LOWER16()
            MIPS64_SD()
            MIPS64_AND()
            MIPS64_LD()
            ARRAY_SIZE()
            mips64_pracc_exec()
        mips64_configure_break_unit()
            target_read_u64()
                target_was_examined()
                LOG_ERROR()
                target_read_memory()
                target_buffer_get_u64()
                LOG_DEBUG()
            mips64_configure_i_break_unit()
                target_read_u64()
                calloc()
                LOG_ERROR()
                target_write_u64()
            mips64_configure_d_break_unit()
                target_read_u64()
                calloc()
                LOG_ERROR()
                target_write_u64()
            LOG_DEBUG()
        mips_mips64_examine_debug_reason()
        LOG_DEBUG()
        buf_get_u64()
        target_state_name()
    target_call_event_callbacks()
mips_mips64_read_memory()
    LOG_TARGET_ERROR()
    mips64_extend_sign()
    calloc()
    LOG_ERROR()
    LOG_DEBUG()
    mips64_pracc_read_mem()
        mips64_pracc_read_mem8()
            mips64_pracc_read_u8()
                MIPS64_DMTC0()
                MIPS64_LUI()
                UPPER16()
                MIPS64_ORI()
                LOWER16()
                MIPS64_SD()
                MIPS64_LD()
                NEG16()
                MIPS64_LBU()
                MIPS64_B()
                MIPS64_DMFC0()
                LOG_DEBUG()
                mips64_pracc_exec()
                ARRAY_SIZE()
        mips64_pracc_read_mem16()
            mips64_pracc_read_u16()
                MIPS64_DMTC0()
                MIPS64_LUI()
                UPPER16()
                MIPS64_ORI()
                LOWER16()
                MIPS64_SD()
                MIPS64_LD()
                NEG16()
                MIPS64_LHU()
                MIPS64_B()
                MIPS64_DMFC0()
                LOG_DEBUG()
                mips64_pracc_exec()
                ARRAY_SIZE()
        mips64_pracc_read_mem32()
            mips64_pracc_read_u32()
                MIPS64_DMTC0()
                MIPS64_LUI()
                UPPER16()
                MIPS64_ORI()
                LOWER16()
                MIPS64_SD()
                MIPS64_LD()
                NEG16()
                MIPS64_LW()
                MIPS64_B()
                MIPS64_DMFC0()
                LOG_DEBUG()
                mips64_pracc_exec()
                ARRAY_SIZE()
        mips64_pracc_read_mem64()
            mips64_pracc_read_u64()
                MIPS64_DMTC0()
                MIPS64_LUI()
                UPPER16()
                MIPS64_ORI()
                LOWER16()
                MIPS64_SD()
                MIPS64_LD()
                NEG16()
                MIPS64_B()
                MIPS64_DMFC0()
                LOG_DEBUG()
                mips64_pracc_exec()
                ARRAY_SIZE()
    target_buffer_set_u64_array()
        target_buffer_set_u64()
    target_buffer_set_u32_array()
    target_buffer_set_u16_array()
    free()
mips_mips64_remove_breakpoint()
    LOG_TARGET_ERROR()
    mips_mips64_unset_breakpoint()
        LOG_WARNING()
        mips_mips64_unset_hwbp()
            LOG_DEBUG()
            target_write_u64()
        LOG_DEBUG()
        mips_mips64_unset_sdbbp()
            target_read_memory()
            target_buffer_get_u32()
            target_write_memory()
        mips_mips16_unset_sdbbp()
            target_read_memory()
            target_buffer_get_u16()
            MIPS16_SDBBP()
            target_write_memory()
        LOG_ERROR()
mips_mips64_remove_watchpoint()
    LOG_TARGET_ERROR()
    mips_mips64_unset_watchpoint()
        LOG_WARNING()
        LOG_DEBUG()
        target_write_u64()
mips_mips64_resume()
    mips64_extend_sign()
    LOG_TARGET_ERROR()
    target_free_all_working_areas()
    mips_mips64_enable_breakpoints()
        mips_mips64_set_breakpoint()
    mips_mips64_enable_watchpoints()
        mips_mips64_set_watchpoint()
    buf_set_u64()
    buf_get_u64()
    mips64_restore_context()
        mips64_pracc_write_regs()
            MIPS64_DMTC0()
            MIPS64_LUI()
            UPPER16()
            MIPS64_ORI()
            LOWER16()
            MIPS64_LD()
            MIPS64_DMFC0()
            MIPS64_SD()
            MIPS64_MTLO()
            MIPS64_MTHI()
            MIPS64_MTC0()
            MIPS64_MFC0()
            MIPS64_SRL()
            MIPS64_ANDI()
            MIPS64_BEQ()
            MIPS64_CTC1()
            MIPS64_DMTC1()
            MIPS64_B()
            NEG16()
            LOG_DEBUG()
            mips64_pracc_exec()
            ARRAY_SIZE()
    breakpoint_find()
    LOG_DEBUG()
    mips_mips64_unset_breakpoint()
    mips_mips64_single_step_core()
        mips64_ejtag_config_step()
        mips64_enable_interrupts()
            target_read_u64()
            target_write_u64()
        mips64_ejtag_exit_debug()
            LOG_DEBUG()
            mips64_pracc_exec()
            ARRAY_SIZE()
        mips_mips64_debug_entry()
    mips_mips64_set_breakpoint()
    mips64_enable_interrupts()
    mips64_ejtag_exit_debug()
    mips64_invalidate_core_regs()
    target_call_event_callbacks()
mips_mips64_step()
    LOG_TARGET_ERROR()
    mips64_extend_sign()
    buf_set_u64()
    breakpoint_find()
    buf_get_u64()
    mips_mips64_unset_breakpoint()
    mips64_restore_context()
    mips64_ejtag_config_step()
    target_call_event_callbacks()
    mips64_enable_interrupts()
    mips64_ejtag_exit_debug()
    mips64_invalidate_core_regs()
    mips_mips64_set_breakpoint()
    LOG_DEBUG()
    mips_mips64_debug_entry()
mips_mips64_target_create()
    calloc()
    LOG_ERROR()
    mips64_init_arch_info()
        mips64_read_core_reg()
            buf_set_u64()
        mips64_write_core_reg()
            buf_get_u64()
            LOG_DEBUG()
mips_mips64_write_memory()
    LOG_TARGET_ERROR()
    mips64_extend_sign()
    mips_mips64_bulk_write_memory()
        LOG_DEBUG()
        target_alloc_working_area()
        LOG_ERROR()
        calloc()
        target_buffer_get_u64_array()
            target_buffer_get_u64()
        mips64_pracc_fastdata_xfer()
            MIPS64_SD()
            MIPS64_LUI()
            UPPER16()
            MIPS64_ORI()
            LOWER16()
            MIPS64_LD()
            MIPS64_BNE()
            NEG16()
            MIPS64_DADDIU()
            MIPS64_JR()
            MIPS64_DMFC0()
            mips64_pracc_write_mem()
                mips64_pracc_write_mem8()
                    mips64_pracc_write_u8()
                        MIPS64_DMTC0()
                        MIPS64_LUI()
                        UPPER16()
                        MIPS64_ORI()
                        LOWER16()
                        MIPS64_SD()
                        MIPS64_LD()
                        NEG16()
                        MIPS64_SB()
                        MIPS64_B()
                        MIPS64_DMFC0()
                        LOG_DEBUG()
                        mips64_pracc_exec()
                        ARRAY_SIZE()
                mips64_pracc_write_mem16()
                    mips64_pracc_write_u16()
                        MIPS64_DMTC0()
                        MIPS64_LUI()
                        UPPER16()
                        MIPS64_ORI()
                        LOWER16()
                        MIPS64_SD()
                        MIPS64_LD()
                        NEG16()
                        MIPS64_SH()
                        MIPS64_B()
                        MIPS64_DMFC0()
                        LOG_DEBUG()
                        mips64_pracc_exec()
                        ARRAY_SIZE()
                mips64_pracc_write_mem32()
                    mips64_pracc_write_u32()
                        MIPS64_DMTC0()
                        MIPS64_LUI()
                        UPPER16()
                        MIPS64_ORI()
                        LOWER16()
                        MIPS64_SD()
                        MIPS64_LD()
                        NEG16()
                        MIPS64_SW()
                        MIPS64_SYNCI()
                        MIPS64_B()
                        MIPS64_DMFC0()
                        LOG_DEBUG()
                        mips64_pracc_exec()
                        ARRAY_SIZE()
                mips64_pracc_write_mem64()
                    mips64_pracc_write_u64()
                        MIPS64_DMTC0()
                        MIPS64_LUI()
                        UPPER16()
                        MIPS64_ORI()
                        LOWER16()
                        MIPS64_SD()
                        MIPS64_LD()
                        NEG16()
                        MIPS64_SYNCI()
                        MIPS64_B()
                        MIPS64_DMFC0()
                        LOG_DEBUG()
                        mips64_pracc_exec()
                        ARRAY_SIZE()
            ARRAY_SIZE()
            LOG_DEBUG()
            mips64_pracc_exec()
            mips_ejtag_set_instr()
            mips_ejtag_drscan_32()
            LOG_ERROR()
            mips64_ejtag_fastdata_scan()
                assert()
                buf_set_u64()
                jtag_add_dr_scan()
                jtag_add_callback()
                keep_alive()
            wait_for_pracc_rw()
            adapter_get_speed_khz()
            jtag_add_clocks()
            jtag_execute_queue()
        free()
    LOG_WARNING()
    calloc()
    LOG_ERROR()
    target_buffer_get_u64_array()
    target_buffer_get_u32_array()
    target_buffer_get_u16_array()
    LOG_DEBUG()
    mips64_pracc_write_mem()
    free()
mqx_create()
    ARRAY_SIZE()
    strcmp()
    LOG_ERROR()
mqx_detect_rtos()
mqx_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
mqx_get_thread_reg_list()
    LOG_ERROR()
    mqx_is_scheduler_running()
        mqx_get_symbol()
        mqx_get_member()
            mqx_target_read_buffer()
                mqx_valid_address_check()
                    LOG_ERROR()
                LOG_WARNING()
                target_read_buffer()
                LOG_ERROR()
            LOG_WARNING()
        LOG_WARNING()
    mqx_get_symbol()
    mqx_get_member()
    rtos_generic_stack_read()
mqx_update_threads()
    rtos_free_threadlist()
    mqx_is_scheduler_running()
    mqx_get_symbol()
    mqx_get_member()
    calloc()
    ARRAY_SIZE()
    malloc()
    strlen()
    strcpy()
    snprintf()
mrvlqspi_auto_probe()
    mrvlqspi_probe()
        LOG_ERROR()
        mrvlqspi_read_id()
            LOG_DEBUG()
            mrvlqspi_fifo_flush()
                target_read_u32()
                mrvlqspi_get_reg()
                target_write_u32()
                LOG_DEBUG()
                LOG_ERROR()
                alive_sleep()
            mrvlqspi_set_hdr_cnt()
                target_write_u32()
                mrvlqspi_get_reg()
            mrvlqspi_set_din_cnt()
                target_write_u32()
                mrvlqspi_get_reg()
            mrvlqspi_set_instr()
                target_write_u32()
                mrvlqspi_get_reg()
            mrvlqspi_set_conf()
                target_read_u32()
                mrvlqspi_get_reg()
                target_write_u32()
            mrvlqspi_start_transfer()
                mrvlqspi_set_ss_state()
                    target_read_u32()
                    mrvlqspi_get_reg()
                    target_write_u32()
                    LOG_DEBUG()
                    LOG_ERROR()
                    alive_sleep()
                target_read_u32()
                mrvlqspi_get_reg()
                target_write_u32()
            mrvlqspi_read_byte()
                target_read_u32()
                mrvlqspi_get_reg()
                LOG_DEBUG()
                usleep()
            mrvlqspi_set_ss_state()
        LOG_INFO()
        LOG_WARNING()
        malloc()
mrvlqspi_flash_erase()
    LOG_DEBUG()
    LOG_ERROR()
    mrvlqspi_bulk_erase()
        mrvlqspi_set_write_status()
            mrvlqspi_fifo_flush()
            mrvlqspi_set_hdr_cnt()
            mrvlqspi_set_instr()
            mrvlqspi_start_transfer()
            mrvlqspi_stop_transfer()
                target_read_u32()
                mrvlqspi_get_reg()
                LOG_DEBUG()
                LOG_ERROR()
                alive_sleep()
                target_write_u32()
                mrvlqspi_set_ss_state()
        mrvlqspi_set_instr()
        mrvlqspi_start_transfer()
        mrvlqspi_stop_transfer()
        mrvlqspi_flash_busy_status()
            mrvlqspi_fifo_flush()
            mrvlqspi_set_hdr_cnt()
            mrvlqspi_set_din_cnt()
            mrvlqspi_set_instr()
            mrvlqspi_set_conf()
            mrvlqspi_start_transfer()
            mrvlqspi_read_byte()
            LOG_ERROR()
            alive_sleep()
            mrvlqspi_stop_transfer()
    LOG_WARNING()
    mrvlqspi_block_erase()
        mrvlqspi_set_write_status()
        mrvlqspi_set_hdr_cnt()
        mrvlqspi_set_addr()
            target_write_u32()
            mrvlqspi_get_reg()
        mrvlqspi_set_instr()
        mrvlqspi_start_transfer()
        mrvlqspi_stop_transfer()
        mrvlqspi_flash_busy_status()
mrvlqspi_flash_erase_check()
mrvlqspi_flash_read()
    LOG_ERROR()
    mrvlqspi_fifo_flush()
    mrvlqspi_set_hdr_cnt()
    mrvlqspi_set_din_cnt()
    mrvlqspi_set_addr()
    mrvlqspi_set_instr()
    mrvlqspi_set_conf()
    mrvlqspi_start_transfer()
    mrvlqspi_read_byte()
    mrvlqspi_set_ss_state()
mrvlqspi_flash_write()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    target_alloc_working_area()
    target_write_buffer()
    target_free_working_area()
    target_get_working_area_avail()
    init_reg_param()
    buf_set_u32()
    target_run_flash_async_algorithm()
    destroy_reg_param()
mrvlqspi_get_info()
    command_print_sameline()
msp432_erase()
    LOG_ERROR()
    msp432_mass_erase()
        LOG_ERROR()
        msp432_init()
            msp432_auto_probe()
                msp432_probe()
                    target_read_u32()
                    msp432_device_type()
                    free()
                    malloc()
                    calloc()
                    strlen()
                    strcpy()
                    strcat()
                    flash_bank_add()
            LOG_WARNING()
            target_free_working_area()
            target_alloc_working_area()
            target_write_buffer()
            msp432_init_params()
                buf_set_u32()
            init_reg_param()
            buf_set_u32()
            target_start_algorithm()
            destroy_reg_param()
            LOG_ERROR()
            msp432_exec_cmd()
                buf_set_u32()
                target_write_buffer()
                target_write_u32()
            msp432_wait_return_code()
                timeval_ms()
                target_read_u32()
                keep_alive()
                LOG_ERROR()
                msp432_return_text()
        msp432_init_params()
        buf_set_u32()
        msp432_exec_cmd()
        msp432_quit()
            msp432_init_params()
            msp432_exec_cmd()
            msp432_wait_return_code()
            target_halt()
            target_wait_algorithm()
            target_free_working_area()
        msp432_wait_return_code()
    msp432_init()
    msp432_init_params()
    buf_set_u32()
    msp432_exec_cmd()
    msp432_quit()
    msp432_wait_return_code()
msp432_flash_free_driver_priv()
    free()
msp432_info()
    command_print_sameline()
msp432_protect_check()
mxc_init()
    validate_target_state()
        LOG_ERROR()
    nfc_is_v1()
    target_read_u16()
    target_read_u32()
    target_write_u32()
    LOG_DEBUG()
    LOG_ERROR()
    nfc_is_v2()
    initialize_nf_controller()
        target_write_u16()
        LOG_DEBUG()
        nfc_is_v2()
        MXC_NF_V2_CFG1_PPB()
        ffs()
        target_read_u16()
        LOG_ERROR()
        nfc_is_v1()
    mxc_command()
        validate_target_state()
        nfc_is_v1()
        target_write_u16()
        poll_for_complete_op()
            mxc_nand_ready()
                validate_target_state()
                target_read_u16()
                alive_sleep()
            LOG_ERROR()
    mxc_address()
        validate_target_state()
        target_write_u16()
        poll_for_complete_op()
    do_data_output()
        target_write_u16()
        MXC_NF_BIT_DATAOUT_TYPE()
        poll_for_complete_op()
        nfc_is_v1()
        ecc_status_v1()
            target_read_u16()
            LOG_INFO()
        ecc_status_v2()
            target_read_u16()
            LOG_INFO()
    LOG_INFO()
mxc_read_data()
    validate_target_state()
    do_data_output()
    LOG_ERROR()
    get_next_halfword_from_sram_buffer()
        nfc_is_v1()
        LOG_ERROR()
        nfc_is_v2()
        align_address_v2()
        target_read_u16()
    get_next_byte_from_sram_buffer()
        nfc_is_v1()
        LOG_ERROR()
        nfc_is_v2()
        align_address_v2()
        target_read_u16()
mxc_read_page()
    LOG_ERROR()
    validate_target_state()
    mxc_command()
    mxc_address()
    nfc_is_v1()
    target_write_u16()
    do_data_output()
    target_read_u16()
    target_read_buffer()
    MIN()
    align_address_v2()
    LOG_INFO()
mxc_reset()
    validate_target_state()
    initialize_nf_controller()
mxc_write_data()
    LOG_ERROR()
mxc_write_page()
    LOG_ERROR()
    validate_target_state()
    mxc_command()
    mxc_address()
    target_write_buffer()
    LOG_DEBUG()
    nfc_is_v1()
    MIN()
    align_address_v2()
    target_read_u16()
    target_write_u16()
    poll_for_complete_op()
    do_data_output()
    LOG_INFO()
nand_read_plain()
    LOG_ERROR()
    malloc()
    nand_read_page()
        nand_read_page_raw()
    memcpy()
    free()
nand_write_plain()
    LOG_ERROR()
    malloc()
    memset()
    memcpy()
    nand_write_page()
        nand_write_page_raw()
    free()
next_task()
    calloc()
    fill_buffer()
    get_buffer()
    free()
    LOG_ERROR()
niietcm4_auto_probe()
    niietcm4_probe()
        free()
        target_read_u32()
        LOG_INFO()
        niietcm4_probe_k1921vk01t()
            target_read_u32()
            snprintf()
            sprintf()
        malloc()
niietcm4_erase()
    LOG_ERROR()
    niietcm4_mass_erase()
        target_write_u32()
        niietcm4_opstatus_check()
            target_read_u32()
            LOG_ERROR()
            busy_sleep()
                timeval_ms()
            target_write_u32()
    target_write_u32()
    niietcm4_opstatus_check()
niietcm4_protect()
    LOG_ERROR()
    LOG_INFO()
    niietcm4_dump_uflash_page()
        target_write_u32()
        niietcm4_uopstatus_check()
            target_read_u32()
            LOG_ERROR()
            busy_sleep()
            target_write_u32()
        target_read_u32()
    niietcm4_uflash_page_erase()
        target_write_u32()
        niietcm4_uopstatus_check()
    niietcm4_load_uflash_page()
        target_write_u32()
        niietcm4_uopstatus_check()
niietcm4_protect_check()
    target_write_u32()
    niietcm4_uopstatus_check()
    target_read_u32()
niietcm4_write()
    LOG_ERROR()
    malloc()
    LOG_INFO()
    memcpy()
    niietcm4_write_block()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_buffer()
        target_alloc_working_area_try()
        target_free_working_area()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        LOG_ERROR()
        buf_get_u32()
        destroy_reg_param()
    LOG_WARNING()
    target_write_u32()
    niietcm4_opstatus_check()
    free()
nonce_nand_address()
nonce_nand_fast_block_write()
nonce_nand_init()
nonce_nand_read()
nonce_nand_reset()
    nonce_nand_command()
nonce_nand_write()
npcx_erase()
    LOG_ERROR()
    npcx_chip_erase()
        LOG_ERROR()
        npcx_auto_probe()
            npcx_probe()
                npcx_get_flash_id()
                    LOG_ERROR()
                    npcx_init()
                        target_free_working_area()
                        target_alloc_working_area()
                        LOG_TARGET_ERROR()
                        LOG_INFO()
                        target_write_buffer()
                        target_start_algorithm()
                    target_buffer_set_u32()
                    target_write_buffer()
                    npcx_quit()
                        target_halt()
                        target_wait_algorithm()
                        target_free_working_area()
                    npcx_wait_algo_done()
                        offsetof()
                        timeval_ms()
                        target_read_u32()
                        keep_alive()
                        LOG_TARGET_ERROR()
                    target_read_u32()
                npcx_get_flash()
                    ARRAY_SIZE()
                calloc()
                LOG_ERROR()
        npcx_init()
        target_buffer_set_u32()
        target_write_buffer()
        npcx_quit()
        npcx_wait_algo_done()
    npcx_auto_probe()
    npcx_init()
    target_buffer_set_u32()
    target_write_buffer()
    npcx_quit()
    npcx_wait_algo_done()
npcx_info()
    command_print_sameline()
    target_name()
npcx_write()
    LOG_ERROR()
    npcx_auto_probe()
    npcx_init()
    target_buffer_set_u32()
    target_write_buffer()
    npcx_wait_algo_done()
    npcx_quit()
nrf5_auto_probe()
    nrf5_bank_is_probed()
        assert()
    nrf5_probe()
        target_read_u32()
        LOG_ERROR()
        nrf5_read_ficr_info()
            target_read_u32()
            LOG_DEBUG()
        ARRAY_SIZE()
        strtoul()
        LOG_WARNING()
        nrf5_get_ram_size()
            target_read_u32()
            LOG_DEBUG()
        get_nrf5_chip_type_str()
            snprintf()
            nrf5_info_variant_to_str()
                h_u32_to_be()
                isalnum()
                memcpy()
                strcpy()
            nrf5_decode_info_package()
                ARRAY_SIZE()
            LOG_ERROR()
        LOG_INFO()
        free()
        alloc_block_array()
nrf5_erase()
    nrf5_get_probed_chip_if_halted()
        LOG_ERROR()
        nrf5_bank_is_probed()
        nrf5_probe()
    nrf5_protect_check_clenr0()
        assert()
        target_read_u32()
        LOG_ERROR()
    LOG_ERROR()
    nrf5_erase_page()
        LOG_DEBUG()
        target_read_u32()
        LOG_ERROR()
        default_flash_blank_check()
        nrf5_nvmc_generic_erase()
            nrf5_nvmc_erase_enable()
                target_write_u32()
                LOG_ERROR()
                nrf5_wait_for_nvmc()
                    timeval_ms()
                    target_read_u32()
                    LOG_ERROR()
                    keep_alive()
                    LOG_DEBUG()
            target_write_u32()
            nrf5_wait_for_nvmc()
            nrf5_nvmc_read_only()
                target_write_u32()
                LOG_ERROR()
                nrf5_wait_for_nvmc()
            LOG_ERROR()
nrf5_free_driver_priv()
    free()
nrf5_info()
    get_nrf5_chip_type_str()
    command_print_sameline()
nrf5_protect()
    LOG_ERROR()
    nrf5_get_probed_chip_if_halted()
    nrf5_protect_clenr0()
        LOG_ERROR()
        target_read_u32()
        nrf5_nvmc_write_enable()
            target_write_u32()
            LOG_ERROR()
            nrf5_wait_for_nvmc()
        target_write_u32()
        nrf5_wait_for_nvmc()
        LOG_INFO()
        nrf5_nvmc_read_only()
nrf5_protect_check()
    assert()
    nrf5_protect_check_bprot()
        assert()
        ARRAY_SIZE()
        target_read_u32()
    nrf5_protect_check_clenr0()
    LOG_WARNING()
nrf5_write()
    nrf5_get_probed_chip_if_halted()
    assert()
    nrf5_protect_check_clenr0()
    LOG_ERROR()
    nrf5_nvmc_write_enable()
    nrf5_ll_flash_write()
        LOG_DEBUG()
        assert()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_memory()
        nrf5_wait_for_nvmc()
        target_write_buffer()
        target_free_working_area()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        ARRAY_SIZE()
        destroy_reg_param()
    nrf5_nvmc_read_only()
nuc910_nand_address()
    validate_target_state()
        LOG_ERROR()
    target_write_u32()
nuc910_nand_init()
    validate_target_state()
    LOG_ERROR()
    target_write_u32()
nuc910_nand_read_block_data()
    validate_target_state()
    arm_nandread()
    nuc910_nand_read()
        validate_target_state()
        target_read_u8()
nuc910_nand_ready()
    target_read_u32()
    alive_sleep()
nuc910_nand_reset()
    nuc910_nand_command()
        validate_target_state()
        target_write_u8()
nuc910_nand_write_block_data()
    validate_target_state()
    arm_nandwrite()
    nuc910_nand_write()
        validate_target_state()
        target_write_u8()
nulink_usb_assert_srst()
    LOG_DEBUG()
    assert()
    nulink_usb_init_buffer()
        assert()
    h_u32_to_le()
    nulink_usb_xfer()
        assert()
nulink_usb_halt()
    LOG_DEBUG()
    assert()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
    le_to_h_u32()
nulink_usb_idcode()
    LOG_DEBUG()
    assert()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
    le_to_h_u32()
    LOG_INFO()
nulink_usb_open()
    LOG_DEBUG()
    LOG_ERROR()
    hid_init()
    calloc()
    adapter_get_required_serial()
    mbstowcs()
    LOG_WARNING()
    free()
    hid_enumerate()
    wcscmp()
    hid_free_enumeration()
    hid_open()
    nulink2_usb_init_buffer()
        memset()
        h_u16_to_le()
    nulink2_usb_xfer()
        assert()
        nulink_usb_xfer_rw()
            assert()
            hid_write()
            LOG_ERROR()
            hid_read_timeout()
        memcpy()
    nulink1_usb_init_buffer()
        memset()
    nulink1_usb_xfer()
        assert()
        nulink_usb_xfer_rw()
        memcpy()
    nulink_usb_version()
        LOG_DEBUG()
        assert()
        nulink_usb_init_buffer()
        memset()
        nulink_usb_xfer()
        LOG_INFO()
        le_to_h_u32()
        le_to_h_u16()
    nulink_speed()
        LOG_DEBUG()
        nulink_usb_init_buffer()
        h_u32_to_le()
        nulink_usb_xfer()
        LOG_INFO()
        le_to_h_u16()
    nulink_usb_reset()
        LOG_DEBUG()
        assert()
        nulink_usb_init_buffer()
        h_u32_to_le()
        nulink_usb_xfer()
    nulink_usb_close()
        LOG_DEBUG()
        hid_close()
        free()
        hid_exit()
nulink_usb_override_target()
    LOG_DEBUG()
    strcmp()
nulink_usb_read_reg()
    assert()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
    le_to_h_u32()
nulink_usb_run()
    LOG_DEBUG()
    assert()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
nulink_usb_state()
    assert()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
    le_to_h_u32()
nulink_usb_step()
    LOG_DEBUG()
    assert()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
    le_to_h_u32()
nulink_usb_write_debug_reg()
    LOG_DEBUG()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
nulink_usb_write_reg()
    assert()
    nulink_usb_init_buffer()
    h_u32_to_le()
    nulink_usb_xfer()
numicro_auto_probe()
    numicro_probe()
        numicro_get_cpu_type()
            numicro_get_arm_arch()
                target_to_armv7m()
                LOG_DEBUG()
            target_read_u32()
            LOG_WARNING()
            LOG_INFO()
            ARRAY_SIZE()
        LOG_WARNING()
        numicro_get_flash_size()
            LOG_INFO()
        malloc()
        LOG_DEBUG()
numicro_erase()
    LOG_ERROR()
    LOG_INFO()
    numicro_get_arm_arch()
    numicro_init_isp()
        LOG_ERROR()
        numicro_reg_unlock()
            target_read_u32()
            LOG_DEBUG()
            target_write_u32()
        target_read_u32()
        target_write_u32()
    target_write_u32()
    LOG_DEBUG()
    target_read_u32()
    busy_sleep()
numicro_protect_check()
    LOG_ERROR()
    LOG_INFO()
    numicro_get_arm_arch()
    numicro_init_isp()
    numicro_fmc_cmd()
        target_write_u32()
        target_read_u32()
        LOG_DEBUG()
        busy_sleep()
    LOG_DEBUG()
numicro_write()
    LOG_ERROR()
    LOG_INFO()
    numicro_get_arm_arch()
    numicro_init_isp()
    target_write_u32()
    assert()
    numicro_writeblock()
        LOG_WARNING()
        target_alloc_working_area()
        target_write_buffer()
        target_free_working_area()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        LOG_ERROR()
        destroy_reg_param()
    LOG_WARNING()
    memcpy()
    MIN()
    target_write_memory()
    target_read_u32()
    LOG_DEBUG()
    busy_sleep()
nuttx_create()
    ARRAY_SIZE()
    strcmp()
    target_type_name()
    LOG_INFO()
    LOG_ERROR()
nuttx_detect_rtos()
nuttx_esp_xtensa_stack_read()
    target_read_buffer()
nuttx_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
    LOG_ERROR()
nuttx_get_thread_reg_list()
    LOG_ERROR()
    nuttx_getreg_current_thread()
        target_get_gdb_reg_list()
        LOG_ERROR()
        calloc()
        free()
    nuttx_getregs_fromstack()
        LOG_ERROR()
        target_read_u16()
        offsetof()
        target_read_u32()
        rtos_generic_stack_read()
nuttx_smp_init()
nuttx_update_threads()
    LOG_ERROR()
    rtos_free_threadlist()
    target_read_u32()
    LOG_DEBUG()
    malloc()
    target_read_buffer()
    target_buffer_get_u16()
    target_buffer_get_addr()
        target_buffer_get_u64()
        target_buffer_get_u32()
    target_buffer_get_u32()
    target_read_u16()
    target_read_u8()
    realloc()
    ARRAY_SIZE()
    snprintf()
    calloc()
    strdup()
    free()
ocl_auto_probe()
ocl_erase()
    LOG_ERROR()
    embeddedice_send()
        arm_jtag_scann()
        arm_jtag_set_instr()
        buf_set_u32()
        jtag_add_dr_scan()
    embeddedice_handshake()
        LOG_ERROR()
        arm_jtag_scann()
        arm_jtag_set_instr()
        jtag_add_dr_scan()
        gettimeofday()
        timeval_add_time()
        jtag_execute_queue()
        buf_get_u32()
        timeval_compare()
    embeddedice_receive()
ocl_probe()
    embeddedice_receive()
    embeddedice_send()
    embeddedice_handshake()
    LOG_ERROR()
    realloc()
ocl_write()
    LOG_ERROR()
    malloc()
    embeddedice_send()
    free()
    embeddedice_handshake()
    embeddedice_receive()
opendous_execute_queue()
    LOG_DEBUG_IO()
    opendous_end_state()
        tap_is_state_stable()
        tap_set_end_state()
        LOG_ERROR()
        exit()
    opendous_runtest()
        tap_get_end_state()
        tap_get_state()
        opendous_end_state()
        opendous_state_move()
            tap_get_tms_path()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path_len()
            opendous_tap_append_step()
                opendous_tap_ensure_space()
                    opendous_tap_execute()
                        LOG_DEBUG()
                        memmove()
                        opendous_usb_message()
                            opendous_usb_write()
                                LOG_ERROR()
                                LOG_DEBUG()
                                jtag_libusb_control_transfer()
                                jtag_libusb_bulk_write()
                                LOG_DEBUG_IO()
                                opendous_debug_buffer()
                            opendous_usb_read()
                                LOG_DEBUG()
                                jtag_libusb_control_transfer()
                                jtag_libusb_bulk_read()
                                LOG_DEBUG_IO()
                                opendous_debug_buffer()
                            LOG_ERROR()
                        LOG_ERROR()
                        opendous_debug_buffer()
                        buf_set_buf()
                        LOG_DEBUG_IO()
                        jtag_read_buffer()
                        opendous_tap_init()
                        free()
                LOG_ERROR()
            tap_set_state()
        opendous_tap_append_step()
    opendous_state_move()
    opendous_path_move()
        tap_state_transition()
        tap_get_state()
        opendous_tap_append_step()
        LOG_ERROR()
        tap_state_name()
        exit()
        tap_set_state()
        tap_set_end_state()
    jtag_build_buffer()
    opendous_debug_buffer()
    jtag_scan_type()
    opendous_scan()
        opendous_tap_ensure_space()
        tap_get_end_state()
        opendous_end_state()
        tap_get_state()
        opendous_state_move()
        opendous_tap_append_scan()
            LOG_DEBUG_IO()
            opendous_tap_append_step()
        opendous_tap_append_step()
        tap_set_state()
    opendous_tap_execute()
    tap_set_state()
    opendous_reset()
        LOG_DEBUG()
        opendous_simple_command()
            LOG_DEBUG_IO()
            opendous_usb_message()
            LOG_ERROR()
    jtag_sleep()
    LOG_ERROR()
    exit()
opendous_init()
    strdup()
    LOG_WARNING()
    strcmp()
    LOG_ERROR()
    malloc()
    opendous_usb_open()
        jtag_libusb_open()
        jtag_libusb_set_configuration()
        libusb_claim_interface()
        malloc()
    opendous_get_version_info()
    opendous_get_status()
    LOG_INFO()
    opendous_reset()
    opendous_tap_init()
opendous_quit()
    opendous_usb_close()
        jtag_libusb_close()
        free()
    free()
openjtag_execute_queue()
    openjtag_execute_command()
        LOG_DEBUG_IO()
        openjtag_execute_reset()
            LOG_DEBUG_IO()
            openjtag_add_byte()
                LOG_DEBUG_IO()
                openjtag_execute_tap_queue()
                    openjtag_write_tap_buffer()
                        openjtag_buf_write()
                            openjtag_buf_write_cy7c65215()
                                openjtag_debug_buffer()
                                    sprintf()
                                    LOG_DEBUG()
                                    strcat()
                                jtag_libusb_control_transfer()
                                LOG_ERROR()
                                jtag_libusb_bulk_write()
                            openjtag_buf_write_standard()
                                openjtag_debug_buffer()
                                ftdi_write_data()
                                LOG_ERROR()
                                ftdi_get_error_string()
                        openjtag_buf_read()
                            openjtag_buf_read_cy7c65215()
                                jtag_libusb_control_transfer()
                                LOG_ERROR()
                                jtag_libusb_bulk_read()
                                openjtag_debug_buffer()
                            openjtag_buf_read_standard()
                                ftdi_read_data()
                                LOG_DEBUG_IO()
                                ftdi_get_error_string()
                                openjtag_debug_buffer()
                    LOG_DEBUG_IO()
                    openjtag_debug_buffer()
                    DIV_ROUND_UP()
                    jtag_read_buffer()
                    free()
        openjtag_execute_sleep()
            jtag_sleep()
        openjtag_execute_statemove()
            LOG_DEBUG_IO()
            tap_set_end_state()
            openjtag_set_state()
                openjtag_get_tap_state()
                openjtag_add_byte()
            tap_set_state()
            tap_get_end_state()
        openjtag_execute_scan()
            LOG_DEBUG_IO()
            tap_state_name()
            tap_set_end_state()
            jtag_build_buffer()
            openjtag_debug_buffer()
            tap_get_end_state()
            openjtag_set_state()
            tap_set_state()
            openjtag_add_scan()
                DIV_ROUND_UP()
                LOG_DEBUG_IO()
                openjtag_execute_tap_queue()
                openjtag_add_byte()
            tap_get_state()
        openjtag_execute_runtest()
            tap_set_end_state()
            tap_get_state()
            openjtag_set_state()
            tap_set_state()
            openjtag_add_byte()
            tap_get_end_state()
        LOG_ERROR()
        exit()
    openjtag_execute_tap_queue()
openjtag_init()
    openjtag_init_cy7c65215()
        jtag_libusb_open()
        LOG_ERROR()
        jtag_libusb_choose_interface()
        jtag_libusb_control_transfer()
        jtag_libusb_close()
    openjtag_init_standard()
        LOG_WARNING()
        ftdi_init()
        ftdi_usb_open_desc()
        LOG_ERROR()
        ftdi_usb_reset()
        ftdi_set_latency_timer()
        ftdi_get_latency_timer()
        LOG_DEBUG()
        ftdi_disable_bitbang()
        ftdi_set_baudrate()
        ftdi_get_error_string()
        ftdi_tcioflush()
    openjtag_speed()
        LOG_WARNING()
        openjtag_sendcommand()
            openjtag_buf_write()
    openjtag_sendcommand()
openjtag_khz()
openjtag_quit()
    openjtag_quit_cy7c65215()
        jtag_libusb_control_transfer()
        LOG_WARNING()
        jtag_libusb_close()
    openjtag_quit_standard()
        ftdi_usb_close()
        ftdi_deinit()
openjtag_speed_div()
or1k_add_breakpoint()
    target_to_or1k()
    or1k_to_du()
    LOG_DEBUG()
    LOG_ERROR()
    free()
    malloc()
    memcpy()
    target_buffer_set_u32()
or1k_add_watchpoint()
    LOG_ERROR()
or1k_adv_cpu_reset()
    or1k_adv_jtag_init()
        LOG_ERROR()
        malloc()
        memset()
        LOG_INFO()
        jsp_init()
            malloc()
            add_service()
        LOG_DEBUG()
    adbg_select_module()
    adbg_ctrl_read()
        adbg_select_ctrl_reg()
            LOG_ERROR()
            jtag_add_dr_scan()
            jtag_execute_queue()
        LOG_ERROR()
        jtag_add_dr_scan()
        jtag_execute_queue()
    adbg_ctrl_write()
        LOG_DEBUG()
        adbg_select_ctrl_reg()
        LOG_ERROR()
        jtag_add_dr_scan()
        jtag_execute_queue()
or1k_adv_cpu_stall()
    or1k_adv_jtag_init()
    adbg_select_module()
    adbg_ctrl_read()
    adbg_ctrl_write()
or1k_adv_is_cpu_running()
    or1k_adv_jtag_init()
    adbg_select_module()
    adbg_ctrl_read()
or1k_adv_jtag_read_cpu()
    or1k_adv_jtag_init()
    adbg_select_module()
    adbg_wb_burst_read()
        LOG_DEBUG()
        LOG_WARNING()
        LOG_ERROR()
        malloc()
        adbg_burst_command()
            jtag_add_dr_scan()
            jtag_execute_queue()
        jtag_add_dr_scan()
        jtag_execute_queue()
        find_status_bit()
        buffer_shr()
        memcpy()
        crc32_le()
            crc_le_step()
        adbg_ctrl_read()
        adbg_ctrl_write()
        free()
or1k_adv_jtag_read_memory()
    LOG_DEBUG()
    or1k_adv_jtag_init()
    adbg_select_module()
    adbg_wb_burst_read()
    buf_bswap32()
    buf_bswap16()
or1k_adv_jtag_write_cpu()
    or1k_adv_jtag_init()
    adbg_select_module()
    adbg_wb_burst_write()
        LOG_DEBUG()
        LOG_ERROR()
        adbg_burst_command()
        crc32_le()
        jtag_add_dr_scan()
        jtag_execute_queue()
        LOG_WARNING()
        adbg_ctrl_read()
        adbg_ctrl_write()
or1k_adv_jtag_write_memory()
    LOG_DEBUG()
    or1k_adv_jtag_init()
    adbg_select_module()
    calloc()
    LOG_ERROR()
    buf_bswap32()
    buf_bswap16()
    free()
    adbg_wb_burst_write()
or1k_arch_state()
or1k_checksum_memory()
or1k_examine()
    target_to_or1k()
    or1k_to_du()
    target_was_examined()
    target_set_examined()
    LOG_ERROR()
    LOG_DEBUG()
or1k_get_core_reg()
    LOG_DEBUG()
    or1k_read_core_reg()
        target_to_or1k()
        or1k_to_du()
        LOG_DEBUG()
        buf_set_u32()
        LOG_ERROR()
or1k_get_gdb_fileio_info()
or1k_get_gdb_reg_list()
    target_to_or1k()
    or1k_save_context()
        target_to_or1k()
        or1k_to_du()
        LOG_DEBUG()
    LOG_ERROR()
    malloc()
or1k_init_target()
    target_to_or1k()
    or1k_to_du()
    LOG_ERROR()
    or1k_build_reg_cache()
        target_to_or1k()
        register_get_last_cache_p()
        malloc()
        calloc()
        LOG_DEBUG()
or1k_jtag_read_regs()
    or1k_jtag_to_du()
    LOG_DEBUG()
or1k_poll()
    or1k_is_cpu_running()
        target_to_or1k()
        or1k_to_du()
        LOG_WARNING()
        alive_sleep()
        LOG_ERROR()
    LOG_ERROR()
    or1k_debug_entry()
        LOG_DEBUG()
        or1k_save_context()
        LOG_ERROR()
        target_to_or1k()
        breakpoint_find()
        or1k_set_core_reg()
            target_to_or1k()
            or1k_to_du()
            buf_get_u32()
            LOG_DEBUG()
            buf_set_u32()
            LOG_ERROR()
    target_call_event_callbacks()
    or1k_halt()
        target_to_or1k()
        or1k_to_du()
        LOG_DEBUG()
        target_state_name()
        LOG_WARNING()
        jtag_get_reset_config()
        jtag_get_srst()
        LOG_ERROR()
or1k_profiling()
    target_to_or1k()
    or1k_to_du()
    gettimeofday()
    timeval_add_time()
    LOG_INFO()
    target_poll()
    target_resume()
    LOG_ERROR()
    timeval_compare()
or1k_read_memory()
    target_to_or1k()
    or1k_to_du()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    LOG_ERROR()
or1k_remove_watchpoint()
    LOG_ERROR()
or1k_resume()
    or1k_resume_or_step()
        target_to_or1k()
        or1k_to_du()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        target_free_all_working_areas()
        buf_set_u32()
        or1k_restore_context()
            target_to_or1k()
            or1k_to_du()
            LOG_DEBUG()
            or1k_jtag_write_regs()
                or1k_jtag_to_du()
                LOG_DEBUG()
            LOG_ERROR()
        LOG_ERROR()
        is_any_soft_breakpoint()
            LOG_DEBUG()
        buf_get_u32()
        breakpoint_find()
        or1k_remove_breakpoint()
            target_to_or1k()
            or1k_to_du()
            LOG_DEBUG()
            LOG_ERROR()
        register_cache_invalidate()
        target_call_event_callbacks()
or1k_soft_reset_halt()
    target_to_or1k()
    or1k_to_du()
    LOG_DEBUG()
    LOG_ERROR()
    or1k_assert_reset()
        target_to_or1k()
        or1k_to_du()
        LOG_DEBUG()
        LOG_ERROR()
    or1k_deassert_reset()
        target_to_or1k()
        or1k_to_du()
        LOG_DEBUG()
        LOG_ERROR()
or1k_step()
    or1k_resume_or_step()
or1k_tap_mohor_init()
    LOG_DEBUG()
    jtag_add_tlr()
    jtag_add_ir_scan()
    jtag_execute_queue()
or1k_tap_vjtag_init()
    LOG_DEBUG()
    jtag_add_tlr()
    buf_set_u32()
    jtag_add_ir_scan()
    jtag_add_dr_scan()
    jtag_execute_queue()
    NB_NODES()
    M_WIDTH()
    MANUF()
    VER()
    guess_addr_width()
    ID()
    id_to_string()
    LOG_ERROR()
or1k_tap_xilinx_bscan_init()
    LOG_DEBUG()
    jtag_add_tlr()
    jtag_add_ir_scan()
    jtag_execute_queue()
or1k_target_create()
    calloc()
    or1k_create_reg_list()
        target_to_or1k()
        LOG_DEBUG()
        malloc()
        ARRAY_SIZE()
    or1k_tap_vjtag_register()
        list_add_tail()
    or1k_tap_xilinx_bscan_register()
        list_add_tail()
    or1k_tap_mohor_register()
        list_add_tail()
    or1k_du_adv_register()
        list_add_tail()
or1k_write_core_reg()
    target_to_or1k()
    LOG_DEBUG()
    buf_get_u32()
or1k_write_memory()
    target_to_or1k()
    or1k_to_du()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    LOG_ERROR()
orion_nand_address()
    target_write_u8()
orion_nand_fast_block_write()
    arm_nandwrite()
    orion_nand_slow_block_write()
        orion_nand_write()
            target_write_u8()
orion_nand_init()
orion_nand_read()
    target_read_u8()
orion_nand_reset()
    orion_nand_command()
        target_write_u8()
osbdm_execute_queue()
    queue_alloc()
        malloc()
        LOG_ERROR()
    LOG_ERROR()
    osbdm_execute_command()
        LOG_ERROR()
        osbdm_flush()
            DIV_ROUND_UP()
            memset()
            buf_set_buf()
            osbdm_swap()
                LOG_ERROR()
                DIV_ROUND_UP()
                memset()
                assert()
                osbdm_send_and_recv()
                    jtag_libusb_bulk_write()
                    LOG_ERROR()
                    jtag_libusb_bulk_read()
        osbdm_srst()
            memset()
            osbdm_send_and_recv()
        osbdm_add_pathmove()
            assert()
            queue_add_tail()
                LOG_ERROR()
                malloc()
                calloc()
                DIV_ROUND_UP()
                free()
            LOG_ERROR()
            buf_set_u32()
            tap_set_end_state()
            tap_get_state()
        osbdm_add_statemove()
            tap_set_end_state()
            tap_get_end_state()
            tap_get_state()
            tap_get_tms_path()
            tap_get_tms_path_len()
            queue_add_tail()
            LOG_ERROR()
            buf_set_u32()
            tap_set_state()
        osbdm_add_stableclocks()
            tap_is_state_stable()
            tap_get_state()
            LOG_ERROR()
            tap_state_name()
            queue_add_tail()
            memset()
            DIV_ROUND_UP()
        osbdm_add_tms()
            queue_add_tail()
            LOG_ERROR()
            buf_set_buf()
        osbdm_add_scan()
            tap_get_state()
            osbdm_add_statemove()
            tap_set_end_state()
            tap_get_end_state()
            buf_set_u32()
        jtag_sleep()
        osbdm_add_runtest()
            osbdm_add_statemove()
            osbdm_add_stableclocks()
    osbdm_flush()
    queue_free()
        queue_drop_head()
            free()
        free()
    exit()
osbdm_init()
    osbdm_open()
        memset()
        jtag_libusb_open()
        libusb_claim_interface()
    LOG_ERROR()
    LOG_DEBUG()
    osbdm_send_and_recv()
osbdm_quit()
    jtag_libusb_close()
parport_read()
    ioctl()
    inb()
pcm_set_core_voltage_level()
pic32mx_auto_probe()
    pic32mx_probe()
        LOG_INFO()
        LOG_WARNING()
        virt2phys()
        target_read_u32()
        free()
        malloc()
pic32mx_erase()
    LOG_ERROR()
    virt2phys()
    LOG_DEBUG()
    pic32mx_nvm_exec()
        target_write_u32()
        pic32mx_wait_status_busy()
            pic32mx_get_flash_status()
                target_read_u32()
            LOG_DEBUG()
            alive_sleep()
    target_write_u32()
pic32mx_info()
    command_print_sameline()
pic32mx_protect()
    LOG_ERROR()
pic32mx_protect_check()
    LOG_ERROR()
    target_read_u32()
    virt2phys()
pic32mx_write()
    LOG_ERROR()
    LOG_DEBUG()
    LOG_WARNING()
    pic32mx_write_block()
        target_alloc_working_area()
        LOG_WARNING()
        target_buffer_set_u32_array()
        ARRAY_SIZE()
        target_write_buffer()
        target_alloc_working_area_try()
        target_free_working_area()
        init_reg_param()
        malloc()
        LOG_ERROR()
        memset()
        memcpy()
        buf_set_u32()
        virt2phys()
        target_run_algorithm()
        buf_get_u32()
        destroy_reg_param()
        free()
    memcpy()
    pic32mx_write_word()
        target_write_u32()
        virt2phys()
        pic32mx_nvm_exec()
poll_tff()
    SMI_READ_REG()
    timeval_ms()
    alive_sleep()
    LOG_ERROR()
poll_trace()
    jaylink_swo_read()
    LOG_ERROR()
    jaylink_strerror()
presto_adapter_khz()
presto_bitq_in()
presto_bitq_in_rdy()
presto_bitq_out()
    presto_sendbyte()
        presto_flush()
            LOG_DEBUG()
            presto_write()
                ftdi_write_data()
                LOG_ERROR()
                ftdi_get_error_string()
            presto_read()
                gettimeofday()
                timeval_add_time()
                ftdi_read_data()
                LOG_ERROR()
                ftdi_get_error_string()
                timeval_compare()
                LOG_WARNING()
    presto_tdi_flush()
        LOG_ERROR()
        presto_sendbyte()
presto_bitq_reset()
    presto_tdi_flush()
    presto_tck_idle()
        presto_sendbyte()
    presto_sendbyte()
presto_bitq_sleep()
    presto_tdi_flush()
    presto_tck_idle()
    presto_bitq_flush()
        presto_tdi_flush()
        presto_tck_idle()
        presto_sendbyte()
        presto_flush()
    jtag_sleep()
    presto_sendbyte()
presto_getbyte()
    presto_flush()
presto_jtag_init()
    adapter_get_required_serial()
    presto_open()
        presto_open_libftdi()
            LOG_DEBUG()
            ftdi_init()
            LOG_ERROR()
            ftdi_usb_open_desc()
            ftdi_usb_reset()
            ftdi_set_latency_timer()
            ftdi_tcioflush()
            presto_write()
            presto_read()
    presto_close()
        ftdi_write_data()
        ftdi_set_latency_timer()
        ftdi_usb_close()
        ftdi_deinit()
    LOG_ERROR()
    LOG_INFO()
presto_jtag_quit()
    bitq_cleanup()
    presto_close()
    LOG_INFO()
presto_jtag_speed()
    presto_jtag_speed_div()
    LOG_INFO()
psoc4_auto_probe()
    psoc4_probe()
        psoc4_get_family()
            target_read_memory()
            target_buffer_get_u32()
            LOG_ERROR()
        psoc4_family_by_id()
        LOG_ERROR()
        LOG_INFO()
        target_read_u32()
        LOG_DEBUG()
        snprintf()
        LOG_WARNING()
        psoc4_test_flash_wounding()
            target_read_u32()
        free()
        alloc_block_array()
psoc4_erase()
    LOG_INFO()
    psoc4_mass_erase()
        psoc4_flash_prepare()
            LOG_ERROR()
            psoc4_get_silicon_id()
            psoc4_sysreq()
            LOG_INFO()
        psoc4_sysreq()
    LOG_ERROR()
psoc4_protect()
    psoc4_flash_prepare()
    malloc()
    LOG_ERROR()
    memset()
    target_buffer_set_u32()
    psoc4_sysreq()
    free()
    psoc4_protect_check()
        target_read_memory()
psoc4_write()
    psoc4_flash_prepare()
    malloc()
    LOG_ERROR()
    memset()
    memcpy()
    LOG_DEBUG()
    target_buffer_set_u32()
    psoc4_sysreq()
    free()
psoc5lp_auto_probe()
    psoc5lp_probe()
        LOG_ERROR()
        psoc5lp_find_device()
            psoc5lp_get_device_id()
                target_read_u32()
            LOG_DEBUG()
            ARRAY_SIZE()
            LOG_ERROR()
        DIV_ROUND_UP()
        psoc5lp_spc_enable_clock()
            target_read_u8()
            LOG_ERROR()
            target_write_u8()
        psoc5lp_spc_get_temp()
            psoc5lp_spc_write_opcode()
                target_write_u8()
            target_write_u8()
            psoc5lp_spc_busy_wait_data()
                target_read_u8()
                timeval_ms()
                alive_sleep()
            target_read_u8()
            psoc5lp_spc_busy_wait_idle()
                target_read_u8()
                timeval_ms()
                alive_sleep()
        calloc()
        psoc5lp_spc_read_byte()
            psoc5lp_spc_write_opcode()
            target_write_u8()
            psoc5lp_spc_busy_wait_data()
            target_read_u8()
            psoc5lp_spc_busy_wait_idle()
        LOG_DEBUG()
psoc5lp_eeprom_auto_probe()
    psoc5lp_eeprom_probe()
        LOG_ERROR()
        psoc5lp_find_device()
        target_read_u32()
        target_write_u32()
        DIV_ROUND_UP()
        calloc()
psoc5lp_eeprom_erase()
    psoc5lp_spc_erase_sector()
        psoc5lp_spc_write_opcode()
        target_write_u8()
        psoc5lp_spc_busy_wait_idle()
psoc5lp_eeprom_get_info_command()
    psoc5lp_get_part_number()
        strcpy()
    command_print_sameline()
psoc5lp_eeprom_write()
    LOG_ERROR()
    psoc5lp_spc_get_temp()
    LOG_DEBUG()
    psoc5lp_spc_load_row()
        psoc5lp_spc_write_opcode()
        target_write_u8()
        psoc5lp_spc_busy_wait_idle()
    psoc5lp_spc_write_row()
        psoc5lp_spc_write_opcode()
        target_write_u8()
        psoc5lp_spc_busy_wait_idle()
    memcpy()
    memset()
psoc5lp_erase()
    LOG_DEBUG()
    LOG_WARNING()
    psoc5lp_spc_erase_sector()
psoc5lp_erase_check()
    LOG_ERROR()
    malloc()
    armv7m_blank_check_memory()
        target_alloc_working_area()
        target_write_buffer()
        target_get_working_area_avail()
        malloc()
        target_buffer_set_u32()
        LOG_DEBUG()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        ARRAY_SIZE()
        target_read_buffer()
        target_buffer_get_u32()
        LOG_INFO()
        destroy_reg_param()
        target_free_working_area()
        free()
    free()
psoc5lp_get_info_command()
    psoc5lp_get_part_number()
    command_print_sameline()
psoc5lp_nvl_auto_probe()
    psoc5lp_nvl_probe()
        LOG_ERROR()
        psoc5lp_find_device()
        calloc()
psoc5lp_nvl_erase()
    LOG_WARNING()
psoc5lp_nvl_erase_check()
psoc5lp_nvl_get_info_command()
    psoc5lp_get_part_number()
    command_print_sameline()
psoc5lp_nvl_write()
    LOG_ERROR()
    calloc()
    psoc5lp_nvl_read()
        psoc5lp_spc_enable_clock()
        psoc5lp_spc_read_byte()
    free()
    LOG_INFO()
    target_read_u8()
    target_write_u8()
    psoc5lp_spc_load_byte()
        psoc5lp_spc_write_opcode()
        target_write_u8()
        psoc5lp_spc_busy_wait_idle()
    psoc5lp_spc_read_volatile_byte()
        psoc5lp_spc_write_opcode()
        target_write_u8()
        psoc5lp_spc_busy_wait_data()
        target_read_u8()
        psoc5lp_spc_busy_wait_idle()
    psoc5lp_spc_write_user_nvl()
        psoc5lp_spc_write_opcode()
        target_write_u8()
        psoc5lp_spc_busy_wait_idle()
    target_call_reset_callbacks()
        LOG_DEBUG()
        nvp_value2name()
        list_for_each_entry()
    LOG_WARNING()
psoc5lp_protect_check()
    LOG_ERROR()
    DIV_ROUND_UP()
    psoc5lp_spc_read_hidden_row()
        psoc5lp_spc_write_opcode()
        target_write_u8()
        psoc5lp_spc_busy_wait_data()
        target_read_u8()
        psoc5lp_spc_busy_wait_idle()
    assert()
    LOG_DEBUG()
psoc5lp_write()
    LOG_ERROR()
    memset()
    psoc5lp_spc_get_temp()
    LOG_DEBUG()
    assert()
    target_get_working_area_avail()
    target_alloc_working_area()
    MIN()
    psoc5lp_spc_write_opcode_buffer()
    target_write_buffer()
    memcpy()
    target_write_u32()
    psoc5lp_spc_busy_wait_idle()
    target_free_working_area()
psoc6_auto_probe()
    psoc6_probe()
        target_read_u32()
        free()
        is_mflash_bank()
        is_wflash_bank()
        is_sflash_bank()
        LOG_ERROR()
        calloc()
psoc6_get_info()
    get_silicon_id()
        sromalgo_prepare()
            target_write_u32()
            target_alloc_working_area()
            init_reg_param()
            buf_set_u32()
            target_start_algorithm()
            destroy_reg_param()
            target_free_working_area()
        exit()
        call_sromapi()
            ipc_acquire()
                timeout_init()
                    timeval_ms()
                timeout_expired()
                    timeval_ms()
                keep_alive()
                target_write_u32()
                MEM_IPC_ACQUIRE()
                LOG_ERROR()
                target_read_u32()
                ipc_poll_lock_stat()
                    timeout_init()
                    timeout_expired()
                    keep_alive()
                    target_read_u32()
                    MEM_IPC_LOCK_STATUS()
                    LOG_ERROR()
                    LOG_WARNING()
            target_write_u32()
            MEM_IPC_DATA()
            MEM_IPC_INTR_MASK()
            MEM_IPC_NOTIFY()
            ipc_poll_lock_stat()
            target_read_u32()
            LOG_ERROR()
        sromalgo_release()
            target_halt()
            target_wait_algorithm()
            target_free_working_area()
    command_print_sameline()
    protection_to_str()
psoc6_program()
    is_sflash_bank()
    sromalgo_prepare()
    exit()
    MIN()
    memset()
    memcpy()
    psoc6_program_row()
        LOG_DEBUG()
        target_alloc_working_area()
        exit()
        target_write_u32()
        target_write_buffer()
        call_sromapi()
        target_free_working_area()
    LOG_ERROR()
    sromalgo_release()
psoc6_protect()
    LOG_WARNING()
psoc6_protect_check()
    get_silicon_id()
qn908x_auto_probe()
    LOG_DEBUG()
    qn908x_probe()
        target_read_memory()
        crc32_le()
        target_read_u32()
        is_flash_protected()
            target_read_u32()
        LOG_ERROR()
        target_buffer_get_u32()
        alloc_block_array()
        qn908x_init_flash()
            target_read_u32()
            LOG_DEBUG()
            target_write_u32()
            QN908X_FMC_TIME_CTRL_TIME_BASE()
            QN908X_FMC_TIME_CTRL_PRGM_CYCLE()
            qn908x_load_lock_stat()
                target_write_u32()
                target_read_u32()
        LOG_INFO()
qn908x_get_info()
    target_read_u32()
    command_print_sameline()
    target_read_memory()
qn908x_protect()
    LOG_ERROR()
    qn908x_read_page_lock()
        LOG_ERROR()
        target_read_memory()
        LOG_DEBUG()
    LOG_WARNING()
    qn908x_erase()
        qn908x_probe()
        qn908x_setup_erase()
            LOG_ERROR()
            qn908x_update_reg()
                target_read_u32()
                LOG_DEBUG()
                target_write_u32()
            QN908X_FMC_SMART_CTRL_MAX_ERASE()
            QN908X_FMC_SMART_CTRL_MAX_WRITE()
            target_write_u32()
            qn908x_wait_for_idle()
                timeval_ms()
                qn908x_busy_check()
                    target_read_u32()
                LOG_ERROR()
        LOG_DEBUG()
        target_write_u32()
        BIT()
        qn908x_wait_for_idle()
        qn908x_status_check()
            target_read_u32()
            LOG_ERROR()
    LOG_DEBUG()
    qn908x_write()
        LOG_ERROR()
        assert()
        buf_get_u32()
        LOG_DEBUG()
        LOG_WARNING()
        qn908x_wait_for_idle()
        QN908X_FMC_SMART_CTRL_MAX_WRITE()
        target_write_u32()
        target_write_buffer()
        keep_alive()
        qn908x_status_check()
    qn908x_load_lock_stat()
qn908x_protect_check()
    qn908x_read_page_lock()
quark_d20xx_init_target()
    lakemont_init_target()
        lakemont_build_reg_cache()
            target_to_x86_32()
            ARRAY_SIZE()
            register_get_last_cache_p()
            malloc()
            calloc()
            free()
            LOG_ERROR()
quark_d20xx_reset_deassert()
    check_not_halted()
    lakemont_update_after_probemode_entry()
    LOG_ERROR()
    lakemont_resume()
quark_d20xx_target_create()
    calloc()
    LOG_ERROR()
    x86_32_common_init_arch_info()
        calloc()
        LOG_ERROR()
        read_hw_reg_to_cache()
            target_to_x86_32()
            check_not_halted()
            LOG_ERROR()
            LOG_DEBUG()
        write_hw_reg_from_cache()
            target_to_x86_32()
            check_not_halted()
            LOG_ERROR()
            LOG_DEBUG()
            buf_get_u32()
    lakemont_init_arch_info()
        submit_instruction()
            submit_instruction_pir()
            LOG_ERROR()
        transaction_status()
            get_tapstatus()
            LOG_ERROR()
        read_hw_reg()
        write_hw_reg()
        sw_bpts_supported()
            get_tapstatus()
        get_num_user_regs()
            target_to_x86_32()
        is_paging_enabled()
            target_to_x86_32()
            I()
        disable_paging()
            target_to_x86_32()
            I()
            LOG_ERROR()
        enable_paging()
            target_to_x86_32()
            I()
            LOG_ERROR()
quark_x10xx_target_create()
    calloc()
    x86_32_common_init_arch_info()
    lakemont_init_arch_info()
register_get()
    RISCV_INFO()
    LOG_ERROR()
    gdb_regno_name()
    riscv_get_register()
    buf_set_u64()
    gdb_regno_cacheable()
    buf_to_hex_str()
    LOG_DEBUG()
    target_name()
    free()
register_get_dummy_core_reg()
register_set()
    RISCV_INFO()
    buf_to_hex_str()
    LOG_DEBUG()
    target_name()
    free()
    memcpy()
    DIV_ROUND_UP()
    gdb_regno_cacheable()
    riscv_enumerate_triggers()
    LOG_ERROR()
    gdb_regno_name()
    buf_get_u64()
    riscv_set_register()
register_set_dummy_core_reg()
riot_create()
    strcmp()
    LOG_ERROR()
    target_to_armv7m()
    is_armv7m()
riot_detect_rtos()
riot_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
    LOG_ERROR()
riot_get_thread_reg_list()
    target_read_u32()
    LOG_ERROR()
    rtos_generic_stack_read()
riot_update_threads()
    LOG_ERROR()
    rtos_free_threadlist()
    target_read_u16()
    target_read_u8()
    calloc()
    target_read_u32()
    strdup()
    target_read_buffer()
riscv011_resume()
    RISCV_INFO()
    jtag_add_ir_scan()
    resume()
        LOG_ERROR()
        execute_resume()
            get_info()
            LOG_DEBUG()
            maybe_write_tselect()
            cache_set_load()
            cache_set32()
            csrw()
            cache_set_jump()
            cache_set()
            cache_write()
            buf_get_u64()
            riscv_xlen()
            set_field()
            dram_write32()
            lw()
            fence_i()
            dram_write_jump()
            dbus_write()
            dram_address()
            cache_invalidate()
            wait_for_debugint_clear()
            LOG_ERROR()
            register_cache_invalidate()
riscv_add_breakpoint()
    LOG_DEBUG()
    assert()
    LOG_ERROR()
    riscv_read_by_any_size()
        assert()
        read_by_given_size()
            assert()
            target_read_memory()
            memcpy()
    buf_set_u32()
    ebreak()
    ebreak_c()
    riscv_write_by_any_size()
        assert()
        write_by_given_size()
            assert()
            target_write_memory()
            target_read_memory()
            memcpy()
    trigger_from_breakpoint()
    add_trigger()
        RISCV_INFO()
        riscv_enumerate_triggers()
        riscv_get_register()
        riscv_set_register()
        get_field()
        MCONTROL_TYPE()
        riscv_xlen()
        maybe_add_trigger_t1()
            RISCV_INFO()
            set_field()
            BIT()
            riscv_set_register()
            riscv_get_register()
            LOG_DEBUG()
        maybe_add_trigger_t2()
            RISCV_INFO()
            MCONTROL_DMODE()
            riscv_xlen()
            set_field()
            riscv_set_register()
            riscv_get_register()
            LOG_DEBUG()
        maybe_add_trigger_t6()
            RISCV_INFO()
            MCONTROL_DMODE()
            riscv_xlen()
            set_field()
            riscv_set_register()
            riscv_get_register()
            LOG_DEBUG()
        LOG_DEBUG()
        LOG_ERROR()
    LOG_INFO()
riscv_arch_state()
    get_target_type()
riscv_assert_reset()
    LOG_DEBUG()
    get_target_type()
    riscv_invalidate_register_cache()
riscv_checksum_memory()
    LOG_DEBUG()
    riscv_xlen()
    target_alloc_working_area()
    target_free_working_area()
    target_write_buffer()
    LOG_ERROR()
    init_reg_param()
    buf_set_u64()
    target_run_algorithm()
    buf_get_u32()
    destroy_reg_param()
riscv_create_target()
    LOG_DEBUG()
    calloc()
    LOG_ERROR()
    riscv_info_init()
        memset()
        INIT_LIST_HEAD()
riscv_data_bits()
    RISCV_INFO()
    riscv_xlen()
riscv_deassert_reset()
    LOG_DEBUG()
    get_target_type()
riscv_deinit_target()
    LOG_DEBUG()
    get_target_type()
    riscv_free_registers()
    list_for_each_entry_safe()
    free()
riscv_examine()
    LOG_DEBUG()
    target_was_examined()
    RISCV_INFO()
    dtmcontrol_scan()
        dtmcontrol_scan_via_bscan()
        buf_set_u32()
        jtag_add_ir_scan()
        jtag_add_dr_scan()
        jtag_execute_queue()
        LOG_ERROR()
        buf_get_u32()
        LOG_DEBUG()
    get_field()
    get_target_type()
riscv_get_gdb_arch()
    riscv_xlen()
    LOG_ERROR()
riscv_get_gdb_reg_list()
    riscv_get_gdb_reg_list_internal()
        RISCV_INFO()
        LOG_DEBUG()
        target_name()
        LOG_ERROR()
        riscv_select_current_hart()
        calloc()
riscv_get_gdb_reg_list_noread()
    riscv_get_gdb_reg_list_internal()
riscv_hit_watchpoint()
    LOG_DEBUG()
    riscv_current_hartid()
    riscv_get_register()
    target_read_buffer()
    LOG_ERROR()
riscv_init_target()
    LOG_DEBUG()
    RISCV_INFO()
    assert()
    h_u32_to_le()
    riscv_semihosting_init()
        semihosting_common_init()
        riscv_semihosting_setup()
            LOG_DEBUG()
            target_name()
            clock()
        riscv_semihosting_post_result()
            LOG_DEBUG()
            riscv_set_register()
riscv_read_memory()
    LOG_WARNING()
    riscv_select_current_hart()
    RISCV_INFO()
riscv_remove_breakpoint()
    riscv_write_by_any_size()
    LOG_ERROR()
    trigger_from_breakpoint()
    remove_trigger()
        RISCV_INFO()
        riscv_enumerate_triggers()
        LOG_ERROR()
        LOG_DEBUG()
        riscv_get_register()
        riscv_set_register()
    LOG_INFO()
riscv_run_algorithm()
    RISCV_INFO()
    LOG_ERROR()
    LOG_TARGET_ERROR()
    register_get_by_name()
    buf_get_u64()
    LOG_DEBUG()
    buf_set_u64()
    set_field()
    riscv_resume()
        LOG_DEBUG()
        foreach_smp_target_direction()
        resume_prep()
            RISCV_INFO()
            LOG_DEBUG()
            riscv_set_register()
            disable_triggers()
                RISCV_INFO()
                LOG_DEBUG()
                riscv_enumerate_triggers()
                riscv_get_register()
                riscv_set_register()
                MCONTROL_DMODE()
                riscv_xlen()
                riscv_remove_watchpoint()
                    LOG_DEBUG()
                    trigger_from_watchpoint()
                    remove_trigger()
            old_or_new_riscv_step()
                RISCV_INFO()
                LOG_DEBUG()
                oldriscv_step()
                    get_target_type()
                riscv_openocd_step()
                    LOG_DEBUG()
                    riscv_set_register()
                    disable_triggers()
                    riscv_step_rtos_hart()
                        RISCV_INFO()
                        riscv_select_current_hart()
                        LOG_DEBUG()
                        target_name()
                        riscv_is_halted()
                        LOG_ERROR()
                        riscv_invalidate_register_cache()
                    LOG_ERROR()
                    register_cache_invalidate()
                    enable_triggers()
                        RISCV_INFO()
                        riscv_get_register()
                        riscv_set_register()
                        LOG_DEBUG()
                        riscv_add_watchpoint()
                            trigger_from_watchpoint()
                            add_trigger()
                    target_call_event_callbacks()
            enable_triggers()
            riscv_resume_prep_all_harts()
                RISCV_INFO()
                LOG_DEBUG()
                target_name()
                riscv_select_current_hart()
                riscv_is_halted()
        riscv_info()
        resume_go()
            RISCV_INFO()
            get_target_type()
            riscv_resume_go_all_harts()
                RISCV_INFO()
                LOG_DEBUG()
                target_name()
                riscv_select_current_hart()
                riscv_is_halted()
                riscv_invalidate_register_cache()
        resume_finish()
            register_cache_invalidate()
            target_call_event_callbacks()
    timeval_ms()
    riscv_halt()
    old_or_new_riscv_poll()
        RISCV_INFO()
        oldriscv_poll()
            get_target_type()
        riscv_openocd_poll()
            LOG_DEBUG()
            foreach_smp_target()
            riscv_info()
            riscv_poll_hart()
                RISCV_INFO()
                riscv_set_current_hartid()
                LOG_DEBUG()
                halted()
                riscv_is_halted()
            riscv_halt_reason()
                RISCV_INFO()
                riscv_set_current_hartid()
                riscv_is_halted()
                LOG_ERROR()
            set_debug_reason()
                LOG_DEBUG()
                target_name()
            riscv_semihosting()
            LOG_WARNING()
            riscv_halt()
            riscv_resume()
            sample_memory()
                RISCV_INFO()
                LOG_DEBUG()
                timeval_ms()
                riscv_sample_buf_maybe_add_timestamp()
                    RISCV_INFO()
                    timeval_ms()
                exit()
                ARRAY_SIZE()
                assert()
                riscv_read_phys_memory()
                    RISCV_INFO()
                    riscv_select_current_hart()
                LOG_INFO()
            riscv_current_hartid()
            target_call_event_callbacks()
    ARRAY_SIZE()
    riscv_get_register()
    gdb_regno_name()
    riscv_select_current_hart()
riscv_target_resume()
    riscv_resume()
riscv_virt2phys()
    riscv_mmu()
        riscv_get_register()
        LOG_ERROR()
        get_field()
        LOG_DEBUG()
        RISCV_SATP_MODE()
        riscv_xlen()
    riscv_address_translate()
        RISCV_INFO()
        riscv_get_register()
        riscv_xlen()
        get_field()
        RISCV_SATP_MODE()
        LOG_ERROR()
        LOG_DEBUG()
        assert()
        RISCV_SATP_PPN()
        buf_get_u32()
        buf_get_u64()
riscv_write_memory()
    LOG_WARNING()
    riscv_select_current_hart()
    get_target_type()
riscv_write_phys_memory()
    riscv_select_current_hart()
    get_target_type()
riscv_xlen_nonconst()
    riscv_xlen()
rlink_execute_queue()
    ep1_generic_commandl()
        va_start()
        va_arg()
        memset()
        jtag_libusb_bulk_write()
    tap_state_queue_run()
        dtc_queue_run_if_full()
            dtc_queue_run()
                assert()
                dtc_run_download()
                    LOG_DEBUG()
                    jtag_libusb_bulk_write()
                    ep1_generic_commandl()
                    jtag_libusb_bulk_read()
                    LOG_ERROR()
                LOG_ERROR()
                libusb_error_name()
                exit()
                jtag_read_buffer()
                free()
        DTC_CMD_SHIFT_TMS_BYTES()
        DTC_CMD_SHIFT_TMS_BITS()
        tap_state_queue_init()
    dtc_queue_run()
    LOG_DEBUG_IO()
    jtag_get_reset_config()
    tap_set_state()
    rlink_reset()
        ep1_generic_commandl()
        LOG_ERROR()
        libusb_error_name()
        exit()
        jtag_libusb_bulk_read()
    rlink_end_state()
        tap_is_state_stable()
        tap_set_end_state()
        LOG_ERROR()
        exit()
    rlink_runtest()
        tap_get_end_state()
        tap_get_state()
        rlink_end_state()
        rlink_state_move()
            tap_get_tms_path()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path_len()
            tap_state_queue_append()
                tap_state_queue_run()
            tap_set_state()
        tap_state_queue_append()
    rlink_state_move()
    rlink_path_move()
        tap_state_transition()
        tap_get_state()
        LOG_ERROR()
        tap_state_name()
        exit()
        tap_state_queue_append()
        tap_set_state()
        tap_set_end_state()
    jtag_build_buffer()
    jtag_scan_type()
    rlink_scan()
        LOG_ERROR()
        exit()
        tap_get_state()
        tap_get_end_state()
        rlink_end_state()
        rlink_state_move()
        tap_state_queue_run()
        printf()
        dtc_queue_run_if_full()
        DTC_CMD_SHIFT_TDI_BYTES()
        dtc_queue_enqueue_reply()
            malloc()
        strerror()
        DTC_CMD_SHIFT_TDO_BYTES()
        DTC_CMD_SHIFT_TDIO_BYTES()
        DTC_CMD_SHIFT_TDIO_BITS()
        DTC_CMD_SHIFT_TMS_TDI_BIT_PAIR()
        tap_state_queue_append()
        tap_set_state()
    jtag_sleep()
    LOG_ERROR()
    exit()
rlink_init()
    jtag_libusb_open()
    libusb_get_device()
    libusb_get_device_descriptor()
    LOG_ERROR()
    libusb_get_config_descriptor()
    LOG_DEBUG()
    libusb_set_configuration()
    libusb_claim_interface()
    libusb_error_name()
    libusb_detach_kernel_driver()
    libusb_set_interface_alt_setting()
    ep1_generic_commandl()
    jtag_libusb_bulk_read()
    LOG_WARNING()
    tap_state_queue_init()
    dtc_queue_init()
    rlink_reset()
rlink_khz()
    LOG_ERROR()
    LOG_WARNING()
rlink_quit()
    ep1_generic_commandl()
    libusb_release_interface()
    libusb_close()
rlink_speed()
    dtc_load_from_buffer()
        ep1_generic_commandl()
        LOG_ERROR()
        exit()
        strncmp()
        ep1_memory_write()
    LOG_ERROR()
    exit()
    dtc_start_download()
        ep1_generic_commandl()
        jtag_libusb_bulk_read()
    libusb_error_name()
rlink_speed_div()
    LOG_ERROR()
rp2040_flash_auto_probe()
    rp2040_flash_probe()
        LOG_ERROR()
        rp2040_lookup_symbol()
            target_read_u32()
            LOG_ERROR()
            target_read_u16()
        LOG_DEBUG()
        rp2040_stack_grab_and_prep()
            target_alloc_working_area()
            LOG_ERROR()
            LOG_DEBUG()
            rp2040_call_rom_func()
                assert()
                ARRAY_SIZE()
                LOG_ERROR()
                LOG_TARGET_DEBUG()
                init_reg_param()
                buf_set_u32()
                LOG_DEBUG()
                buf_get_u32()
                target_run_algorithm()
                destroy_reg_param()
        rp2040_spi_read_flash_id()
            rp2040_ssel_active()
                target_read_u32()
                target_write_u32()
            target_write_u32()
            LOG_ERROR()
        rp2040_finalize_stack_free()
            LOG_DEBUG()
            rp2040_call_rom_func()
            LOG_ERROR()
            target_free_working_area()
        LOG_INFO()
        alloc_block_array()
rp2040_flash_erase()
    LOG_ERROR()
    LOG_DEBUG()
    rp2040_stack_grab_and_prep()
    rp2040_call_rom_func()
    ARRAY_SIZE()
    rp2040_finalize_stack_free()
rp2040_flash_free_driver_priv()
    free()
rp2040_flash_write()
    LOG_DEBUG()
    LOG_ERROR()
    rp2040_stack_grab_and_prep()
    target_get_working_area_avail()
    MIN()
    MAX()
    target_alloc_working_area()
    target_write_buffer()
    rp2040_call_rom_func()
    ARRAY_SIZE()
    target_free_working_area()
    rp2040_finalize_stack_free()
rpchf_read()
    LOG_DEBUG()
    LOG_ERROR()
    target_read_memory()
rpchf_write()
    LOG_ERROR()
    LOG_INFO()
    cfi_target_read_memory()
    cfi_write_word()
    rpchf_write_words()
        rpchf_spansion_write_words()
            LOG_ERROR()
            cfi_spansion_unlock_seq()
            cfi_send_command()
            cfi_flash_address()
            rpc_hf_xfer()
            cfi_spansion_wait_status_busy()
    cfi_reset()
rshim_ap_q_abort()
rshim_ap_q_read()
    is_adiv6()
    LOG_ERROR()
    ap_addr_2_tile()
    coresight_read()
        rshim_read()
        rshim_write()
        RSH_CS_SET_FIELD()
        LOG_ERROR()
        RSH_CS_GET_FIELD()
    LOG_INFO()
rshim_ap_q_write()
    is_adiv6()
    LOG_ERROR()
    ap_addr_2_tile()
    coresight_write()
        rshim_read()
        rshim_write()
        RSH_CS_SET_FIELD()
        LOG_ERROR()
        RSH_CS_GET_FIELD()
rshim_connect()
    open()
    LOG_ERROR()
    rshim_read()
    rshim_dev_read()
        pread()
        ioctl()
    rshim_write()
    rshim_dev_write()
        pwrite()
        ioctl()
rshim_dap_init()
rshim_dap_khz()
rshim_dap_quit()
rshim_dap_reset()
rshim_dap_speed()
rshim_dap_speed_div()
rshim_disconnect()
    close()
rshim_dp_q_read()
rshim_dp_q_write()
    LOG_INFO()
rshim_dp_run()
rsl10_auto_probe()
    rsl10_bank_is_probed()
        assert()
    rsl10_probe()
        rsl10_check_device()
            target_read_u32()
            LOG_ERROR()
        free()
        alloc_block_array()
rsl10_free_driver_priv()
    free()
rsl10_protect_check()
    assert()
    target_read_u32()
    test_bit()
rtkernel_create()
    ARRAY_SIZE()
    strcmp()
    LOG_ERROR()
rtkernel_detect_rtos()
rtkernel_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
rtkernel_get_thread_reg_list()
    target_read_u32()
    LOG_ERROR()
    LOG_DEBUG()
    target_to_armv7m()
    is_armv7m()
    rtos_generic_stack_read()
    LOG_OUTPUT()
rtkernel_update_threads()
    rtos_free_threadlist()
    LOG_ERROR()
    target_read_u32()
    LOG_DEBUG()
    rtkernel_verify_task()
        target_read_u32()
        LOG_ERROR()
    rtkernel_add_task()
        realloc_preserve()
            malloc()
            memcpy()
            MIN()
            free()
        LOG_ERROR()
        target_read_u32()
        target_read_buffer()
        LOG_DEBUG()
        strdup()
        target_read_u16()
        strcat()
rtos_riot_cortex_m_stack_align()
    rtos_cortex_m_stack_align()
        le_to_h_u32()
        be_to_h_u32()
        LOG_DEBUG()
rtos_standard_cortex_m3_stack_align()
    rtos_cortex_m_stack_align()
rtos_standard_cortex_m4f_fpu_stack_align()
    rtos_cortex_m_stack_align()
rtos_standard_cortex_m4f_stack_align()
    rtos_cortex_m_stack_align()
rtt_connection_closed()
    rtt_unregister_sink()
        LOG_DEBUG()
    read_callback()
        connection_write()
        LOG_ERROR()
    LOG_DEBUG()
rtt_input()
    connection_read()
    LOG_ERROR()
    strerror()
    rtt_write_channel()
        LOG_WARNING()
rtt_new_connection()
    LOG_DEBUG()
    rtt_register_sink()
        adjust_sink_list()
            realloc()
        LOG_DEBUG()
        malloc()
    read_callback()
rtt_started()
s3c2410_init()
    target_write_u32()
    S3C2410_NFCONF_TACLS()
    S3C2410_NFCONF_TWRPH0()
    S3C2410_NFCONF_TWRPH1()
s3c2410_nand_ready()
    LOG_ERROR()
    target_read_u8()
    alive_sleep()
s3c2410_read_data()
    LOG_ERROR()
    target_read_u8()
s3c2410_write_data()
    LOG_ERROR()
    target_write_u32()
s3c2412_init()
    target_write_u32()
    S3C2440_NFCONF_TACLS()
    S3C2440_NFCONF_TWRPH0()
    S3C2440_NFCONF_TWRPH1()
s3c2440_init()
    target_write_u32()
    S3C2440_NFCONF_TACLS()
    S3C2440_NFCONF_TWRPH0()
    S3C2440_NFCONF_TWRPH1()
s3c2440_nand_ready()
    LOG_ERROR()
    target_read_u8()
    alive_sleep()
s3c2440_read_block_data()
    LOG_INFO()
    LOG_ERROR()
    target_read_u32()
    target_read_u8()
s3c2440_write_block_data()
    LOG_ERROR()
    le_to_h_u32()
    target_write_u32()
    target_write_u8()
s3c2443_init()
    target_write_u32()
    S3C2440_NFCONF_TACLS()
    S3C2440_NFCONF_TWRPH0()
    S3C2440_NFCONF_TWRPH1()
s3c24xx_address()
    LOG_ERROR()
    target_write_u16()
s3c24xx_command()
    LOG_ERROR()
    target_write_u16()
s3c24xx_read_data()
    LOG_ERROR()
    target_read_u8()
s3c24xx_reset()
    LOG_ERROR()
    target_write_u32()
s3c24xx_write_data()
    LOG_ERROR()
    target_write_u8()
s3c6400_init()
    target_write_u32()
    S3C2440_NFCONF_TACLS()
    S3C2440_NFCONF_TWRPH0()
    S3C2440_NFCONF_TWRPH1()
sam3_erase()
    LOG_DEBUG()
    LOG_ERROR()
    sam3_auto_probe()
    get_sam3_bank_private()
    flashd_erase_entire_bank()
        LOG_DEBUG()
        efc_perform_command()
            efc_start_command()
                LOG_ERROR()
                efc_get_status()
                    target_read_u32()
                    LOG_DEBUG()
                efc_start_command()
                LOG_DEBUG()
                target_write_u32()
            timeval_ms()
            efc_get_status()
            LOG_ERROR()
    LOG_INFO()
sam3_explain_ckgr_mcfr()
    sam3_reg_fieldname()
        LOG_USER_N()
    LOG_USER()
sam3_explain_ckgr_mor()
    sam3_reg_fieldname()
    LOG_USER()
sam3_explain_ckgr_plla()
    sam3_reg_fieldname()
    LOG_USER_N()
    LOG_USER()
sam3_explain_mckr()
    sam3_reg_fieldname()
    assert()
    LOG_USER()
sam3_free_driver_priv()
    free()
sam3_probe()
sam3_protect()
    LOG_DEBUG()
    LOG_ERROR()
    get_sam3_bank_private()
    flashd_lock()
        efc_perform_command()
    flashd_unlock()
        efc_perform_command()
sam3_write()
    LOG_ERROR()
    get_sam3_bank_private()
    malloc()
    LOG_DEBUG()
    sam3_page_read()
        target_read_memory()
        LOG_ERROR()
    memcpy()
    sam3_page_write()
        target_read_u32()
        LOG_DEBUG()
        target_write_u32()
        target_write_memory()
        LOG_ERROR()
        efc_perform_command()
    assert()
    free()
sam4_erase()
    LOG_DEBUG()
    LOG_ERROR()
    sam4_auto_probe()
        get_sam4_bank_private()
        sam4_probe()
            LOG_DEBUG()
            LOG_ERROR()
            get_sam4_bank_private()
            sam4_read_all_regs()
                sam4_read_this_reg()
                    sam4_get_reg()
                        LOG_ERROR()
                    target_read_u32()
                    LOG_ERROR()
                sam4_get_reg_ptr()
                LOG_ERROR()
            sam4_get_info()
                sam4_read_all_regs()
                LOG_DEBUG()
                sam4_get_reg_ptr()
                LOG_USER()
            sam4_get_details()
                LOG_DEBUG()
                LOG_ERROR()
                LOG_INFO()
                sam4_explain_chipid_cidr()
                    sam4_reg_fieldname()
                        LOG_USER_N()
                    LOG_USER_N()
                    LOG_USER()
                memcpy()
            calloc()
            sam4_protect_check()
                LOG_DEBUG()
                LOG_ERROR()
                get_sam4_bank_private()
                flashd_get_lock_bits()
                    LOG_DEBUG()
                    efc_perform_command()
                        efc_start_command()
                            LOG_ERROR()
                            efc_get_status()
                                target_read_u32()
                                LOG_DEBUG()
                            efc_start_command()
                            LOG_DEBUG()
                            target_write_u32()
                        timeval_ms()
                        efc_get_status()
                        LOG_ERROR()
                    efc_get_result()
                        target_read_u32()
                        LOG_DEBUG()
            flashd_read_uid()
                LOG_DEBUG()
                efc_start_command()
                target_read_u32()
                efc_perform_command()
    get_sam4_bank_private()
    flashd_erase_entire_bank()
        LOG_DEBUG()
        efc_perform_command()
    LOG_INFO()
    flashd_erase_pages()
        LOG_DEBUG()
        efc_perform_command()
sam4_explain_ckgr_mcfr()
    sam4_reg_fieldname()
    LOG_USER()
sam4_explain_ckgr_mor()
    sam4_reg_fieldname()
    LOG_USER()
sam4_explain_ckgr_plla()
    sam4_reg_fieldname()
    LOG_USER_N()
    LOG_USER()
sam4_explain_mckr()
    sam4_reg_fieldname()
    assert()
    LOG_USER()
sam4_free_driver_priv()
    free()
sam4_info()
    get_sam4_bank_private()
    command_print_sameline()
sam4_protect()
    LOG_DEBUG()
    LOG_ERROR()
    get_sam4_bank_private()
    flashd_lock()
        efc_perform_command()
    flashd_unlock()
        efc_perform_command()
sam4_write()
    LOG_ERROR()
    get_sam4_bank_private()
    malloc()
    sam4_set_wait()
        target_read_u32()
        LOG_ERROR()
        LOG_DEBUG()
        target_write_u32()
    LOG_DEBUG()
    sam4_page_read()
        target_read_memory()
        LOG_ERROR()
    memcpy()
    sam4_page_write()
        LOG_DEBUG()
        target_write_memory()
        LOG_ERROR()
        efc_perform_command()
    assert()
    free()
sam4l_erase()
    LOG_ERROR()
    sam4l_probe()
        target_read_u32()
        LOG_ERROR()
        sam4l_find_chip_name()
            ARRAY_SIZE()
        assert()
        calloc()
        LOG_INFO()
    LOG_DEBUG()
    sam4l_flash_command()
        sam4l_flash_wait_until_ready()
            target_read_u32()
        target_read_u32()
        target_write_u32()
        sam4l_flash_check_error()
            target_read_u32()
        LOG_ERROR()
    sam4l_check_page_erased()
        sam4l_flash_command()
        LOG_ERROR()
        target_read_u32()
sam4l_protect()
    LOG_ERROR()
    sam4l_probe()
    sam4l_flash_command()
sam4l_protect_check()
    LOG_ERROR()
    sam4l_probe()
    target_read_u32()
sam4l_write()
    LOG_DEBUG()
    LOG_ERROR()
    sam4l_probe()
    sam4l_write_page_partial()
        malloc()
        LOG_DEBUG()
        assert()
        target_read_memory()
        free()
        memcpy()
        sam4l_write_page()
            LOG_DEBUG()
            sam4l_flash_command()
            LOG_ERROR()
            target_write_memory()
    assert()
samd_erase()
    LOG_ERROR()
    samd_probe()
        target_read_u32()
        LOG_ERROR()
        samd_find_part()
            SAMD_GET_DEVSEL()
            samd_find_family()
                SAMD_GET_PROCESSOR()
                SAMD_GET_FAMILY()
                SAMD_GET_SERIES()
                ARRAY_SIZE()
        samd_get_flash_page_info()
            target_read_u32()
            LOG_ERROR()
        LOG_WARNING()
        alloc_block_array()
        samd_protect_check()
            target_read_u16()
        LOG_INFO()
    samd_erase_row()
        target_write_u32()
        samd_issue_nvmctrl_command()
            LOG_ERROR()
            target_write_u32()
            SAMD_NVM_CMD()
            samd_check_error()
                timeval_ms()
                target_read_u8()
                LOG_ERROR()
                keep_alive()
                target_read_u16()
                target_write_u16()
        LOG_ERROR()
samd_protect()
    LOG_ERROR()
    target_write_u32()
    exit()
    samd_issue_nvmctrl_command()
    samd_modify_user_row()
        samd_modify_user_row_masked()
            samd_get_flash_page_info()
            LOG_ERROR()
            assert()
            target_read_memory()
            read_userrow()
                target_read_memory()
                target_buffer_get_u64()
            samd_erase_row()
            target_buffer_set_u64()
            target_write_memory()
            target_read_u32()
            samd_issue_nvmctrl_command()
            samd_check_error()
    LOG_WARNING()
    samd_protect_check()
samd_write()
    LOG_ERROR()
    samd_probe()
    target_read_u32()
    samd_issue_nvmctrl_command()
    malloc()
    memset()
    memcpy()
    assert()
    target_write_memory()
    usleep()
    samd_check_error()
    free()
same5_erase()
    LOG_ERROR()
    same5_erase_block()
        target_write_u32()
        same5_issue_nvmctrl_command()
            LOG_ERROR()
            target_write_u32()
            SAMD_NVM_CMD()
            same5_wait_and_check_error()
                timeval_ms()
                target_read_u16()
                LOG_ERROR()
                keep_alive()
                target_write_u16()
        LOG_ERROR()
same5_probe()
    target_read_u32()
    LOG_ERROR()
    samd_find_part()
        SAMD_GET_DEVSEL()
        samd_find_family()
            SAMD_GET_PROCESSOR()
            SAMD_GET_FAMILY()
            SAMD_GET_SERIES()
            ARRAY_SIZE()
    samd_get_flash_page_info()
        target_read_u32()
        LOG_ERROR()
    LOG_WARNING()
    alloc_block_array()
    same5_protect_check()
        target_read_u32()
    LOG_INFO()
same5_protect()
    LOG_ERROR()
    target_write_u32()
    exit()
    same5_issue_nvmctrl_command()
    buf_set_u32()
    same5_modify_user_row_masked()
        samd_get_flash_page_info()
        LOG_ERROR()
        assert()
        target_read_memory()
        same5_pre_write_check()
            LOG_ERROR()
            target_read_u32()
        same5_erase_block()
        target_write_memory()
        same5_issue_nvmctrl_command()
    LOG_WARNING()
    same5_protect_check()
same5_write()
    same5_pre_write_check()
    same5_issue_nvmctrl_command()
    LOG_ERROR()
    malloc()
    memset()
    memcpy()
    assert()
    target_write_memory()
    free()
samv_erase()
    LOG_ERROR()
    samv_auto_probe()
        samv_probe()
            samv_get_device_id()
                target_read_u32()
            LOG_INFO()
            LOG_ERROR()
            calloc()
            samv_protect_check()
                samv_efc_perform_command()
                    samv_efc_start_command()
                        samv_efc_get_status()
                            target_read_u32()
                        LOG_ERROR()
                        LOG_DEBUG()
                        target_write_u32()
                    timeval_ms()
                    samv_efc_get_status()
                    LOG_ERROR()
                samv_efc_get_result()
                    target_read_u32()
    samv_efc_perform_command()
    LOG_INFO()
    samv_erase_pages()
        samv_efc_perform_command()
samv_get_info()
    samv_probe()
    command_print_sameline()
samv_protect()
    LOG_ERROR()
    samv_flash_lock()
        samv_efc_perform_command()
    samv_flash_unlock()
        samv_efc_perform_command()
samv_write()
    LOG_ERROR()
    LOG_DEBUG()
    samv_page_read()
        target_read_memory()
        LOG_ERROR()
    memcpy()
    samv_page_write()
        LOG_DEBUG()
        target_write_memory()
        LOG_ERROR()
        samv_efc_perform_command()
    assert()
semihosting_service_connection_closed_handler()
    free()
semihosting_service_input_handler()
    connection_read()
    LOG_ERROR()
    strerror()
semihosting_service_new_connection_handler()
sh_qspi_auto_probe()
    sh_qspi_probe()
        free()
        LOG_ERROR()
        LOG_DEBUG()
        sh_qspi_upload_helper()
            target_free_working_area()
            target_alloc_working_area()
            LOG_WARNING()
            target_write_buffer()
            target_alloc_working_area_try()
        sh_qspi_init()
            target_write_u8()
            target_write_u16()
            target_read_u8()
        read_flash_id()
            LOG_ERROR()
            sh_qspi_xfer_common()
                sh_qspi_cs_activate()
                    target_write_u8()
                    target_write_u16()
                    target_read_u8()
                target_write_u32()
                target_read_u8()
                target_write_u8()
                sh_qspi_wait_for_bit()
                    timeval_ms()
                    target_read_u8()
                    alive_sleep()
                    LOG_ERROR()
                sh_qspi_cs_deactivate()
                    target_read_u8()
                    target_write_u8()
        LOG_INFO()
        LOG_WARNING()
        calloc()
sh_qspi_erase()
    LOG_DEBUG()
    LOG_ERROR()
    sh_qspi_erase_sector()
        sh_qspi_write_enable()
            sh_qspi_xfer_common()
        sh_qspi_xfer_common()
        wait_till_ready()
            timeval_ms()
            read_status_reg()
                sh_qspi_xfer_common()
            alive_sleep()
            LOG_ERROR()
    keep_alive()
sh_qspi_flash_blank_check()
sh_qspi_get_info()
    command_print_sameline()
sh_qspi_protect()
sh_qspi_protect_check()
sh_qspi_read()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    target_read_buffer()
    destroy_reg_param()
sh_qspi_write()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    init_reg_param()
    target_write_buffer()
    buf_set_u32()
    target_run_algorithm()
    destroy_reg_param()
show_task()
    strcpy()
    sprintf()
    printf()
sim3x_auto_probe()
    sim3x_probe()
        sim3x_read_info()
            target_read_u32()
            LOG_ERROR()
            sim3x_read_deviceid()
                target_read_u32()
                atoi()
                isalpha()
            sim3x_parse_part_info()
                LOG_ERROR()
                LOG_INFO()
            LOG_WARNING()
            LOG_INFO()
        sim3x_flash_lock_check()
            target_read_u32()
            LOG_ERROR()
        free()
        malloc()
sim3x_flash_info()
    sim3x_read_info()
    command_print_sameline()
sim3x_flash_protect()
    LOG_ERROR()
    LOG_INFO()
    target_buffer_set_u32()
    sim3x_flash_write()
        LOG_ERROR()
        sim3x_init()
            target_write_u32()
        malloc()
        LOG_INFO()
        memcpy()
        sim3x_write_block()
            target_alloc_working_area()
            LOG_WARNING()
            target_write_buffer()
            target_alloc_working_area_try()
            target_free_working_area()
            init_reg_param()
            buf_set_u32()
            target_run_flash_async_algorithm()
            LOG_ERROR()
            buf_get_u32()
            destroy_reg_param()
        free()
    sim3x_flash_erase()
        LOG_ERROR()
        sim3x_init()
        sim3x_erase_page()
            target_read_u32()
            target_write_u32()
            alive_sleep()
            LOG_ERROR()
        target_read_u32()
        target_write_u32()
        alive_sleep()
    sim3x_flash_protect_check()
        LOG_ERROR()
        sim3x_flash_lock_check()
sof_isr()
sprint_binary()
    putchar()
stellaris_erase()
    LOG_ERROR()
    stellaris_mass_erase()
        LOG_ERROR()
        stellaris_read_clock_info()
        stellaris_set_flash_timing()
            LOG_DEBUG()
            target_write_u32()
        target_write_u32()
        target_read_u32()
    stellaris_read_clock_info()
    stellaris_set_flash_timing()
    target_write_u32()
    target_read_u32()
    LOG_WARNING()
stellaris_probe()
    stellaris_read_part_info()
        target_read_u32()
        LOG_DEBUG()
        DID0_VER()
        LOG_WARNING()
    free()
    calloc()
stellaris_protect()
    LOG_ERROR()
    stellaris_read_clock_info()
    stellaris_set_flash_timing()
    target_write_u32()
    target_read_u32()
    LOG_WARNING()
stellaris_protect_check()
    target_read_u32()
stellaris_write()
    LOG_ERROR()
    LOG_DEBUG()
    LOG_WARNING()
    stellaris_read_clock_info()
    stellaris_set_flash_timing()
    target_write_u32()
    stellaris_write_block()
        LOG_DEBUG()
        target_alloc_working_area()
        target_alloc_working_area_try()
        target_free_working_area()
        target_name()
        target_write_buffer()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        LOG_ERROR()
        destroy_reg_param()
    target_read_u32()
    target_write_buffer()
    memcpy()
step()
    jtag_add_ir_scan()
    riscv_xlen()
    LOG_WARNING()
    register_write()
    strict_step()
        LOG_DEBUG()
        riscv_remove_watchpoint()
        full_step()
            execute_resume()
            time()
            poll_target()
            LOG_ERROR()
        riscv_add_watchpoint()
    full_step()
stlink_dap_config_trace()
    stlink_config_trace()
        LOG_ERROR()
        stlink_usb_trace_disable()
            assert()
            LOG_DEBUG()
            stlink_usb_init_buffer()
                memset()
                stlink_usb_xfer_v1_create_cmd()
                    strcpy()
                    buf_set_u32()
            stlink_usb_xfer_errcheck()
                assert()
                stlink_usb_xfer_noerrcheck()
                stlink_usb_error_check()
                    assert()
                    LOG_DEBUG()
        assert()
        stlink_usb_trace_enable()
            assert()
            stlink_usb_init_buffer()
            h_u16_to_le()
            h_u32_to_le()
            stlink_usb_xfer_errcheck()
            LOG_DEBUG()
            LOG_ERROR()
stlink_dap_init()
    jtag_get_reset_config()
    LOG_DEBUG()
    LOG_WARNING()
    transport_is_dapdirect_swd()
    transport_is_dapdirect_jtag()
    transport_is_swim()
    LOG_ERROR()
    stlink_open()
        LOG_DEBUG()
        calloc()
        adapter_get_required_serial()
        stlink_usb_open()
        LOG_ERROR()
        stlink_usb_init_mode()
            assert()
            stlink_usb_exit_mode()
                assert()
                stlink_usb_current_mode()
                    assert()
                    stlink_usb_init_buffer()
                    stlink_usb_xfer_noerrcheck()
                LOG_DEBUG()
                stlink_usb_mode_leave()
                    assert()
                    stlink_usb_init_buffer()
                    stlink_usb_xfer_noerrcheck()
            stlink_usb_current_mode()
            stlink_usb_check_voltage()
                stlink_usb_init_buffer()
                stlink_usb_xfer_noerrcheck()
                le_to_h_u32()
                LOG_INFO()
            LOG_ERROR()
            LOG_DEBUG()
            stlink_dump_speed_map()
                LOG_DEBUG()
            ARRAY_SIZE()
            stlink_speed()
                stlink_speed_swim()
                    stlink_swim_speed()
                        stlink_usb_init_buffer()
                        stlink_cmd_allow_retry()
                            stlink_usb_xfer_noerrcheck()
                            stlink_swim_status()
                                stlink_usb_init_buffer()
                                stlink_usb_xfer_noerrcheck()
                            stlink_usb_error_check()
                            delay_us()
                            LOG_DEBUG()
                            usleep()
                    LOG_ERROR()
                stlink_speed_v3()
                    stlink_get_com_freq()
                        LOG_ERROR()
                        stlink_usb_init_buffer()
                        stlink_usb_xfer_errcheck()
                        le_to_h_u32()
                    stlink_match_speed_map()
                        LOG_INFO()
                    ARRAY_SIZE()
                    stlink_set_com_freq()
                        LOG_ERROR()
                        stlink_usb_init_buffer()
                        h_u32_to_le()
                        stlink_usb_xfer_errcheck()
                    LOG_ERROR()
                stlink_speed_swd()
                    stlink_match_speed_map()
                    ARRAY_SIZE()
                    stlink_usb_set_swdclk()
                        assert()
                        stlink_usb_init_buffer()
                        h_u16_to_le()
                        stlink_cmd_allow_retry()
                    LOG_ERROR()
                stlink_speed_jtag()
                    stlink_match_speed_map()
                    ARRAY_SIZE()
                    stlink_usb_set_jtagclk()
                        assert()
                        stlink_usb_init_buffer()
                        h_u16_to_le()
                        stlink_cmd_allow_retry()
                    LOG_ERROR()
            stlink_get_com_freq()
            stlink_usb_assert_srst()
                assert()
                stlink_swim_assert_reset()
                stlink_usb_init_buffer()
                stlink_cmd_allow_retry()
            stlink_usb_mode_enter()
                assert()
                stlink_usb_init_buffer()
                stlink_usb_xfer_noerrcheck()
                stlink_cmd_allow_retry()
        stlink_swim_enter()
            stlink_usb_init_buffer()
            stlink_cmd_allow_retry()
        stlink_usb_open_ap()
            test_bit()
            stlink_usb_init_access_port()
                assert()
                LOG_DEBUG_IO()
                stlink_usb_init_buffer()
                stlink_usb_xfer_errcheck()
            LOG_DEBUG()
            set_bit()
        stlink_usb_read_mem32()
            assert()
            LOG_DEBUG()
            stlink_usb_init_buffer()
            h_u32_to_le()
            h_u16_to_le()
            h_u24_to_le()
            stlink_usb_xfer_noerrcheck()
            memcpy()
            stlink_usb_get_rw_status()
                assert()
                stlink_usb_init_buffer()
                stlink_usb_xfer_errcheck()
        le_to_h_u32()
        stlink_close()
            stlink_usb_close()
            free()
stlink_dap_khz()
    LOG_ERROR()
    stlink_speed()
stlink_dap_op_queue_ap_abort()
    LOG_WARNING()
stlink_dap_op_queue_ap_read()
    stlink_dap_get_error()
    LOG_ERROR()
    stlink_dap_record_error()
    stlink_dap_run_internal()
        stlink_dap_check_reconnect()
            stlink_dap_reinit_interface()
                stlink_usb_mode_leave()
                stlink_usb_mode_enter()
                test_bit()
                clear_bit()
                stlink_dap_open_ap()
                    stlink_usb_open_ap()
            stlink_dap_op_connect()
                LOG_INFO()
                jtag_get_reset_config()
                adapter_assert_reset()
                LOG_WARNING()
                dap_invalidate_cache()
                dap_dp_init()
                stlink_usb_idcode()
                    assert()
                    stlink_usb_init_buffer()
                    stlink_usb_xfer_noerrcheck()
                    stlink_usb_xfer_errcheck()
                    le_to_h_u32()
                    LOG_DEBUG()
        stlink_dap_record_error()
        stlink_dap_get_error()
        stlink_dap_dp_read()
            LOG_ERROR()
            stlink_read_dap_register()
                assert()
                stlink_usb_init_buffer()
                h_u16_to_le()
                stlink_usb_xfer_errcheck()
                le_to_h_u32()
                LOG_DEBUG_IO()
        stlink_dap_dp_write()
            LOG_ERROR()
            LOG_DEBUG()
            stlink_write_dap_register()
                assert()
                LOG_DEBUG_IO()
                stlink_usb_init_buffer()
                h_u16_to_le()
                h_u32_to_le()
                stlink_usb_xfer_errcheck()
        stlink_dap_ap_read()
            is_adiv6()
            LOG_ERROR()
            stlink_dap_open_ap()
            stlink_read_dap_register()
        stlink_dap_ap_write()
            is_adiv6()
            LOG_ERROR()
            stlink_dap_open_ap()
            stlink_write_dap_register()
        stlink_usb_mem_rw_queue()
            stlink_usb_count_misc_rw_queue()
            stlink_usb_count_buf_rw_queue()
                CMD_MEM_AP_2_SIZE()
                stlink_usb_block()
                    assert()
            stlink_usb_misc_rw_segment()
                LOG_DEBUG()
                ALIGN_UP()
                h_u32_to_le()
                IS_ALIGNED()
                stlink_usb_rw_misc_out()
                    ALIGN_UP()
                    LOG_DEBUG_IO()
                    assert()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    stlink_usb_xfer_noerrcheck()
                stlink_usb_rw_misc_in()
                    LOG_DEBUG_IO()
                    assert()
                    stlink_usb_init_buffer()
                    stlink_usb_xfer_noerrcheck()
                    memcpy()
                le_to_h_u32()
                LOG_ERROR()
            stlink_usb_buf_rw_segment()
                CMD_MEM_AP_2_SIZE()
                stlink_dap_open_ap()
                stlink_usb_write_mem8()
                    assert()
                    stlink_usb_block()
                    LOG_DEBUG()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    h_u16_to_le()
                    h_u24_to_le()
                    stlink_usb_xfer_noerrcheck()
                    stlink_usb_get_rw_status()
                h_u16_to_le()
                stlink_usb_write_mem16()
                    assert()
                    LOG_DEBUG()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    h_u16_to_le()
                    h_u24_to_le()
                    stlink_usb_xfer_noerrcheck()
                    stlink_usb_get_rw_status()
                h_u32_to_le()
                stlink_usb_write_mem32_noaddrinc()
                    assert()
                    LOG_DEBUG()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    h_u16_to_le()
                    h_u24_to_le()
                    stlink_usb_xfer_noerrcheck()
                    stlink_usb_get_rw_status()
                stlink_usb_write_mem32()
                    assert()
                    LOG_DEBUG()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    h_u16_to_le()
                    h_u24_to_le()
                    stlink_usb_xfer_noerrcheck()
                    stlink_usb_get_rw_status()
                stlink_usb_read_mem8()
                    assert()
                    stlink_usb_block()
                    LOG_DEBUG()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    h_u16_to_le()
                    h_u24_to_le()
                    stlink_usb_xfer_noerrcheck()
                    memcpy()
                    stlink_usb_get_rw_status()
                stlink_usb_read_mem16()
                    assert()
                    LOG_DEBUG()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    h_u16_to_le()
                    h_u24_to_le()
                    stlink_usb_xfer_noerrcheck()
                    memcpy()
                    stlink_usb_get_rw_status()
                le_to_h_u16()
                stlink_usb_read_mem32_noaddrinc()
                    assert()
                    LOG_DEBUG()
                    stlink_usb_init_buffer()
                    h_u32_to_le()
                    h_u16_to_le()
                    h_u24_to_le()
                    stlink_usb_xfer_noerrcheck()
                    memcpy()
                    stlink_usb_get_rw_status()
                stlink_usb_read_mem32()
                le_to_h_u32()
        LOG_ERROR()
stlink_dap_op_queue_ap_write()
    stlink_dap_get_error()
    LOG_ERROR()
    stlink_dap_record_error()
    stlink_dap_run_internal()
stlink_dap_op_queue_dp_read()
    stlink_dap_get_error()
    stlink_dap_run_internal()
stlink_dap_op_queue_dp_write()
    stlink_dap_get_error()
    stlink_dap_run_internal()
stlink_dap_op_queue_run()
    stlink_dap_run_internal()
    stlink_dap_run_finalize()
        stlink_dap_dp_read()
        stlink_dap_get_and_clear_error()
        LOG_ERROR()
        stlink_dap_dp_write()
stlink_dap_op_quit()
    stlink_dap_closeall_ap()
        test_bit()
        stlink_usb_close_access_port()
            assert()
            LOG_DEBUG_IO()
            stlink_usb_init_buffer()
            stlink_usb_xfer_errcheck()
            stlink_usb_xfer_noerrcheck()
        clear_bit()
    LOG_ERROR()
stlink_dap_op_send_sequence()
stlink_dap_quit()
    LOG_DEBUG()
    stlink_close()
stlink_dap_reset()
    LOG_DEBUG()
    stlink_usb_assert_srst()
stlink_dap_speed()
    LOG_ERROR()
    stlink_speed()
stlink_dap_speed_div()
stlink_dap_trace_read()
    stlink_usb_trace_read()
        assert()
        stlink_usb_init_buffer()
        stlink_usb_xfer_noerrcheck()
        le_to_h_u16()
        stlink_usb_read_trace()
            assert()
stlink_swim_op_read_mem()
    LOG_DEBUG_IO()
    stlink_swim_readbytes()
        stlink_usb_init_buffer()
        h_u16_to_be()
        h_u32_to_be()
        stlink_cmd_allow_retry()
        stlink_usb_xfer_noerrcheck()
stlink_swim_op_reconnect()
    stlink_usb_mode_enter()
    stlink_swim_resync()
        stlink_usb_init_buffer()
        stlink_cmd_allow_retry()
stlink_swim_op_srst()
    stlink_swim_generate_rst()
        stlink_usb_init_buffer()
        stlink_cmd_allow_retry()
stlink_swim_op_write_mem()
    LOG_DEBUG_IO()
    stlink_swim_writebytes()
        stlink_usb_init_buffer()
        h_u16_to_be()
        h_u32_to_be()
        stlink_usb_set_cbw_transfer_datalength()
            buf_set_u32()
        stlink_cmd_allow_retry()
stlink_tcp_close()
    stlink_usb_exit_mode()
    memset()
    h_u32_to_le()
    stlink_tcp_send_cmd()
        assert()
        send()
        LOG_ERROR()
        LOG_DEBUG()
        strerror()
        timeval_ms()
        keep_alive()
        recv()
        le_to_h_u32()
    LOG_ERROR()
    close_socket()
    strerror()
    free()
stlink_tcp_open()
    LOG_ERROR()
    malloc()
    socket()
    strerror()
    memset()
    htons()
    inet_addr()
    LOG_DEBUG()
    setsockopt()
    connect()
    LOG_INFO()
    stlink_tcp_send_cmd()
    le_to_h_u32()
    LOG_WARNING()
    adapter_get_required_serial()
    h_u32_to_le()
    memcpy()
    le_to_h_u16()
    strlen()
    sprintf()
    strcmp()
    stlink_usb_version()
        assert()
        stlink_usb_init_buffer()
        stlink_usb_xfer_noerrcheck()
        be_to_h_u16()
        le_to_h_u16()
        sprintf()
        LOG_INFO()
stlink_tcp_read_trace()
    stlink_usb_init_buffer()
    stlink_tcp_xfer_noerrcheck()
        assert()
        memset()
        h_u32_to_le()
        LOG_ERROR()
        memcpy()
        stlink_tcp_send_cmd()
stlink_usb_halt()
    assert()
    stlink_usb_write_debug_reg()
        assert()
        stlink_usb_init_buffer()
        h_u32_to_le()
        stlink_cmd_allow_retry()
    stlink_usb_init_buffer()
    stlink_cmd_allow_retry()
stlink_usb_hl_open()
    stlink_open()
    stlink_get_mode()
stlink_usb_override_target()
    strcmp()
stlink_usb_read_mem()
    stlink_usb_read_ap_mem()
        stlink_max_block_size()
        stlink_usb_block()
        stlink_usb_read_mem8()
        usleep()
        stlink_usb_read_ap_mem()
        stlink_usb_read_mem16()
        stlink_usb_read_mem32()
stlink_usb_read_reg()
    assert()
    STLINK_REGSEL_IS_FPU()
    stlink_usb_write_debug_reg()
    stlink_usb_v2_read_debug_reg()
        assert()
        stlink_usb_init_buffer()
        h_u32_to_le()
        stlink_cmd_allow_retry()
        le_to_h_u32()
    stlink_usb_init_buffer()
    stlink_usb_xfer_noerrcheck()
    le_to_h_u32()
    stlink_cmd_allow_retry()
stlink_usb_read_regs()
    assert()
    stlink_usb_init_buffer()
    stlink_usb_xfer_noerrcheck()
    stlink_usb_xfer_errcheck()
stlink_usb_reset()
    assert()
    stlink_usb_init_buffer()
    stlink_cmd_allow_retry()
    stlink_usb_trace_disable()
    stlink_usb_trace_enable()
stlink_usb_run()
    assert()
    stlink_usb_write_debug_reg()
    stlink_usb_init_buffer()
    stlink_cmd_allow_retry()
stlink_usb_state()
    assert()
    LOG_INFO()
    stlink_usb_mode_enter()
    stlink_usb_v2_get_status()
        stlink_usb_v2_read_debug_reg()
    stlink_usb_init_buffer()
    stlink_usb_xfer_noerrcheck()
stlink_usb_step()
    assert()
    stlink_usb_write_debug_reg()
    stlink_usb_init_buffer()
    stlink_cmd_allow_retry()
stlink_usb_usb_close()
    stlink_usb_exit_mode()
    jtag_libusb_close()
    free()
stlink_usb_usb_open()
    malloc()
    jtag_libusb_open()
    stlink_usb_get_alternate_serial()
        libusb_get_string_descriptor()
        LOG_ERROR()
        libusb_error_name()
        malloc()
        sprintf()
    LOG_ERROR()
    jtag_libusb_set_configuration()
    libusb_claim_interface()
    LOG_DEBUG()
    jtag_libusb_get_pid()
        libusb_get_device_descriptor()
    libusb_get_device()
    stlink_usb_version()
    libusb_release_interface()
    libusb_reset_device()
    jtag_libusb_close()
    usleep()
stlink_usb_usb_read_trace()
    jtag_libusb_bulk_read()
    LOG_ERROR()
stlink_usb_usb_xfer_noerrcheck()
    assert()
    stlink_usb_xfer_rw()
        assert()
        memset()
        jtag_libusb_bulk_transfer_n()
            libusb_alloc_transfer()
            libusb_free_transfer()
            LOG_DEBUG()
            libusb_fill_bulk_transfer()
            sync_transfer_cb()
            libusb_submit_transfer()
            sync_transfer_wait_for_completion()
                jtag_libusb_handle_events_completed()
                    libusb_handle_events_completed()
                libusb_cancel_transfer()
            transfer_error_status()
        jtag_libusb_bulk_write()
        LOG_DEBUG()
        jtag_libusb_bulk_read()
    stlink_usb_xfer_v1_get_status()
        assert()
        memset()
        jtag_libusb_bulk_read()
        buf_get_u32()
    LOG_DEBUG()
    stlink_usb_xfer_v1_get_sense()
        assert()
        stlink_usb_init_buffer()
        stlink_usb_xfer_rw()
        stlink_usb_xfer_v1_get_status()
stlink_usb_write_mem()
    stlink_usb_write_ap_mem()
        stlink_max_block_size()
        stlink_usb_block()
        stlink_usb_write_mem8()
        usleep()
        stlink_usb_write_ap_mem()
        stlink_usb_write_mem16()
        stlink_usb_write_mem32()
stlink_usb_write_reg()
    assert()
    STLINK_REGSEL_IS_FPU()
    stlink_usb_write_debug_reg()
    stlink_usb_init_buffer()
    h_u32_to_le()
    stlink_cmd_allow_retry()
stm32h74_h75xx_compute_flash_cr()
stm32h7a_h7bxx_compute_flash_cr()
stm32l4_auto_probe()
    stm32l4_read_flash_reg_by_index()
        stm32l4_read_flash_reg()
            target_read_u32()
            stm32l4_get_flash_reg()
    stm32l4_probe()
        target_was_examined()
        LOG_ERROR()
        target_to_armv7m_safe()
        stm32l4_read_idcode()
            ARRAY_SIZE()
            target_read_u32()
            target_to_armv7m_safe()
            LOG_ERROR()
            cortex_m_get_impl_part()
        ARRAY_SIZE()
        LOG_WARNING()
        get_stm32l4_rev_str()
        LOG_INFO()
        stm32l4_read_flash_reg_by_index()
        stm32l4_sync_rdp_tzen()
        stm32l4_is_otp()
        free()
        alloc_block_array()
        target_read_u16()
        assert()
        LOG_DEBUG()
        malloc()
stm32l4_erase()
    assert()
    stm32l4_is_otp()
    LOG_ERROR()
    stm32l4_set_secbb()
        assert()
        stm32l4_wait_status_busy()
            stm32l4_read_flash_reg_by_index()
            LOG_DEBUG()
            LOG_ERROR()
            alive_sleep()
            stm32l4_write_flash_reg_by_index()
                stm32l4_write_flash_reg()
                    target_write_u32()
                    stm32l4_get_flash_reg()
        LOG_DEBUG()
        FLASH_SECBB1()
        FLASH_SECBB2()
        ARRAY_SIZE()
        stm32l4_write_flash_reg()
    stm32l4_unlock_reg()
        stm32l4_get_flash_cr_with_lock_index()
        stm32l4_read_flash_reg_by_index()
        stm32l4_write_flash_reg_by_index()
        LOG_ERROR()
    stm32l4_write_flash_reg_by_index()
    stm32l4_wait_status_busy()
    stm32l4_get_flash_cr_with_lock_index()
stm32l4_protect()
    stm32l4_is_otp()
    LOG_ERROR()
    stm32l4_protect_check()
        stm32l4_get_all_wrpxy()
            stm32l4_get_one_wrpxy()
                stm32l4_read_flash_reg_by_index()
    stm32l4_protect_same_bank()
        LOG_INFO()
        stm32l4_get_all_wrpxy()
        DECLARE_BITMAP()
        bitmap_zero()
        set_bit()
        bitmap_to_ranges()
            test_bit()
        range_print_alloc()
            calloc()
            range_print_one()
                sprintf()
        LOG_DEBUG()
        free()
        clear_bit()
        LOG_ERROR()
        stm32l4_write_all_wrpxy()
            stm32l4_write_one_wrpxy()
                stm32l4_write_option()
                    stm32l4_read_flash_reg()
                    stm32l4_unlock_reg()
                    stm32l4_unlock_option_reg()
                        stm32l4_get_flash_cr_with_lock_index()
                        stm32l4_read_flash_reg_by_index()
                        stm32l4_write_flash_reg_by_index()
                        LOG_ERROR()
                    stm32l4_write_flash_reg()
                    stm32l4_write_flash_reg_by_index()
                    stm32l4_wait_status_busy()
                    stm32l4_get_flash_cr_with_lock_index()
stm32l4_write()
    stm32l4_is_otp()
    stm32l4_otp_is_enabled()
    LOG_ERROR()
    assert()
    LOG_DEBUG()
    stm32l4_set_secbb()
    stm32l4_unlock_reg()
    LOG_WARNING()
    stm32l4_write_block()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_buffer()
        target_free_working_area()
        assert()
        target_get_working_area_avail()
        target_alloc_working_area_try()
        LOG_ERROR()
        init_reg_param()
        buf_set_u32()
        offsetof()
        target_buffer_set_u32()
        stm32l4_get_flash_reg_by_index()
            stm32l4_get_flash_reg()
        target_run_flash_async_algorithm()
        ARRAY_SIZE()
        stm32l4_read_flash_reg_by_index()
        stm32l4_write_flash_reg_by_index()
        destroy_reg_param()
    stm32l4_write_block_without_loader()
        stm32l4_wait_status_busy()
        stm32l4_write_flash_reg_by_index()
        target_write_memory()
    stm32l4_write_flash_reg_by_index()
    stm32l4_get_flash_cr_with_lock_index()
stm32lx_auto_probe()
    stm32lx_probe()
        stm32lx_read_id_code()
            target_to_armv7m()
            target_read_u32()
        LOG_DEBUG()
        ARRAY_SIZE()
        LOG_ERROR()
        LOG_INFO()
        target_read_u16()
        LOG_WARNING()
        stm32lx_update_part_info()
        free()
        malloc()
stm32lx_erase()
    LOG_ERROR()
    stm32lx_erase_sector()
        stm32lx_unlock_program_memory()
            target_read_u32()
            target_write_u32()
            LOG_ERROR()
        stm32lx_lock_program_memory()
            target_read_u32()
            target_write_u32()
stm32lx_get_info()
    stm32lx_probe()
    command_print_sameline()
stm32lx_protect_check()
    target_read_u32()
stm32lx_write()
    LOG_ERROR()
    stm32lx_unlock_program_memory()
    MIN()
    memcpy()
    target_write_buffer()
    stm32lx_wait_until_bsy_clear()
        stm32lx_wait_until_bsy_clear_timeout()
            stm32lx_get_flash_status()
                target_read_u32()
            LOG_DEBUG()
            LOG_ERROR()
            alive_sleep()
            target_write_u32()
    assert()
    stm32lx_write_half_pages()
        LOG_ERROR()
        target_alloc_working_area()
        LOG_DEBUG()
        target_write_buffer()
        target_free_working_area()
        target_alloc_working_area_try()
        LOG_WARNING()
        init_reg_param()
        stm32lx_enable_write_half_page()
            stm32lx_unlock_program_memory()
            target_read_u32()
            target_write_u32()
        destroy_reg_param()
        target_to_armv7m()
        buf_set_u32()
        target_run_algorithm()
        ARRAY_SIZE()
        stm32lx_wait_until_bsy_clear()
        stm32lx_lock_program_memory()
    LOG_WARNING()
    stm32lx_lock_program_memory()
stm32x_auto_probe()
    stm32x_probe()
        free()
        target_was_examined()
        LOG_ERROR()
        stm32x_is_otp()
        stm32x_otp_is_f7()
        LOG_INFO()
        assert()
        calloc()
        stm32x_get_device_id()
        LOG_WARNING()
        target_read_u16()
        target_read_u32()
        LOG_DEBUG()
        calculate_number_of_sectors()
            sector_size_in_kb()
            LOG_INFO()
        malloc()
        setup_bank()
            sector_size_in_kb()
            setup_sector()
                assert()
                LOG_DEBUG()
stm32x_auto_probe()
    stm32x_probe()
        target_was_examined()
        LOG_ERROR()
        stm32x_read_id_code()
            target_read_u32()
        LOG_DEBUG()
        ARRAY_SIZE()
        LOG_WARNING()
        LOG_INFO()
        cortex_m_get_impl_part()
        target_name()
        target_read_u16()
        assert()
        free()
        alloc_block_array()
stm32x_auto_probe()
    stm32x_probe()
        stm32x_get_device_id()
        LOG_INFO()
        LOG_WARNING()
        stm32x_get_flash_size()
            stm32x_get_property_addr()
            target_read_u16()
        assert()
        free()
        alloc_block_array()
stm32x_erase()
    LOG_ERROR()
    stm32x_mass_erase()
        LOG_ERROR()
        target_write_u32()
        stm32x_get_flash_reg()
        stm32x_wait_status_busy()
            stm32x_get_flash_status()
                target_read_u32()
                stm32x_get_flash_reg()
            LOG_DEBUG()
            LOG_ERROR()
            alive_sleep()
            target_write_u32()
            stm32x_get_flash_reg()
    target_write_u32()
    stm32x_get_flash_reg()
    stm32x_wait_status_busy()
stm32x_erase()
    stm32x_is_otp()
    LOG_ERROR()
    assert()
    stm32x_unlock_reg()
        target_read_u32()
        target_write_u32()
        LOG_ERROR()
    target_write_u32()
    stm32x_get_flash_reg()
    FLASH_SNB()
    stm32x_wait_status_busy()
        stm32x_get_flash_status()
            target_read_u32()
            stm32x_get_flash_reg()
        LOG_DEBUG()
        LOG_ERROR()
        alive_sleep()
        target_write_u32()
        stm32x_get_flash_reg()
stm32x_erase()
    assert()
    stm32x_unlock_reg()
        stm32x_read_flash_reg()
            stm32x_get_flash_reg()
            target_read_u32()
            LOG_ERROR()
        stm32x_write_flash_reg()
            stm32x_get_flash_reg()
            target_write_u32()
            LOG_ERROR()
        LOG_ERROR()
    LOG_DEBUG()
    stm32x_write_flash_reg()
    LOG_ERROR()
    stm32x_wait_flash_op_queue()
        stm32x_get_flash_status()
            stm32x_read_flash_reg()
        LOG_ERROR()
        alive_sleep()
        stm32x_write_flash_reg()
    stm32x_lock_reg()
        stm32x_write_flash_reg()
stm32x_get_info()
    stm32x_probe()
    command_print_sameline()
stm32x_protect()
    LOG_ERROR()
    stm32x_check_operation_supported()
        LOG_ERROR()
    stm32x_erase_options()
        stm32x_read_options()
            target_read_u32()
        target_write_u32()
        stm32x_wait_status_busy()
    stm32x_write_options()
        target_write_u32()
        target_buffer_set_u16()
        stm32x_write_block()
            assert()
            target_to_arm()
            is_arm()
            stm32x_write_block_async()
                target_alloc_working_area()
                LOG_WARNING()
                target_write_buffer()
                target_free_working_area()
                target_get_working_area_avail()
                MIN()
                MAX()
                init_reg_param()
                buf_set_u32()
                target_run_flash_async_algorithm()
                ARRAY_SIZE()
                stm32x_wait_status_busy()
                LOG_ERROR()
                buf_get_u32()
                destroy_reg_param()
            stm32x_write_block_riscv()
                target_alloc_working_area()
                LOG_WARNING()
                target_write_buffer()
                target_free_working_area()
                target_get_working_area_avail()
                MIN()
                MAX()
                init_reg_param()
                buf_set_u32()
                stm32x_get_flash_reg()
                target_run_algorithm()
                ARRAY_SIZE()
                LOG_ERROR()
                stm32x_wait_status_busy()
                buf_get_u32()
                destroy_reg_param()
            LOG_WARNING()
            target_write_memory()
            stm32x_wait_status_busy()
stm32x_protect()
    LOG_ERROR()
    stm32x_is_otp()
    stm32x_otp_protect()
        assert()
        stm32x_otp_is_f7()
        target_read_u8()
        target_write_u8()
    stm32x_read_options()
        target_read_u32()
        LOG_INFO()
    LOG_DEBUG()
    stm32x_write_options()
        stm32x_unlock_option_reg()
            target_read_u32()
            target_write_u32()
            LOG_ERROR()
        target_write_u32()
        stm32x_wait_status_busy()
stm32x_protect()
    LOG_ERROR()
    stm32x_read_flash_reg()
    LOG_DEBUG()
    stm32x_write_option()
        stm32x_unlock_option_reg()
            stm32x_read_flash_reg()
            stm32x_write_flash_reg()
            LOG_ERROR()
        stm32x_write_flash_reg()
        stm32x_read_flash_reg()
        LOG_ERROR()
        alive_sleep()
        stm32x_lock_option_reg()
            stm32x_write_flash_reg()
stm32x_protect_check()
    stm32x_check_operation_supported()
    target_read_u32()
stm32x_protect_check()
    stm32x_read_flash_reg()
    LOG_DEBUG()
stm32x_protect_check()
    stm32x_is_otp()
    stm32x_otp_read_protect()
        stm32x_otp_is_f7()
        target_read_u8()
    stm32x_read_options()
    LOG_DEBUG()
stm32x_write()
    LOG_ERROR()
    LOG_WARNING()
    stm32x_unlock_reg()
    stm32x_write_block()
        stm32x_is_otp()
        stm32x_is_otp_unlocked()
        LOG_ERROR()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_buffer()
        target_free_working_area()
        target_alloc_working_area_try()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        buf_get_u32()
        target_write_u32()
        destroy_reg_param()
    target_write_u32()
    stm32x_get_flash_reg()
    target_write_memory()
    stm32x_wait_status_busy()
    target_write_u8()
stm32x_write()
    LOG_ERROR()
    assert()
    target_write_u32()
    stm32x_get_flash_reg()
    stm32x_write_block()
stm32x_write()
    LOG_ERROR()
    assert()
    stm32x_unlock_reg()
    stm32x_write_block()
        target_alloc_working_area()
        LOG_WARNING()
        target_write_buffer()
        target_free_working_area()
        target_alloc_working_area_try()
        LOG_DEBUG()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        ARRAY_SIZE()
        LOG_ERROR()
        buf_get_u32()
        stm32x_write_flash_reg()
        destroy_reg_param()
    LOG_WARNING()
    stm32x_write_flash_reg()
    target_write_buffer()
    stm32x_wait_flash_op_queue()
    stm32x_lock_reg()
stm8_add_breakpoint()
    target_to_stm8()
    LOG_INFO()
    stm8_set_breakpoint()
        target_to_stm8()
        LOG_WARNING()
        LOG_ERROR()
        breakpoint_hw_set()
        stm8_set_hwbreak()
            LOG_ERROR()
            stm8_adapter_write_memory()
                swim_write_mem()
                    assert()
            LOG_DEBUG()
            stm8_write_u8()
                swim_write_mem()
        LOG_DEBUG()
        target_read_u8()
        target_write_u8()
stm8_add_watchpoint()
    target_to_stm8()
    LOG_INFO()
    stm8_set_watchpoint()
        target_to_stm8()
        LOG_WARNING()
        LOG_ERROR()
        stm8_set_hwbreak()
        watchpoint_set()
        LOG_DEBUG()
stm8_arch_state()
    target_to_stm8()
    LOG_USER()
    debug_reason_name()
    buf_get_u32()
stm8_blank_check_memory()
    LOG_ERROR()
    target_alloc_working_area()
    target_write_buffer()
    init_mem_param()
    buf_set_u32()
    init_reg_param()
    target_run_algorithm()
    destroy_mem_param()
    destroy_reg_param()
    target_free_working_area()
stm8_checksum_memory()
stm8_deinit()
    target_to_stm8()
    free()
    stm8_free_reg_cache()
        target_to_stm8()
        free()
stm8_examine()
    target_to_stm8()
    jtag_get_reset_config()
    target_was_examined()
    stm8_reset_deassert()
        jtag_get_reset_config()
        adapter_deassert_reset()
        stm8_exit_debug()
            stm8_read_dm_csrx()
                stm8_adapter_read_memory()
                    swim_read_mem()
                        assert()
            stm8_write_u8()
    LOG_WARNING()
    LOG_INFO()
    swim_reconnect()
        assert()
    LOG_ERROR()
    stm8_read_dm_csrx()
    target_set_examined()
stm8_get_core_reg()
    target_to_stm8()
stm8_get_gdb_arch()
stm8_get_gdb_reg_list()
    target_to_stm8()
    malloc()
stm8_halt()
    LOG_DEBUG()
    target_state_name()
    LOG_WARNING()
    stm8_debug_stall()
        stm8_read_dm_csrx()
        stm8_write_u8()
stm8_init()
    adapter_speed()
    stm8_speed()
        LOG_DEBUG()
        stm8_write_u8()
        adapter_speed()
    stm8_build_reg_cache()
        target_to_stm8()
        register_get_last_cache_p()
        malloc()
        calloc()
        LOG_ERROR()
stm8_jim_configure()
    target_to_stm8()
    Jim_GetString()
    strcmp()
    jim_getopt_string()
    Jim_WrongNumArgs()
    jim_getopt_wide()
    LOG_DEBUG()
    stm8_init_flash_regs()
stm8_poll()
    LOG_DEBUG()
    stm8_read_dm_csrx()
    stm8_debug_entry()
        target_to_stm8()
        stm8_enable_interrupts()
            target_to_stm8()
            stm8_read_u8()
                swim_read_mem()
            stm8_write_u8()
        stm8_save_context()
            target_to_stm8()
            stm8_read_regs()
                stm8_adapter_read_memory()
                be_to_h_u24()
                be_to_h_u16()
        stm8_config_step()
            stm8_read_dm_csrx()
            stm8_write_u8()
        stm8_examine_debug_reason()
            stm8_read_dm_csrx()
            LOG_DEBUG()
        LOG_DEBUG()
        buf_get_u32()
        target_state_name()
    target_call_event_callbacks()
stm8_read_memory()
    LOG_DEBUG()
    LOG_WARNING()
    stm8_adapter_read_memory()
stm8_remove_breakpoint()
    target_to_stm8()
    LOG_TARGET_ERROR()
    stm8_unset_breakpoint()
        target_to_stm8()
        LOG_WARNING()
        LOG_DEBUG()
        stm8_set_hwbreak()
        target_read_memory()
        target_write_memory()
stm8_remove_watchpoint()
    target_to_stm8()
    LOG_TARGET_ERROR()
    stm8_unset_watchpoint()
        target_to_stm8()
        LOG_WARNING()
        LOG_DEBUG()
        stm8_set_hwbreak()
stm8_reset_assert()
    target_to_stm8()
    jtag_get_reset_config()
    adapter_assert_reset()
    LOG_DEBUG()
    swim_system_reset()
        assert()
    register_cache_invalidate()
    target_halt()
stm8_resume()
    target_to_stm8()
    LOG_DEBUG()
    LOG_TARGET_ERROR()
    target_free_all_working_areas()
    stm8_enable_breakpoints()
        stm8_set_breakpoint()
    stm8_enable_watchpoints()
        stm8_set_watchpoint()
    stm8_set_hwbreak()
    buf_set_u32()
    buf_get_u32()
    stm8_restore_context()
        target_to_stm8()
        stm8_write_regs()
            h_u24_to_be()
            h_u16_to_be()
            stm8_adapter_write_memory()
    breakpoint_find()
    stm8_unset_breakpoint()
    stm8_single_step_core()
        target_to_stm8()
        stm8_config_step()
        stm8_enable_interrupts()
        stm8_exit_debug()
        stm8_debug_entry()
    stm8_set_breakpoint()
    stm8_enable_interrupts()
    stm8_exit_debug()
    register_cache_invalidate()
    target_call_event_callbacks()
stm8_run_algorithm()
    target_to_stm8()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    buf_get_u32()
    stm8_run_and_wait()
        target_resume()
        target_wait_state()
        target_halt()
        buf_get_u32()
        LOG_DEBUG()
    buf_set_u32()
stm8_set_core_reg()
    buf_get_u32()
    buf_set_u32()
stm8_step()
    LOG_DEBUG()
    target_to_stm8()
    LOG_TARGET_ERROR()
    buf_set_u32()
    breakpoint_find()
    buf_get_u32()
    stm8_unset_breakpoint()
    stm8_restore_context()
    stm8_config_step()
    target_call_event_callbacks()
    stm8_enable_interrupts()
    stm8_exit_debug()
    register_cache_invalidate()
    stm8_debug_entry()
    stm8_set_breakpoint()
stm8_target_create()
    calloc()
    stm8_init_arch_info()
        stm8_read_core_reg()
            target_to_stm8()
            LOG_DEBUG()
            buf_set_u32()
        stm8_write_core_reg()
            target_to_stm8()
            buf_get_u32()
            LOG_DEBUG()
        stm8_init_flash_regs()
    stm8_configure_break_unit()
        target_to_stm8()
        calloc()
        LOG_DEBUG()
stm8_write_memory()
    target_to_stm8()
    LOG_DEBUG()
    LOG_WARNING()
    stm8_write_flash()
        target_to_stm8()
        stm8_unlock_flash()
            target_to_stm8()
            stm8_read_u8()
            stm8_write_u8()
        stm8_unlock_eeprom()
            target_to_stm8()
            stm8_read_u8()
            stm8_write_u8()
        LOG_ERROR()
        assert()
        stm8_write_u8()
        stm8_adapter_write_memory()
        stm8_read_u8()
        usleep()
    stm8_adapter_write_memory()
stmqspi_auto_probe()
    stmqspi_probe()
        free()
        memset()
        stmqspi_abort()
            target_read_u32()
            target_write_u32()
            BIT()
        poll_busy()
            timeval_ms()
            target_read_u32()
            BIT()
            target_write_u32()
            LOG_DEBUG()
            alive_sleep()
            LOG_ERROR()
        target_write_u32()
        target_read_u32()
        LOG_DEBUG()
        LOG_ERROR()
        LOG_WARNING()
        BIT()
        read_flash_id()
            LOG_ERROR()
            stmqspi_abort()
            wait_till_ready()
                timeval_ms()
                read_status_reg()
                    stmqspi_abort()
                    poll_busy()
                    target_write_u32()
                    BIT()
                    octospi_cmd()
                        target_write_u32()
                        OPI_CMD()
                    target_read_u32()
                    target_read_u8()
                    LOG_DEBUG()
                alive_sleep()
                LOG_ERROR()
            poll_busy()
            target_write_u32()
            BIT()
            octospi_cmd()
            target_read_u32()
            target_read_u8()
            LOG_INFO()
        LOG_INFO()
        memcpy()
        spi_sfdp()
            memset()
            LOG_DEBUG()
            LOG_INFO()
            LOG_ERROR()
            malloc()
            offsetof()
            free()
        read_sfdp_block()
            BIT()
            find_sfdp_dummy()
                BIT()
                LOG_DEBUG()
                target_write_u32()
                poll_busy()
                octospi_cmd()
                OCTOSPI_CCR_READ_SFDP()
                target_read_u8()
                stmqspi_abort()
            LOG_DEBUG()
            target_write_u32()
            poll_busy()
            octospi_cmd()
            OCTOSPI_CCR_READ_SFDP()
            target_read_u8()
            target_read_u32()
            le_to_h_u32()
        malloc()
        set_mm_mode()
            target_write_u32()
            stmqspi_abort()
            poll_busy()
stmqspi_blank_check()
    LOG_ERROR()
    stmqspi_abort()
    poll_busy()
    h_to_le_32()
        h_u32_to_le()
    target_get_working_area_avail()
    target_alloc_working_area_try()
    target_write_buffer()
    duration_start()
    init_reg_param()
    buf_set_u32()
    LOG_DEBUG()
    target_run_algorithm()
    ARRAY_SIZE()
    target_read_buffer()
    keep_alive()
    destroy_reg_param()
    duration_measure()
    LOG_INFO()
    duration_elapsed()
    duration_kbps()
    target_free_working_area()
    set_mm_mode()
stmqspi_erase()
    LOG_DEBUG()
    LOG_ERROR()
    qspi_erase_sector()
        qspi_write_enable()
            stmqspi_abort()
            poll_busy()
            octospi_cmd()
            target_write_u32()
            read_status_reg()
            BIT()
            LOG_ERROR()
        octospi_cmd()
        target_write_u32()
        poll_busy()
        read_status_reg()
        LOG_DEBUG()
        BIT()
        LOG_ERROR()
        wait_till_ready()
    alive_sleep()
    keep_alive()
    set_mm_mode()
stmqspi_protect()
    LOG_WARNING()
stmqspi_protect_check()
stmqspi_read()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    stmqspi_abort()
    poll_busy()
    qspi_read_write_block()
        LOG_DEBUG()
        BIT()
        h_to_le_32()
        OPI_CMD()
        target_get_working_area_avail()
        LOG_ERROR()
        target_alloc_working_area_try()
        target_write_buffer()
        init_reg_param()
        buf_set_u32()
        target_run_flash_async_algorithm()
        ARRAY_SIZE()
        target_run_read_async_algorithm()
            assert()
            IS_PWR_OF_2()
            target_write_u32()
            target_start_algorithm()
            LOG_ERROR()
            target_read_u32()
            LOG_DEBUG()
            IS_ALIGNED()
            alive_sleep()
            target_read_buffer()
            keep_alive()
            target_wait_algorithm()
        buf_get_u32()
        destroy_reg_param()
        target_free_working_area()
        set_mm_mode()
stmqspi_verify()
    LOG_DEBUG()
    BIT()
    LOG_ERROR()
    LOG_WARNING()
    stmqspi_abort()
    poll_busy()
    qspi_verify()
        BIT()
        h_to_le_32()
        target_alloc_working_area_try()
        LOG_ERROR()
        target_write_buffer()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        ARRAY_SIZE()
        keep_alive()
        image_calculate_checksum()
        buf_get_u32()
        LOG_DEBUG()
        destroy_reg_param()
        target_free_working_area()
        set_mm_mode()
stmqspi_write()
    LOG_DEBUG()
    BIT()
    LOG_ERROR()
    LOG_WARNING()
    stmqspi_abort()
    poll_busy()
    qspi_read_write_block()
stmsmi_auto_probe()
    stmsmi_probe()
        free()
        LOG_ERROR()
        LOG_DEBUG()
        read_flash_id()
            LOG_ERROR()
            wait_till_ready()
                timeval_ms()
                read_status_reg()
                    SMI_CLEAR_TFF()
                    SMI_WRITE_REG()
                    SMI_POLL_TFF()
                    SMI_READ_REG()
                alive_sleep()
                LOG_ERROR()
            SMI_SET_SW_MODE()
            SMI_CLEAR_TFF()
            SMI_WRITE_REG()
            SMI_POLL_TFF()
            SMI_READ_REG()
        SMI_SET_HW_MODE()
        LOG_INFO()
        LOG_WARNING()
        malloc()
stmsmi_erase()
    LOG_DEBUG()
    LOG_ERROR()
    smi_erase_sector()
        smi_write_enable()
            SMI_SET_HW_MODE()
            SMI_CLEAR_TFF()
            SMI_WRITE_REG()
            SMI_POLL_TFF()
            read_status_reg()
            LOG_ERROR()
        SMI_SET_SW_MODE()
        SMI_CLEAR_TFF()
        erase_command()
            le_to_h_u32()
        SMI_WRITE_REG()
        SMI_POLL_TFF()
        wait_till_ready()
    keep_alive()
    SMI_SET_HW_MODE()
stmsmi_protect()
stmsmi_protect_check()
stmsmi_write()
    LOG_DEBUG()
    LOG_ERROR()
    LOG_WARNING()
    smi_write_buffer()
        LOG_DEBUG()
        smi_write_enable()
        SMI_SET_HWWB_MODE()
        target_write_buffer()
    keep_alive()
    SMI_SET_HW_MODE()
str7x_erase()
    LOG_ERROR()
    LOG_DEBUG()
    target_write_u32()
    str7x_get_flash_adr()
    str7x_waitbusy()
        target_read_u32()
        str7x_get_flash_adr()
        alive_sleep()
        LOG_ERROR()
    str7x_result()
        target_read_u32()
        str7x_get_flash_adr()
        LOG_ERROR()
str7x_probe()
str7x_protect()
    LOG_ERROR()
    target_write_u32()
    str7x_get_flash_adr()
    str7x_waitbusy()
    str7x_result()
str7x_protect_check()
    LOG_ERROR()
    target_read_u32()
    str7x_get_flash_adr()
str7x_write()
    LOG_ERROR()
    LOG_WARNING()
    target_write_u32()
    str7x_get_flash_adr()
    str7x_write_block()
        target_alloc_working_area_try()
        target_buffer_set_u32_array()
        ARRAY_SIZE()
        target_write_buffer()
        target_free_working_area()
        LOG_WARNING()
        init_reg_param()
        buf_set_u32()
        str7x_get_flash_adr()
        target_run_algorithm()
        buf_get_u32()
        str7x_result()
        destroy_reg_param()
    target_write_memory()
    str7x_waitbusy()
    str7x_result()
    memcpy()
str9x_erase()
    LOG_ERROR()
    assert()
    target_write_u16()
    target_read_u8()
    alive_sleep()
str9x_probe()
str9x_protect()
    LOG_ERROR()
    target_write_u16()
    target_read_u8()
str9x_protect_check()
    LOG_ERROR()
    target_write_u16()
    target_read_u16()
    target_read_u32()
str9x_write()
    LOG_ERROR()
    LOG_WARNING()
    str9x_write_block()
        target_alloc_working_area()
        LOG_WARNING()
        target_buffer_set_u32_array()
        ARRAY_SIZE()
        target_write_buffer()
        target_alloc_working_area_try()
        target_free_working_area()
        init_reg_param()
        buf_set_u32()
        target_run_algorithm()
        LOG_ERROR()
        buf_get_u32()
        destroy_reg_param()
    target_write_u16()
    target_write_memory()
    target_read_u8()
    alive_sleep()
    memcpy()
str9xpec_erase()
    str9xpec_erase_area()
        str9xpec_isc_enable()
            str9xpec_set_instr()
                buf_get_u32()
                calloc()
                DIV_ROUND_UP()
                buf_set_u32()
                jtag_add_ir_scan()
                free()
            str9xpec_isc_status()
                str9xpec_set_instr()
                jtag_add_dr_scan()
                jtag_execute_queue()
                LOG_DEBUG()
                LOG_INFO()
            LOG_DEBUG()
        calloc()
        DIV_ROUND_UP()
        LOG_DEBUG()
        buf_set_u32()
        str9xpec_set_instr()
        jtag_add_dr_scan()
        jtag_execute_queue()
        jtag_add_sleep()
        str9xpec_isc_status()
        alive_sleep()
        free()
        str9xpec_isc_disable()
            str9xpec_set_instr()
            jtag_add_sleep()
            str9xpec_isc_status()
            LOG_DEBUG()
str9xpec_erase_check()
    str9xpec_blank_check()
        str9xpec_isc_enable()
        calloc()
        DIV_ROUND_UP()
        LOG_DEBUG()
        buf_set_u32()
        str9xpec_set_instr()
        jtag_add_dr_scan()
        jtag_add_sleep()
        jtag_execute_queue()
        str9xpec_isc_status()
        buf_get_u32()
        free()
        str9xpec_isc_disable()
str9xpec_probe()
str9xpec_protect()
    str9xpec_read_config()
        LOG_DEBUG()
        str9xpec_set_instr()
        jtag_add_dr_scan()
        jtag_execute_queue()
        str9xpec_isc_status()
    LOG_DEBUG()
    str9xpec_lock_device()
        str9xpec_isc_enable()
        str9xpec_set_address()
            str9xpec_set_instr()
            jtag_add_dr_scan()
        str9xpec_set_instr()
        jtag_add_dr_scan()
        jtag_execute_queue()
        str9xpec_isc_disable()
    str9xpec_unlock_device()
        str9xpec_erase_area()
    buf_set_u32()
    str9xpec_write_options()
        str9xpec_erase_area()
        str9xpec_isc_enable()
        buf_set_u32()
        str9xpec_set_address()
        str9xpec_set_instr()
        jtag_add_dr_scan()
        jtag_add_sleep()
        jtag_execute_queue()
        str9xpec_isc_disable()
str9xpec_protect_check()
    str9xpec_read_config()
    buf_get_u32()
str9xpec_write()
    str9xpec_isc_enable()
    LOG_WARNING()
    LOG_DEBUG()
    calloc()
    DIV_ROUND_UP()
    str9xpec_set_address()
    str9xpec_set_instr()
    jtag_add_dr_scan()
    jtag_add_sleep()
    jtag_execute_queue()
    buf_get_u32()
    memcpy()
    free()
    str9xpec_isc_disable()
stub_isr()
sudav_isr()
    usb_handle_setup_data()
        usb_handle_get_status()
            syncdelay()
            usb_get_endpoint_cs_reg()
        STALL_EP0()
        usb_handle_clear_feature()
            STALL_EP0()
            usb_get_endpoint_cs_reg()
        usb_handle_set_feature()
            usb_get_endpoint_cs_reg()
        usb_handle_get_descriptor()
            HI8()
            LO8()
        syncdelay()
        usb_handle_set_interface()
            usb_reset_data_toggle()
            syncdelay()
        usb_handle_send_bitstream()
            syncdelay()
            delay_ms()
            set_gpif_cnt()
                syncdelay()
    CLEAR_IRQ()
suspend_isr()
sutok_isr()
svf_hexbuf_print()
    DIV_ROUND_UP()
    malloc()
    sprintf()
    log_printf_lf()
    free()
swd_init()
swd_queue_ap_abort()
    adiv5_dap_swd_driver()
        container_of()
    assert()
    swd_multidrop_select()
        dap_is_multidrop()
        swd_multidrop_select_inner()
            assert()
            dap_is_multidrop()
            swd_send_sequence()
                adiv5_dap_swd_driver()
                assert()
            swd_queue_dp_write_inner()
                adiv5_dap_swd_driver()
                assert()
                swd_finish_read()
                    adiv5_dap_swd_driver()
                    swd_cmd()
                swd_cmd()
                check_sync()
                    swd_run_inner()
                        adiv5_dap_swd_driver()
                swd_queue_dp_bankselect()
                    swd_queue_dp_write_inner()
            swd_queue_dp_read_inner()
                adiv5_dap_swd_driver()
                assert()
                swd_queue_dp_bankselect()
                swd_cmd()
                check_sync()
            swd_clear_sticky_errors()
                adiv5_dap_swd_driver()
                assert()
                swd_cmd()
            swd_run_inner()
            LOG_INFO()
            LOG_DEBUG_IO()
        LOG_ERROR()
        adiv5_dap_name()
        LOG_DEBUG()
    swd_cmd()
    check_sync()
swd_queue_ap_read()
    adiv5_dap_swd_driver()
    assert()
    swd_check_reconnect()
        swd_connect()
            jtag_get_reset_config()
            adapter_assert_reset()
            LOG_WARNING()
            dap_is_multidrop()
            swd_connect_multidrop()
                timeval_ms()
                swd_send_sequence()
                dap_invalidate_cache()
                swd_multidrop_select_inner()
                alive_sleep()
                LOG_ERROR()
                adiv5_dap_name()
                LOG_INFO()
            swd_connect_single()
                timeval_ms()
                swd_send_sequence()
                dap_invalidate_cache()
                swd_queue_dp_read_inner()
                swd_run_inner()
                alive_sleep()
                LOG_ERROR()
                LOG_INFO()
                swd_clear_sticky_errors()
            swd_queue_dp_write_inner()
            swd_run_inner()
            dap_dp_init()
    swd_multidrop_select()
    swd_queue_ap_bankselect()
        is_adiv6()
        LOG_DEBUG()
        swd_queue_dp_write()
            adiv5_dap_swd_driver()
            assert()
            swd_check_reconnect()
            swd_multidrop_select()
            swd_queue_dp_write_inner()
        swd_queue_dp_write_inner()
    swd_cmd()
    check_sync()
swd_queue_ap_write()
    adiv5_dap_swd_driver()
    assert()
    swd_check_reconnect()
    swd_multidrop_select()
    swd_finish_read()
    swd_queue_ap_bankselect()
    swd_cmd()
    check_sync()
swd_queue_dp_read()
    swd_check_reconnect()
    swd_multidrop_select()
    swd_queue_dp_read_inner()
swd_quit()
    adiv5_dap_swd_driver()
    dap_is_multidrop()
swd_run()
    swd_multidrop_select()
    swd_finish_read()
    swd_run_inner()
swd_select()
    register_commands()
    LOG_DEBUG()
swim_transport_init()
    jtag_get_reset_config()
    LOG_DEBUG()
    adapter_assert_reset()
    LOG_WARNING()
    adapter_deassert_reset()
swim_transport_select()
    LOG_DEBUG()
    register_commands()
swm050_erase()
    LOG_ERROR()
    target_write_u32()
    alive_sleep()
swm050_probe()
swm050_write()
    LOG_ERROR()
    target_write_u32()
    target_write_memory()
syncbb_execute_queue()
    LOG_DEBUG_IO()
    jtag_get_reset_config()
    tap_set_state()
    ft232r_reset()
        LOG_DEBUG()
        ft232r_increase_buf_size()
            realloc()
        LOG_ERROR()
        ft232r_send_recv()
            assert()
            jtag_libusb_bulk_write()
            LOG_ERROR()
            jtag_libusb_bulk_read()
            memcpy()
    tap_state_name()
    syncbb_end_state()
        tap_is_state_stable()
        tap_set_end_state()
        LOG_ERROR()
        exit()
    syncbb_runtest()
        tap_get_end_state()
        tap_get_state()
        syncbb_end_state()
        syncbb_state_move()
            tap_get_tms_path()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path_len()
            ft232r_write()
                ft232r_increase_buf_size()
                LOG_ERROR()
            tap_set_state()
        ft232r_write()
    syncbb_stableclocks()
        tap_get_state()
        ft232r_write()
    syncbb_state_move()
    syncbb_path_move()
        tap_state_transition()
        tap_get_state()
        LOG_ERROR()
        tap_state_name()
        exit()
        ft232r_write()
        tap_set_state()
        tap_set_end_state()
    jtag_build_buffer()
    jtag_scan_type()
    syncbb_scan()
        tap_get_end_state()
        tap_get_state()
        syncbb_end_state()
        syncbb_state_move()
        ft232r_write()
        ft232r_send_recv()
    jtag_read_buffer()
    free()
    jtag_sleep()
    syncbb_execute_tms()
        LOG_DEBUG_IO()
        ft232r_write()
    LOG_ERROR()
    exit()
    ft232r_send_recv()
sysfsgpio_init()
    LOG_INFO()
    transport_is_jtag()
    sysfsgpio_jtag_mode_possible()
        is_gpio_valid()
    LOG_ERROR()
    setup_sysfs_gpio()
        is_gpio_valid()
        snprintf()
        open_write_close()
            open()
            write()
            strlen()
            close()
        LOG_WARNING()
        LOG_ERROR()
        strerror()
        gettimeofday()
        timeval_add_time()
        timeval_compare()
        jtag_sleep()
        unexport_sysfs_gpio()
            is_gpio_valid()
            snprintf()
            open_write_close()
            LOG_ERROR()
        open()
    transport_is_swd()
    sysfsgpio_swd_mode_possible()
        is_gpio_valid()
    cleanup_all_fds()
        transport_is_jtag()
        cleanup_fd()
            close()
            unexport_sysfs_gpio()
        transport_is_swd()
sysfsgpio_quit()
    cleanup_all_fds()
sysfsgpio_read()
    lseek()
    read()
    LOG_WARNING()
sysfsgpio_reset()
    LOG_DEBUG()
    write()
    LOG_WARNING()
sysfsgpio_swd_write()
    write()
    LOG_WARNING()
sysfsgpio_swdio_drive()
    snprintf()
    open_write_close()
    LOG_ERROR()
    strerror()
sysfsgpio_swdio_read()
    lseek()
    read()
    LOG_WARNING()
sysfsgpio_write()
    write()
    LOG_WARNING()
tap_set_state_impl()
target2sam3()
target2sam4()
target_buffer_get_u24()
    le_to_h_u24()
    be_to_h_u24()
target_buffer_set_u24()
    h_u24_to_le()
    h_u24_to_be()
target_destroy()
    free()
    jtag_unregister_event_callback()
    jtag_enable_callback()
        jtag_unregister_event_callback()
        jtag_enable_callback()
        target_examine_one()
    Jim_DecrRefCount()
    target_free_all_working_areas()
    list_for_each_entry_safe()
    lh()
    list_del()
    rtos_destroy()
target_jim_get_reg()
    Jim_GetString()
    strcmp()
    Jim_SetResultFormatted()
    Jim_WrongNumArgs()
    Jim_ListLength()
    Jim_NewDictObj()
    current_command_context()
    assert()
    get_current_target()
    Jim_SetResult()
target_jim_set_reg()
    Jim_WrongNumArgs()
    Jim_DictPairs()
    current_command_context()
    assert()
    get_current_target()
    Jim_String()
    register_get_by_name()
    Jim_SetResultFormatted()
    malloc()
    DIV_ROUND_UP()
    LOG_ERROR()
    str_to_buf()
    strlen()
    free()
target_jim_write_memory()
    Jim_WrongNumArgs()
    Jim_GetWide()
    Jim_GetLong()
    Jim_ListLength()
    Jim_GetString()
    strcmp()
    Jim_SetResultFormatted()
    Jim_SetResultString()
    current_command_context()
    assert()
    get_current_target()
    malloc()
    LOG_ERROR()
    MIN()
    Jim_ListGetIndex()
    target_buffer_set_u64()
    target_buffer_set_u32()
    target_buffer_set_u16()
    target_write_phys_memory()
    target_write_memory()
    free()
target_write_phys_u16()
    target_was_examined()
    LOG_ERROR()
    LOG_DEBUG()
    target_buffer_set_u16()
    target_write_phys_memory()
target_write_phys_u64()
    target_was_examined()
    LOG_ERROR()
    LOG_DEBUG()
    target_buffer_set_u64()
    target_write_phys_memory()
target_write_phys_u8()
    target_was_examined()
    LOG_ERROR()
    LOG_DEBUG()
    target_write_phys_memory()
tcl_closed()
    free()
    target_unregister_event_callback()
    tcl_target_callback_event_handler()
        snprintf()
        target_event_name()
        tcl_output()
            connection_write()
            LOG_ERROR()
        strlen()
        target_state_name()
    target_unregister_reset_callback()
        list_for_each_entry()
        list_del()
        free()
    tcl_target_callback_reset_handler()
        snprintf()
        target_reset_mode_name()
            nvp_value2name()
            LOG_ERROR()
        tcl_output()
        strlen()
    target_unregister_trace_callback()
        list_for_each_entry()
        list_del()
        free()
    tcl_target_callback_trace_handler()
        strlen()
        malloc()
        hexify()
        snprintf()
        tcl_output()
        free()
tcl_input()
    connection_read()
    LOG_ERROR()
    strerror()
    realloc()
    tcl_output()
    command_run_line()
    Jim_GetString()
    Jim_GetResult()
tcl_new_connection()
    calloc()
    malloc()
    free()
    get_current_target_or_null()
    target_register_event_callback()
    tcl_target_callback_event_handler()
    target_register_reset_callback()
        malloc()
        LOG_ERROR()
        list_add()
    tcl_target_callback_reset_handler()
    target_register_trace_callback()
        malloc()
        LOG_ERROR()
        list_add()
    tcl_target_callback_trace_handler()
telnet_connection_closed()
    log_remove_callback()
    telnet_log_callback()
        telnet_outputline()
            strchr()
            strlen()
            telnet_write()
                connection_write()
        strlen()
        telnet_write()
        MIN()
        telnet_prompt()
            telnet_write()
            strlen()
    free()
    telnet_save_history()
        get_home_dir()
            getenv()
            snprintf()
            getpwuid()
            getuid()
            alloc_printf()
        LOG_INFO()
        fopen()
        fprintf()
        fclose()
        free()
    delete_debug_msg_receiver()
telnet_input()
    connection_read()
    LOG_ERROR()
    strerror()
    isprint()
    telnet_insert()
        telnet_can_insert()
        telnet_bell()
            telnet_write()
        memmove()
        strncpy()
        telnet_write()
    telnet_exec_line()
        telnet_write()
        strcmp()
        telnet_history_print()
            telnet_write()
            strlen()
            telnet_prompt()
        telnet_history_add()
            strcmp()
            free()
            strdup()
        telnet_save_history()
        command_run_line()
        telnet_prompt()
    telnet_delete_character()
        telnet_write()
        memmove()
    telnet_clear_line()
        telnet_write()
    CTRL()
    telnet_move_cursor()
        telnet_write()
        MIN()
    telnet_interrupt()
        telnet_move_cursor()
        telnet_write()
        telnet_prompt()
    telnet_history_up()
        telnet_history_go()
            telnet_clear_line()
            strlen()
            memcpy()
            telnet_write()
    telnet_history_down()
        telnet_history_go()
    telnet_cut_line_to_end()
        telnet_write()
    telnet_auto_complete()
        LIST_HEAD()
        isspace()
        telnet_bell()
        alloc_printf()
        LOG_ERROR()
        Jim_EvalSource()
        free()
        Jim_GetResult()
        Jim_IncrRefCount()
        Jim_ListLength()
        list_empty()
        list_is_singular()
        telnet_insert()
        telnet_write()
        list_for_each_entry()
        lh()
        strlen()
        telnet_prompt()
        list_for_each_entry_safe()
        Jim_DecrRefCount()
    LOG_DEBUG()
    telnet_remove_character()
        memmove()
        telnet_write()
telnet_new_connection()
    calloc()
    LOG_ERROR()
    strdup()
    command_set_output_handler()
    telnet_output()
        telnet_outputline()
    telnet_write()
    strlen()
    telnet_prompt()
    telnet_load_history()
        get_home_dir()
        LOG_INFO()
        fopen()
        fgets()
        strchr()
        strdup()
        fclose()
        free()
    log_add_callback()
    telnet_log_callback()
testee_halt()
testee_init()
testee_poll()
testee_reset_assert()
testee_reset_deassert()
threadx_create()
    ARRAY_SIZE()
    strcmp()
    LOG_ERROR()
threadx_detect_rtos()
threadx_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
threadx_get_thread_detail()
    LOG_ERROR()
    target_read_buffer()
    strcpy()
    malloc()
    strlen()
threadx_get_thread_reg_list()
    is_thread_id_valid()
    target_read_buffer()
    LOG_ERROR()
    LOG_INFO()
    get_stacking_info()
    rtos_generic_stack_read()
threadx_set_current_thread()
threadx_update_threads()
    LOG_ERROR()
    target_read_buffer()
    rtos_free_threadlist()
    malloc()
    strcpy()
    strlen()
    sprintf()
tms470_auto_probe()
    tms470_probe()
        LOG_WARNING()
        tms470_read_part_info()
tms470_erase()
    LOG_ERROR()
    tms470_read_part_info()
    tms470_unlock_flash()
        tms470_try_flash_keys()
            target_read_u32()
            target_write_u32()
            alive_sleep()
            LOG_INFO()
            tms470_check_flash_unlocked()
        LOG_INFO()
        LOG_WARNING()
    LOG_INFO()
    tms470_erase_sector()
        target_read_u32()
        target_write_u32()
        LOG_DEBUG()
        tms470_flash_initialize_internal_state_machine()
            delay()
            target_read_u32()
            target_write_u32()
            LOG_DEBUG()
        assert()
        target_write_u16()
        alive_sleep()
        tms470_flash_status()
            target_read_u32()
            LOG_DEBUG()
            LOG_WARNING()
tms470_erase_check()
    LOG_ERROR()
    tms470_read_part_info()
    target_read_u32()
    target_write_u32()
    LOG_INFO()
    target_read_buffer()
tms470_protect()
    LOG_ERROR()
    tms470_read_part_info()
    target_read_u32()
    target_write_u32()
tms470_protect_check()
    LOG_ERROR()
    tms470_read_part_info()
    target_read_u32()
    target_write_u32()
    LOG_DEBUG()
tms470_write()
    LOG_ERROR()
    tms470_read_part_info()
    LOG_INFO()
    target_read_u32()
    target_write_u32()
    tms470_flash_initialize_internal_state_machine()
    target_write_u16()
    alive_sleep()
transport_register()
    strcmp()
    LOG_ERROR()
    LOG_DEBUG()
ublast2_libusb_init()
    jtag_libusb_open()
    LOG_INFO()
    load_usb_blaster_firmware()
        LOG_ERROR()
        libusb_claim_interface()
        image_open()
        jtag_libusb_control_transfer()
        ublast2_write_firmware_section()
            LOG_DEBUG()
            image_read_section()
            jtag_libusb_control_transfer()
        image_close()
        libusb_release_interface()
    jtag_libusb_close()
    LOG_ERROR()
    usleep()
    libusb_claim_interface()
    jtag_libusb_control_transfer()
ublast2_libusb_quit()
    libusb_release_interface()
    LOG_ERROR()
    jtag_libusb_close()
ublast2_libusb_read()
    jtag_libusb_bulk_read()
ublast2_libusb_write()
    jtag_libusb_bulk_write()
ublast2_register_libusb()
ublast_execute_queue()
    ublast_initial_wipeout()
        ublast_build_out()
            ublast_compute_pin()
        ublast_buf_write()
            hexdump()
                calloc()
                sprintf()
            LOG_DEBUG_IO()
            free()
        ublast_tms_seq()
            LOG_DEBUG_IO()
            ublast_clock_tms()
                LOG_DEBUG_IO()
                ublast_build_out()
                ublast_queue_byte()
                    nb_buf_remaining()
                    ublast_flush_buffer()
                        ublast_buf_write()
                    LOG_DEBUG_IO()
            ublast_idle_clock()
                ublast_build_out()
                LOG_DEBUG_IO()
                ublast_queue_byte()
        tap_set_state()
    ublast_reset()
        ublast_build_out()
        ublast_queue_byte()
        ublast_flush_buffer()
    ublast_runtest()
        LOG_DEBUG_IO()
        ublast_state_move()
            LOG_DEBUG_IO()
            tap_state_name()
            tap_get_state()
            tap_get_tms_path()
            tap_get_tms_path_len()
            ublast_tms_seq()
            tap_set_state()
        ublast_queue_tdi()
            calloc()
            MIN()
            ublast_queue_byte()
            ublast_queue_bytes()
                LOG_ERROR()
                exit()
                LOG_DEBUG_IO()
                memcpy()
                memset()
                nb_buf_remaining()
                ublast_flush_buffer()
            ublast_read_byteshifted_tdos()
                LOG_DEBUG_IO()
                ublast_flush_buffer()
                ublast_buf_read()
                    hexdump()
                    LOG_DEBUG_IO()
                    free()
            ublast_clock_tdi_flip_tms()
                LOG_DEBUG_IO()
                ublast_build_out()
                ublast_queue_byte()
            ublast_clock_tdi()
                LOG_DEBUG_IO()
                ublast_build_out()
                ublast_queue_byte()
            ublast_read_bitbang_tdos()
                LOG_DEBUG_IO()
                ublast_flush_buffer()
                ublast_buf_read()
            memcpy()
            DIV_ROUND_UP()
            free()
            ublast_idle_clock()
    ublast_stableclocks()
        LOG_DEBUG_IO()
        ublast_queue_tdi()
    ublast_state_move()
    ublast_path_move()
        LOG_DEBUG_IO()
        tap_state_transition()
        tap_get_state()
        ublast_clock_tms()
        tap_set_state()
        ublast_idle_clock()
    ublast_tms()
        LOG_DEBUG_IO()
        ublast_tms_seq()
    ublast_usleep()
        LOG_DEBUG_IO()
        jtag_sleep()
    ublast_scan()
        jtag_scan_type()
        jtag_build_buffer()
        ublast_state_move()
        hexdump()
        DIV_ROUND_UP()
        LOG_DEBUG_IO()
        free()
        ublast_queue_tdi()
        jtag_read_buffer()
    LOG_ERROR()
    ublast_flush_buffer()
ublast_ftdi_init()
    ublast_getftdic()
    LOG_INFO()
    ftdi_init()
    ftdi_usb_open()
    LOG_ERROR()
    ftdi_usb_reset()
    ftdi_set_latency_timer()
    ftdi_get_latency_timer()
    LOG_DEBUG()
    ftdi_disable_bitbang()
ublast_ftdi_quit()
    ublast_getftdic()
    ftdi_usb_close()
    ftdi_deinit()
ublast_ftdi_read()
    ublast_getftdic()
    ftdi_read_data()
    LOG_ERROR()
    ftdi_get_error_string()
ublast_ftdi_write()
    ublast_getftdic()
    ftdi_write_data()
    LOG_ERROR()
    ftdi_get_error_string()
ublast_init()
    strcmp()
    LOG_ERROR()
    strdup()
    LOG_INFO()
    tap_set_state()
ublast_quit()
    ublast_buf_write()
ublast_register_ftdi()
ucos_iii_create()
    ARRAY_SIZE()
    strcmp()
    calloc()
    LOG_ERROR()
    target_register_reset_callback()
    ucos_iii_reset_handler()
ucos_iii_detect_rtos()
ucos_iii_find_or_create_thread()
    LOG_WARNING()
ucos_iii_get_symbol_list_to_lookup()
    calloc()
    ARRAY_SIZE()
    LOG_ERROR()
ucos_iii_get_thread_reg_list()
    ucos_iii_find_thread_address()
        LOG_ERROR()
    LOG_ERROR()
    target_read_memory()
    rtos_generic_stack_read()
ucos_iii_update_threads()
    LOG_ERROR()
    rtos_free_threadlist()
    target_read_u8()
    calloc()
    ucos_iii_update_thread_offsets()
        ARRAY_SIZE()
        target_read_memory()
        LOG_ERROR()
    target_read_memory()
    target_read_u16()
    ucos_iii_find_last_thread_address()
        target_read_memory()
        LOG_ERROR()
ulink_append_led_cmd()
    calloc()
    ulink_allocate_payload()
        calloc()
        LOG_ERROR()
        free()
    free()
    ulink_append_queue()
        ulink_get_queue_size()
        ulink_execute_queued_commands()
            LOG_LEVEL_IS()
            ulink_print_queue()
                printf()
                ulink_print_command()
                    printf()
                    ulink_cmd_id_string()
            libusb_bulk_transfer()
        ulink_post_process_queue()
            ulink_post_process_scan()
                jtag_scan_type()
                jtag_read_buffer()
                LOG_ERROR()
            LOG_ERROR()
        ulink_clear_queue()
            free()
ulink_execute_queue()
    ulink_queue_scan()
        jtag_scan_size()
        DIV_ROUND_UP()
        jtag_scan_type()
        calloc()
        jtag_build_buffer()
        ulink_set_end_state()
            tap_is_state_stable()
            tap_set_end_state()
            LOG_ERROR()
            tap_state_name()
            exit()
        tap_get_tms_path_len()
        tap_get_state()
        tap_get_end_state()
        tap_get_tms_path()
        tap_set_state()
        tap_set_end_state()
        ulink_append_scan_cmd()
            calloc()
            LOG_ERROR()
            free()
            DIV_ROUND_UP()
            ulink_allocate_payload()
            ulink_append_queue()
        free()
    ulink_queue_tlr_reset()
        ulink_append_clock_tms_cmd()
            calloc()
            ulink_allocate_payload()
            free()
            ulink_append_queue()
        tap_set_state()
    ulink_queue_runtest()
        tap_get_state()
        ulink_set_end_state()
        ulink_queue_statemove()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path()
            tap_get_tms_path_len()
            ulink_append_clock_tms_cmd()
            tap_set_state()
        ulink_append_clock_tck_cmd()
            calloc()
            ulink_allocate_payload()
            free()
            ulink_append_queue()
        tap_set_end_state()
    ulink_queue_reset()
        tap_set_state()
        ulink_append_set_signals_cmd()
            calloc()
            ulink_allocate_payload()
            free()
            ulink_append_queue()
    ulink_queue_pathmove()
        tap_state_transition()
        tap_get_state()
        buf_set_u32()
        LOG_ERROR()
        tap_state_name()
        tap_set_state()
        LOG_INFO()
        ulink_append_clock_tms_cmd()
    ulink_queue_sleep()
        ulink_append_sleep_cmd()
            calloc()
            ulink_allocate_payload()
            free()
            ulink_append_queue()
    ulink_queue_stableclocks()
        tap_is_state_stable()
        tap_get_state()
        LOG_ERROR()
        ulink_append_set_signals_cmd()
        ulink_append_clock_tck_cmd()
    LOG_ERROR()
    ulink_execute_queued_commands()
    ulink_post_process_queue()
    ulink_clear_queue()
ulink_init()
    calloc()
    libusb_init()
    ulink_usb_open()
        libusb_get_device_list()
        libusb_get_device_descriptor()
        libusb_open()
        libusb_free_device_list()
    LOG_ERROR()
    free()
    libusb_get_string_descriptor_ascii()
    strncmp()
    LOG_INFO()
    ulink_load_firmware_and_renumerate()
        ulink_load_firmware()
            ulink_cpu_reset()
                libusb_control_transfer()
            LOG_ERROR()
            image_open()
            ulink_write_firmware_section()
                LOG_DEBUG()
                image_read_section()
                libusb_control_transfer()
            image_close()
        ulink_usb_close()
            libusb_release_interface()
            libusb_close()
        usleep()
        ulink_usb_open()
    jtag_libusb_choose_interface()
    ulink_clear_queue()
    ulink_append_test_cmd()
        calloc()
        ulink_allocate_payload()
        free()
        ulink_append_queue()
    ulink_execute_queued_commands()
    libusb_bulk_transfer()
    ulink_append_get_signals_cmd()
        calloc()
        ulink_allocate_payload()
        free()
        ulink_append_queue()
    ulink_print_signal_states()
        LOG_INFO()
ulink_quit()
    ulink_usb_close()
    free()
ulink_speed()
    ulink_khz()
        LOG_ERROR()
        ulink_calculate_delay()
            ceilf()
        LOG_DEBUG_IO()
        ulink_calculate_frequency()
            roundf()
        ulink_append_configure_tck_cmd()
            calloc()
            ulink_allocate_payload()
            free()
            ulink_append_queue()
ulink_speed_div()
usbprog_execute_queue()
    LOG_DEBUG_IO()
    tap_set_state()
    usbprog_reset()
        LOG_DEBUG()
        usbprog_jtag_set_bit()
            usbprog_jtag_message()
                jtag_libusb_bulk_write()
                jtag_libusb_bulk_read()
    usbprog_end_state()
        tap_is_state_stable()
        tap_set_end_state()
        LOG_ERROR()
        exit()
    usbprog_runtest()
        tap_get_state()
        usbprog_end_state()
        usbprog_state_move()
            tap_get_tms_path()
            tap_get_state()
            tap_get_end_state()
            usbprog_jtag_write_tms()
                usbprog_jtag_tms_collect()
            tap_set_state()
        usbprog_jtag_tms_send()
            jtag_libusb_bulk_write()
        usbprog_write()
            usbprog_jtag_write_slice()
                usbprog_jtag_message()
        LOG_DEBUG_IO()
        tap_state_name()
        tap_get_end_state()
    usbprog_state_move()
    usbprog_path_move()
        usbprog_jtag_tms_send()
        tap_state_transition()
        tap_get_state()
        usbprog_write()
        LOG_ERROR()
        tap_state_name()
        exit()
        tap_set_state()
        tap_set_end_state()
    jtag_build_buffer()
    jtag_scan_type()
    usbprog_scan()
        tap_get_end_state()
        usbprog_end_state()
        tap_get_state()
        usbprog_state_move()
        usbprog_jtag_tms_send()
        usbprog_jtag_write_tdi()
            jtag_libusb_bulk_write()
        usbprog_jtag_read_tdo()
            jtag_libusb_bulk_write()
            usleep()
            jtag_libusb_bulk_read()
        usbprog_jtag_write_and_read()
            jtag_libusb_bulk_write()
            usleep()
            jtag_libusb_bulk_read()
        LOG_ERROR()
        exit()
        tap_set_state()
    jtag_read_buffer()
    free()
    jtag_sleep()
    LOG_ERROR()
    exit()
usbprog_init()
    usbprog_jtag_open()
        jtag_libusb_open()
        malloc()
        libusb_set_configuration()
        libusb_claim_interface()
        libusb_set_interface_alt_setting()
    LOG_ERROR()
    LOG_INFO()
    usbprog_jtag_init()
        usbprog_jtag_set_direction()
            usbprog_jtag_message()
    usbprog_reset()
    usbprog_write()
usbprog_jtag_close()
    libusb_close()
    free()
usbprog_jtag_get_bit()
    usbprog_jtag_message()
usbprog_jtag_get_port()
    usbprog_jtag_message()
usbprog_quit()
usbreset_isr()
usbtodelay_delayms()
    usbtodelay_delay()
        usbtoxxx_ensure_buffer_size()
            memset()
            LOG_BUG()
            usbtoxxx_save_context()
            usbtoxxx_pop_context()
            usbtoxxx_execute_command()
                LOG_BUG()
                versaloon_free_want_pos()
                    free()
                    ARRAY_SIZE()
                usbtoxxx_validate_current_command_type()
                    LOG_BUG()
                    TO_STR()
                    SET_LE_U16()
                SET_LE_U16()
                versaloon_send_command()
                    LOG_BUG()
                    TO_STR()
                    libusb_bulk_transfer()
                    LOG_ERROR()
                LOG_ERROR()
                usbtoxxx_get_type_name()
                memcpy()
                free()
                sleep_ms()
            memcpy()
        usbtoxxx_validate_current_command_type()
        LOG_BUG()
        SET_LE_U16()
        versaloon_add_pending()
            LOG_BUG()
usbtodelay_delayus()
    usbtodelay_delay()
usbtogpio_config()
    LOG_BUG()
    SET_LE_U16()
    usbtoxxx_conf_command()
usbtogpio_fini()
    usbtoxxx_fini_command()
usbtogpio_in()
    LOG_BUG()
    SET_LE_U16()
    usbtoxxx_in_command()
usbtogpio_init()
    usbtoxxx_init_command()
usbtogpio_out()
    LOG_BUG()
    SET_LE_U16()
    usbtoxxx_out_command()
usbtojtagraw_config()
    LOG_BUG()
    SET_LE_U32()
    usbtoxxx_conf_command()
usbtojtagraw_execute()
    LOG_BUG()
    SET_LE_U32()
    memcpy()
    usbtoxxx_inout_command()
usbtojtagraw_fini()
    usbtoxxx_fini_command()
usbtojtagraw_init()
    usbtoxxx_init_command()
usbtopoll_checkfail()
    LOG_BUG()
    usbtoxxx_ensure_buffer_size()
    usbtoxxx_validate_current_command_type()
    SET_LE_U16()
usbtopoll_checkok()
    LOG_BUG()
    usbtoxxx_ensure_buffer_size()
    usbtoxxx_validate_current_command_type()
    SET_LE_U16()
usbtopoll_end()
    LOG_BUG()
    usbtoxxx_ensure_buffer_size()
    usbtoxxx_validate_current_command_type()
    versaloon_add_pending()
usbtopoll_start()
    usbtoxxx_ensure_buffer_size()
    usbtoxxx_save_context()
    usbtoxxx_validate_current_command_type()
    LOG_BUG()
    SET_LE_U16()
    versaloon_add_pending()
usbtopoll_verifybuff()
    LOG_BUG()
    usbtoxxx_ensure_buffer_size()
    usbtoxxx_validate_current_command_type()
    SET_LE_U16()
    memcpy()
usbtoswd_config()
    LOG_BUG()
    SET_LE_U16()
    usbtoxxx_conf_command()
usbtoswd_fini()
    usbtoxxx_fini_command()
usbtoswd_init()
    usbtoxxx_init_command()
usbtoswd_seqin()
    LOG_BUG()
    SET_LE_U16()
    usbtoxxx_in_command()
usbtoswd_seqout()
    LOG_BUG()
    SET_LE_U16()
    memcpy()
    usbtoxxx_out_command()
usbtoswd_transact()
    LOG_BUG()
    SET_LE_U32()
    memset()
    versaloon_set_extra_data()
    versaloon_set_callback()
    usbtoswd_read_callback()
    usbtoswd_write_callback()
    usbtoxxx_inout_command()
usbtoxxx_add_command()
    usbtoxxx_ensure_buffer_size()
    usbtoxxx_validate_current_command_type()
    LOG_BUG()
    SET_LE_U16()
    GET_LE_U16()
    memcpy()
    versaloon_add_pending()
usbtoxxx_interface_supported()
vdebug_dap_connect()
    dap_dp_init()
vdebug_dap_queue_ap_abort()
    vdebug_reg_write()
        le_to_h_u16()
        h_u64_to_le()
        h_u32_to_le()
        h_u16_to_le()
        vdebug_run_reg_queue()
            h_u16_to_le()
            le_to_h_u16()
            timeval_ms()
            vdebug_wait_server()
                vdebug_socket_send()
                    send()
                    le_to_h_u16()
                    LOG_WARNING()
                    vdebug_socket_error()
                        WSAGetLastError()
                    LOG_DEBUG_IO()
                vdebug_socket_receive()
                    le_to_h_u16()
                    recv()
                    LOG_WARNING()
                    vdebug_socket_error()
                    LOG_DEBUG_IO()
                le_to_h_u32()
                LOG_DEBUG_IO()
            le_to_h_u64()
            list_first_entry()
            lh()
            list_del()
            free()
            memcpy()
            LOG_DEBUG_IO()
            le_to_h_u32()
            LOG_ERROR()
            h_u32_to_le()
            assert()
            list_empty()
vdebug_dap_queue_ap_read()
    vdebug_reg_write()
    vdebug_reg_read()
        le_to_h_u16()
        h_u64_to_le()
        h_u16_to_le()
        calloc()
        list_add_tail()
        vdebug_run_reg_queue()
vdebug_dap_queue_ap_write()
    vdebug_reg_write()
vdebug_dap_queue_dp_read()
    vdebug_reg_read()
vdebug_dap_queue_dp_write()
    vdebug_reg_write()
vdebug_dap_run()
    le_to_h_u16()
    vdebug_run_reg_queue()
vdebug_dap_send_sequence()
vdebug_init()
    vdebug_socket_open()
        socket()
        vdebug_socket_error()
        setsockopt()
        LOG_ERROR()
        getaddrinfo()
        h_u16_to_be()
        connect()
        close_socket()
        freeaddrinfo()
    calloc()
    close_socket()
    LOG_ERROR()
    free()
    transport_is_jtag()
    vdebug_open()
        h_u16_to_le()
        vdebug_wait_server()
        LOG_ERROR()
        le_to_h_u16()
        h_u32_to_le()
        strlen()
        memcpy()
        le_to_h_u32()
        INIT_LIST_HEAD()
        LOG_DEBUG()
    vdebug_mem_open()
        h_u16_to_le()
        strlen()
        memcpy()
        le_to_h_u16()
        vdebug_wait_server()
        LOG_ERROR()
        LOG_WARNING()
        le_to_h_u32()
        LOG_DEBUG()
    LOG_INFO()
vdebug_jtag_div()
    LOG_DEBUG()
vdebug_jtag_execute_queue()
vdebug_jtag_khz()
    LOG_DEBUG()
vdebug_jtag_path_move()
    DIV_ROUND_UP()
    LOG_INFO()
    memset()
    tap_state_transition()
    tap_get_state()
    buf_set_u32()
    tap_set_state()
    vdebug_jtag_tms_seq()
        LOG_INFO()
        vdebug_jtag_shift_tap()
            le_to_h_u32()
            LOG_ERROR()
            le_to_h_u16()
            h_u64_to_le()
            h_u16_to_le()
            calloc()
            list_add_tail()
            vdebug_run_jtag_queue()
                h_u16_to_le()
                le_to_h_u16()
                timeval_ms()
                vdebug_wait_server()
                le_to_h_u64()
                list_first_entry()
                lh()
                list_del()
                free()
                LOG_DEBUG_IO()
                LOG_ERROR()
                h_u32_to_le()
                assert()
                list_empty()
vdebug_jtag_runtest()
    tap_get_state()
    tap_get_tms_path()
    tap_get_tms_path_len()
    LOG_DEBUG()
    vdebug_jtag_shift_tap()
    tap_set_state()
vdebug_jtag_scan()
    tap_get_state()
    tap_get_tms_path()
    tap_get_tms_path_len()
    jtag_scan_size()
    LOG_DEBUG()
    tap_set_state()
vdebug_jtag_speed()
    LOG_INFO()
    vdebug_jtag_clock()
        h_u16_to_le()
        h_u32_to_le()
        vdebug_wait_server()
        LOG_ERROR()
        LOG_DEBUG()
vdebug_jtag_stableclocks()
    LOG_INFO()
    tap_get_state()
    vdebug_jtag_shift_tap()
vdebug_jtag_tlr()
    tap_get_state()
    tap_get_tms_path()
    tap_get_tms_path_len()
    LOG_INFO()
    vdebug_jtag_shift_tap()
    tap_set_state()
vdebug_quit()
    vdebug_mem_close()
        h_u32_to_le()
        h_u16_to_le()
        vdebug_wait_server()
        LOG_DEBUG()
    vdebug_close()
        h_u16_to_le()
        vdebug_wait_server()
        LOG_DEBUG()
    LOG_INFO()
    close_socket()
    free()
vdebug_reset()
    transport_is_jtag()
    LOG_INFO()
    vdebug_sig_set()
        h_u16_to_le()
        h_u32_to_le()
        vdebug_wait_server()
        LOG_ERROR()
        LOG_DEBUG()
    vdebug_wait()
        h_u16_to_le()
        h_u32_to_le()
        vdebug_wait_server()
        LOG_ERROR()
        LOG_DEBUG()
vdebug_sleep()
    LOG_INFO()
    vdebug_wait()
versaloon_add_want_pos()
    malloc()
    LOG_ERROR()
versaloon_delay_ms()
    usbtodelay_delay()
versaloon_delay_us()
    usbtodelay_delay()
versaloon_init()
    malloc()
    LOG_ERROR()
    versaloon_send_command()
    versaloon_fini()
        usbtoxxx_fini()
        versaloon_free_want_pos()
        free()
    LOG_INFO()
    free()
    usbtoxxx_init()
        usbtoinfo_get_abilities()
            usbtoxxx_ensure_buffer_size()
            usbtoxxx_validate_current_command_type()
            LOG_BUG()
            versaloon_add_pending()
        usbtoxxx_execute_command()
        LOG_INFO()
        GET_LE_U32()
    versaloon_get_target_voltage()
        LOG_BUG()
        TO_STR()
        versaloon_send_command()
        LOG_ERROR()
versaloon_set_pending_id()
versaloon_set_target_voltage()
    usbtopwr_init()
        usbtoxxx_init_command()
    usbtopwr_config()
        LOG_BUG()
        usbtoxxx_conf_command()
    usbtopwr_output()
        LOG_BUG()
        usbtoxxx_out_command()
    usbtopwr_fini()
        usbtoxxx_fini_command()
    usbtoxxx_execute_command()
virtex2_load()
    xilinx_read_bit_file()
        fopen()
        LOG_ERROR()
        strerror()
        fread()
        fclose()
        read_section()
            LOG_ERROR()
            fread()
            be_to_h_u32()
            be_to_h_u16()
            malloc()
        xilinx_free_bit_file()
            free()
        LOG_DEBUG()
    virtex2_load_prepare()
        virtex2_set_instr()
            buf_get_u64()
            calloc()
            DIV_ROUND_UP()
            LOG_ERROR()
            buf_set_u64()
            jtag_add_ir_scan()
            free()
        jtag_execute_queue()
        jtag_add_sleep()
    xilinx_free_bit_file()
    flip_u32()
    jtag_add_dr_scan()
    jtag_execute_queue()
    virtex2_load_cleanup()
        jtag_add_tlr()
        virtex2_set_instr()
        jtag_add_runtest()
        jtag_execute_queue()
virtual_auto_probe()
    virtual_get_master_bank()
        get_flash_bank_by_name_noprobe()
        LOG_ERROR()
    virtual_update_bank_info()
        virtual_get_master_bank()
virtual_blank_check()
    virtual_get_master_bank()
virtual_erase()
    virtual_get_master_bank()
virtual_flash_read()
    virtual_get_master_bank()
virtual_info()
    virtual_get_master_bank()
    command_print_sameline()
virtual_probe()
    virtual_get_master_bank()
    virtual_update_bank_info()
virtual_protect()
    virtual_get_master_bank()
    flash_driver_protect()
virtual_protect_check()
    virtual_get_master_bank()
virtual_write()
    virtual_get_master_bank()
vsllink_execute_queue()
    LOG_DEBUG_IO()
    tap_state_name()
    vsllink_end_state()
        tap_is_state_stable()
        tap_set_end_state()
        LOG_ERROR()
        exit()
    vsllink_runtest()
        tap_get_end_state()
        tap_get_state()
        vsllink_end_state()
        vsllink_state_move()
            tap_get_tms_path()
            tap_get_state()
            tap_get_end_state()
            tap_get_tms_path_len()
            vsllink_tap_append_step()
                vsllink_tap_execute()
                    vsllink_jtag_execute()
                        buf_set_buf()
                        LOG_DEBUG_IO()
                        LOG_LEVEL_IS()
                        vsllink_debug_buffer()
                            snprintf()
                            strcat()
                            LOG_DEBUG_IO()
                        DIV_ROUND_UP()
                        jtag_read_buffer()
                        vsllink_tap_init()
                        free()
                        LOG_ERROR()
            tap_set_state()
        vsllink_stableclocks()
            vsllink_tap_append_step()
    vsllink_state_move()
    vsllink_path_move()
        tap_set_end_state()
        tap_get_state()
    jtag_build_buffer()
    LOG_LEVEL_IS()
    vsllink_debug_buffer()
    DIV_ROUND_UP()
    jtag_scan_type()
    vsllink_scan()
        tap_get_end_state()
        vsllink_end_state()
        tap_get_state()
        vsllink_state_move()
        vsllink_tap_append_scan()
            vsllink_tap_ensure_pending()
                vsllink_tap_execute()
            vsllink_tap_append_step()
        vsllink_tap_append_step()
        tap_set_state()
    vsllink_tap_execute()
    jtag_sleep()
    tap_get_state()
    LOG_ERROR()
    exit()
    vsllink_stableclocks()
    vsllink_tms()
        vsllink_tap_append_step()
vsllink_init()
    vsllink_interface_init()
        malloc()
        LOG_ERROR()
        libusb_init()
        vsllink_usb_open()
            libusb_get_device_list()
            libusb_get_device_descriptor()
            libusb_open()
            vsllink_check_usb_strings()
                adapter_get_required_serial()
                libusb_get_string_descriptor_ascii()
                strncmp()
                strstr()
            libusb_close()
            libusb_free_device_list()
            libusb_claim_interface()
            LOG_ERROR()
        LOG_DEBUG()
    vsllink_swd_frequency()
        delay()
        ARRAY_SIZE()
        LOG_DEBUG()
    adapter_get_speed_khz()
    vsllink_swd_switch_seq()
        LOG_DEBUG()
        LOG_ERROR()
    vsllink_free_buffer()
        free()
    malloc()
    vsllink_quit()
        vsllink_free_buffer()
        vsllink_usb_close()
            libusb_release_interface()
            libusb_close()
        libusb_exit()
        free()
    vsllink_reset()
        LOG_DEBUG()
    vsllink_tap_init()
vsllink_khz()
vsllink_speed()
    vsllink_swd_frequency()
vsllink_speed_div()
vsllink_swd_init()
    LOG_INFO()
vsllink_swd_read_reg()
vsllink_swd_run_queue()
vsllink_swd_write_reg()
w600_auto_probe()
    w600_probe()
        w600_get_flash_id()
        LOG_INFO()
        ARRAY_SIZE()
        LOG_ERROR()
        assert()
        free()
        malloc()
w600_erase()
    LOG_ERROR()
    w600_start()
    QFLASH_ADDR()
w600_write()
    LOG_ERROR()
    LOG_WARNING()
    target_write_buffer()
    w600_start()
    QFLASH_ADDR()
win_select()
    FD_ZERO()
    SAFE_FD_ISSET()
    FD_SET()
    select()
    GetTickCount()
    MsgWaitForMultipleObjects()
    WaitForSingleObject()
    PeekNamedPipe()
write_memory()
    get_info()
    jtag_add_ir_scan()
    cache_set_store()
    cache_set_load()
    cache_set_jump()
    cache_set()
    cache_write()
    cache_get()
    LOG_DEBUG()
    setup_write_memory()
        cache_set32()
        lb()
        sb()
        lh()
        sh()
        lw()
        sw()
        LOG_ERROR()
        addi()
        cache_set_jump()
        cache_write()
    scans_new()
    MIN()
    scans_reset()
    scans_add_read32()
    scans_add_write32()
    scans_execute()
    LOG_ERROR()
    scans_get_u32()
    increase_dbus_busy_delay()
    increase_interrupt_high_delay()
    wait_for_debugint_clear()
    LOG_INFO()
    cache_clean()
    write_gpr()
        cache_set_load()
        cache_set_jump()
        cache_set()
        cache_write()
    scans_delete()
    register_write()
x86_32_common_add_watchpoint()
    check_not_halted()
    set_watchpoint()
        target_to_x86_32()
        LOG_DEBUG()
        LOG_ERROR()
        set_debug_regs()
        watchpoint_set()
        LOG_USER()
x86_32_common_mmu()
x86_32_common_read_memory()
    target_to_x86_32()
    LOG_DEBUG()
    check_not_halted()
    LOG_ERROR()
    calcaddr_physfromlin()
    x86_32_common_read_phys_mem()
x86_32_common_remove_watchpoint()
    check_not_halted()
    unset_watchpoint()
        target_to_x86_32()
        LOG_DEBUG()
        LOG_WARNING()
        unset_debug_regs()
        LOG_USER()
x86_32_common_virt2phys()
    target_to_x86_32()
    buf_get_u32()
    calcaddr_physfromlin()
    LOG_ERROR()
x86_32_common_write_memory()
    target_to_x86_32()
    LOG_DEBUG()
    check_not_halted()
    LOG_ERROR()
    calcaddr_physfromlin()
    x86_32_common_write_phys_mem()
        target_to_x86_32()
        check_not_halted()
        LOG_ERROR()
        malloc()
        memcpy()
        write_phys_mem()
        free()
x86_32_get_gdb_reg_list()
    target_to_x86_32()
    LOG_DEBUG()
    malloc()
    LOG_ERROR()
    buf_get_u32()
xcf_auto_probe()
    xcf_probe()
        free()
        LOG_ERROR()
        malloc()
        fill_sector_table()
        LOG_INFO()
        product_name()
xcf_erase()
    isc_enter()
        read_status()
            jtag_add_ir_scan()
            jtag_execute_queue()
        jtag_add_ir_scan()
        jtag_execute_queue()
        LOG_ERROR()
    isc_clear_protect()
        fill_select_block()
        isc_set_register()
            jtag_add_ir_scan()
            jtag_add_dr_scan()
            jtag_execute_queue()
            isc_wait_erase_program()
                timeval_ms()
                isc_read_register()
                    jtag_add_ir_scan()
                    jtag_add_dr_scan()
                    jtag_execute_queue()
    isc_erase_sectors()
        fill_select_block()
        isc_set_register()
    isc_leave()
        read_status()
        jtag_add_ir_scan()
        jtag_execute_queue()
        alive_sleep()
        LOG_ERROR()
xcf_erase_check()
    isc_enter()
    jtag_add_ir_scan()
    jtag_execute_queue()
    alive_sleep()
    jtag_add_dr_scan()
    isc_leave()
    sector_state()
xcf_info()
    command_print_sameline()
    product_name()
xcf_protect()
    isc_enter()
    isc_set_protect()
        isc_program_register()
            jtag_add_ir_scan()
            jtag_add_dr_scan()
            jtag_execute_queue()
            isc_wait_erase_program()
    isc_clear_protect()
    isc_erase_sectors()
    isc_leave()
xcf_protect_check()
    isc_enter()
    isc_read_register()
    isc_leave()
    sector_state()
xcf_read()
    read_write_data()
        malloc()
        isc_enter()
        need_bit_reverse()
            memset()
            memcmp()
        isc_adr_shift()
            h_u24_to_le()
            isc_set_register()
        memset()
        flip_u8()
            flip_u32()
        memcpy()
        isc_program_data_page()
            isc_program_register()
        LOG_DEBUG()
        isc_data_read_out()
            jtag_add_ir_scan()
            jtag_add_dr_scan()
            jtag_execute_queue()
        isc_set_data_done()
            isc_program_register()
        free()
        isc_leave()
xcf_write()
    read_write_data()
xcrc32()
    asm()
xds110_execute_queue()
    xds110_execute_command()
        xds110_flush()
            ocd_scan_request()
                memcpy()
                xds_execute()
                    usb_send_command()
                        xds110_set_u16()
                        usb_write()
                            libusb_bulk_transfer()
                            libusb_clear_halt()
                    usb_get_response()
                        usb_read()
                            libusb_bulk_transfer()
                        xds110_get_u16()
                        memcpy()
                    LOG_DEBUG()
                    xds110_get_u32()
            DIV_ROUND_UP()
            xds110_legacy_scan()
                xds_jtag_scan()
                    DIV_ROUND_UP()
                    xds110_set_u16()
                    memcpy()
                    xds_execute()
            xds110_legacy_runtest()
                xds_goto_state()
                    xds110_set_u32()
                    xds_execute()
                xds_cycle_tck()
                    xds110_set_u32()
                    xds_execute()
            xds110_legacy_stableclocks()
                xds_cycle_tck()
            LOG_ERROR()
            exit()
            bit_copy()
        xds110_execute_sleep()
            jtag_sleep()
        xds110_execute_tlr_reset()
            xds_goto_state()
        xds110_execute_pathmove()
            malloc()
            LOG_ERROR()
            ocd_pathmove()
                xds110_set_u32()
                memcpy()
                xds_execute()
            exit()
            free()
        xds110_queue_scan()
            DIV_ROUND_UP()
            xds110_flush()
            LOG_ERROR()
            exit()
            memset()
            bit_copy()
        xds110_queue_runtest()
            xds110_flush()
        xds110_queue_stableclocks()
            xds110_flush()
        LOG_ERROR()
        exit()
    xds110_flush()
xds110_init()
    usb_connect()
        libusb_init()
        libusb_get_device_list()
        libusb_get_device_descriptor()
        ARRAY_SIZE()
        libusb_open()
        adapter_get_required_serial()
        libusb_get_string_descriptor_ascii()
        strcmp()
        libusb_close()
        libusb_free_device_list()
        libusb_set_auto_detach_kernel_driver()
        libusb_claim_interface()
        libusb_release_interface()
        libusb_exit()
        LOG_INFO()
        LOG_ERROR()
    xds_connect()
        xds_execute()
    xds_version()
        xds_execute()
        xds110_get_u32()
        xds110_get_u16()
    xds_set_supply()
        xds110_set_u32()
        xds_execute()
    alive_sleep()
    LOG_WARNING()
    xds_set_trst()
        xds_execute()
    xds_cycle_tck()
    swd_connect()
        xds_execute()
    cjtag_connect()
        xds110_set_u32()
        xds_execute()
    cmapi_connect()
        xds_execute()
        xds110_get_u32()
    cmapi_acquire()
        xds_execute()
    xds110_quit()
        cmapi_release()
            xds_execute()
        cmapi_disconnect()
            xds_execute()
        swd_disconnect()
            xds_execute()
        cjtag_disconnect()
            xds_execute()
        xds_disconnect()
            xds_execute()
        usb_disconnect()
            libusb_release_interface()
            libusb_close()
            libusb_exit()
            LOG_INFO()
    xds110_show_info()
        LOG_INFO()
        adapter_get_required_serial()
        LOG_WARNING()
xds110_khz()
xds110_reset()
    xds_set_trst()
    xds_set_srst()
        xds_execute()
    xds_cycle_tck()
xds110_speed()
    LOG_INFO()
    xds_set_tck_delay()
        xds110_set_u32()
        xds_execute()
xds110_speed_div()
xds110_swd_init()
xds110_swd_read_reg()
    assert()
    xds110_swd_queue_cmd()
        xds110_swd_run_queue()
            ocd_dap_request()
                memcpy()
                xds_execute()
            xds110_legacy_write_reg()
                cmapi_write_dap_reg()
                    xds110_set_u32()
                    xds_execute()
                LOG_ERROR()
            xds110_legacy_read_reg()
                cmapi_read_dap_reg()
                    xds_execute()
                    xds110_get_u32()
                LOG_ERROR()
        LOG_DEBUG()
xds110_swd_switch_seq()
    LOG_ERROR()
    LOG_DEBUG()
    swd_connect()
    cmapi_connect()
    cmapi_acquire()
    swd_disconnect()
    cjtag_connect()
xds110_swd_write_reg()
    assert()
    xds110_swd_queue_cmd()
xilinx_get_ipdbg_hub()
    LOG_ERROR()
xlnx_pcie_xvc_execute_queue()
    xlnx_pcie_xvc_execute_command()
        LOG_DEBUG()
        xlnx_pcie_xvc_execute_stableclocks()
            tap_get_state()
            write()
            LOG_DEBUG()
            MIN()
            xlnx_pcie_xvc_transact()
                xlnx_pcie_xvc_write_reg()
                    pwrite()
                    LOG_ERROR()
                xlnx_pcie_xvc_read_reg()
                    pread()
                    LOG_ERROR()
                LOG_DEBUG_IO()
        xlnx_pcie_xvc_execute_runtest()
            LOG_DEBUG()
            tap_get_end_state()
            tap_get_state()
            tap_set_end_state()
            xlnx_pcie_xvc_execute_statemove()
                tap_get_tms_path()
                tap_get_state()
                tap_get_end_state()
                tap_get_tms_path_len()
                LOG_DEBUG()
                tap_state_name()
                xlnx_pcie_xvc_transact()
                tap_set_state()
            write()
            MIN()
            xlnx_pcie_xvc_transact()
        tap_set_end_state()
        xlnx_pcie_xvc_execute_statemove()
        xlnx_pcie_xvc_execute_pathmove()
            LOG_DEBUG()
            tap_state_transition()
            tap_get_state()
            xlnx_pcie_xvc_transact()
            LOG_ERROR()
            tap_state_name()
            tap_set_state()
            tap_set_end_state()
        xlnx_pcie_xvc_execute_scan()
            jtag_scan_type()
            write()
            jtag_build_buffer()
            LOG_DEBUG()
            tap_state_name()
            tap_get_state()
            tap_set_end_state()
            xlnx_pcie_xvc_execute_statemove()
            MIN()
            BIT()
            buf_get_u32()
            xlnx_pcie_xvc_transact()
            buf_set_u32()
            jtag_read_buffer()
            free()
            tap_get_end_state()
        xlnx_pcie_xvc_execute_reset()
            LOG_DEBUG()
        xlnx_pcie_xvc_execute_sleep()
            LOG_DEBUG()
            usleep()
        xlnx_pcie_xvc_execute_tms()
            write()
            LOG_DEBUG()
            MIN()
            buf_get_u32()
            xlnx_pcie_xvc_transact()
        LOG_ERROR()
xlnx_pcie_xvc_init()
    snprintf()
    open()
    LOG_ERROR()
    LOG_INFO()
    xlnx_pcie_xvc_read_reg()
    LOG_DEBUG()
    PCI_EXT_CAP_ID()
    PCI_EXT_CAP_VER()
    PCI_EXT_CAP_NEXT()
    PCI_VNDR_HEADER_ID()
    PCI_VNDR_HEADER_REV()
    PCI_VNDR_HEADER_LEN()
    close()
xlnx_pcie_xvc_quit()
    close()
xlnx_pcie_xvc_swd_init()
xlnx_pcie_xvc_swd_read_reg()
    assert()
    xlnx_pcie_xvc_transact()
    MASK_ACK()
    LOG_DEBUG()
    MASK_PAR()
    parity_u32()
    LOG_DEBUG_IO()
    swd_clear_sticky_errors()
        xlnx_pcie_xvc_swd_write_reg()
            assert()
            xlnx_pcie_xvc_transact()
            MASK_ACK()
            parity_u32()
            LOG_DEBUG()
            LOG_DEBUG_IO()
            swd_clear_sticky_errors()
        swd_cmd()
xlnx_pcie_xvc_swd_run_queue()
    xlnx_pcie_xvc_transact()
    LOG_DEBUG()
xlnx_pcie_xvc_swd_switch_seq()
    LOG_DEBUG()
    xlnx_pcie_xvc_swd_sequence()
        write()
        send()
        MIN()
        buf_get_u32()
        xlnx_pcie_xvc_transact()
    LOG_ERROR()
xmc1xxx_auto_probe()
    xmc1xxx_probe()
        LOG_WARNING()
        target_read_u32()
        LOG_ERROR()
        LOG_DEBUG()
        calloc()
xmc1xxx_erase()
    LOG_DEBUG()
    LOG_WARNING()
    xmc1xxx_nvm_check_idle()
        target_read_u16()
        LOG_WARNING()
        xmc1xxx_nvm_set_idle()
            target_write_u16()
    target_alloc_working_area()
    LOG_ERROR()
    target_write_buffer()
    init_reg_param()
    buf_set_u32()
    target_run_algorithm()
    ARRAY_SIZE()
    xmc1xxx_nvm_set_idle()
    destroy_reg_param()
    target_free_working_area()
xmc1xxx_erase_check()
    LOG_WARNING()
    target_alloc_working_area()
    LOG_ERROR()
    target_write_buffer()
    init_reg_param()
    buf_set_u32()
    xmc1xxx_nvm_check_idle()
    LOG_DEBUG()
    target_run_algorithm()
    ARRAY_SIZE()
    xmc1xxx_nvm_set_idle()
    target_read_u16()
    destroy_reg_param()
    target_free_working_area()
xmc1xxx_get_info_command()
    LOG_WARNING()
    target_read_u32()
    LOG_ERROR()
    LOG_DEBUG()
    command_print_sameline()
xmc1xxx_protect_check()
    LOG_WARNING()
    target_read_u32()
    LOG_ERROR()
    LOG_DEBUG()
xmc1xxx_write()
    DIV_ROUND_UP()
    LOG_DEBUG()
    IS_ALIGNED()
    LOG_ERROR()
    LOG_WARNING()
    target_alloc_working_area()
    target_write_buffer()
    MAX()
    MIN()
    target_get_working_area_avail()
    init_reg_param()
    buf_set_u32()
    target_write_memory()
    xmc1xxx_nvm_check_idle()
    target_run_algorithm()
    ARRAY_SIZE()
    xmc1xxx_nvm_set_idle()
    destroy_reg_param()
    target_free_working_area()
xmc4xxx_erase()
    LOG_ERROR()
    xmc4xxx_probe()
        LOG_WARNING()
        target_read_u32()
        LOG_ERROR()
        LOG_DEBUG()
        xmc4xxx_load_bank_layout()
            LOG_DEBUG()
            LOG_ERROR()
            calloc()
    xmc4xxx_get_sector_start_addr()
    LOG_DEBUG()
    xmc4xxx_erase_sector()
        xmc4xxx_write_command_sequence()
        ARRAY_SIZE()
        target_read_u32()
        LOG_ERROR()
        xmc4xxx_wait_status_busy()
            xmc4xxx_get_flash_status()
                target_read_u32()
                LOG_ERROR()
            LOG_ERROR()
            alive_sleep()
            keep_alive()
    xmc4xxx_wait_status_busy()
    xmc4xxx_clear_flash_status()
        LOG_INFO()
        target_write_u32()
        LOG_ERROR()
xmc4xxx_get_info_command()
    LOG_WARNING()
    target_read_u32()
    LOG_ERROR()
    command_print_sameline()
    snprintf()
    strcat()
    strncat()
    strlen()
xmc4xxx_protect()
    LOG_ERROR()
    LOG_WARNING()
    xmc4xxx_temp_unprotect()
        LOG_ERROR()
        xmc4xxx_write_command_sequence()
        ARRAY_SIZE()
        xmc4xxx_get_flash_status()
        LOG_INFO()
    xmc4xxx_flash_protect()
        LOG_ERROR()
        xmc4xxx_get_flash_status()
        LOG_DEBUG()
        target_buffer_set_u32()
        xmc4xxx_write_page()
            xmc4xxx_enter_page_mode()
                target_write_u32()
                LOG_ERROR()
                xmc4xxx_get_flash_status()
            xmc4xxx_write_command_sequence()
            ARRAY_SIZE()
            LOG_ERROR()
            xmc4xxx_get_flash_status()
            xmc4xxx_wait_status_busy()
xmc4xxx_protect_check()
    target_read_u32()
    LOG_ERROR()
    ARRAY_SIZE()
xmc4xxx_write()
    LOG_ERROR()
    xmc4xxx_probe()
    MIN()
    LOG_INFO()
    memset()
    memcpy()
    xmc4xxx_write_page()
    xmc4xxx_clear_flash_status()
xscale_add_breakpoint()
    target_to_xscale()
    LOG_ERROR()
    xscale_set_breakpoint()
        target_to_xscale()
        LOG_TARGET_ERROR()
        LOG_WARNING()
        xscale_set_reg_u32()
            buf_set_u32()
            xscale_set_reg()
                target_to_xscale()
                buf_get_u32()
                strcmp()
                buf_set_u32()
                xscale_write_dcsr()
                    target_to_xscale()
                    xscale_jtag_set_instr()
                        assert()
                        buf_get_u32()
                        memset()
                        buf_set_u32()
                        jtag_add_ir_scan()
                    buf_set_u32()
                    memset()
                    jtag_add_dr_scan()
                    jtag_check_value_mask()
                        assert()
                        jtag_execute_queue_noclear()
                        jtag_check_value_inner()
                        jtag_set_error()
                    jtag_execute_queue()
                    LOG_ERROR()
                xscale_write_rx()
                    target_to_xscale()
                    xscale_jtag_set_instr()
                    memset()
                    gettimeofday()
                    timeval_add_time()
                    LOG_DEBUG()
                    jtag_add_dr_scan()
                    jtag_check_value_mask()
                    jtag_execute_queue()
                    LOG_ERROR()
                    alive_sleep()
                    keep_alive()
                xscale_send_u32()
                    target_to_xscale()
                    buf_set_u32()
                    xscale_write_rx()
        breakpoint_hw_set()
        LOG_ERROR()
        target_read_memory()
        target_write_u32()
        target_write_u16()
        xscale_send_u32()
xscale_add_watchpoint()
    target_to_xscale()
    LOG_ERROR()
    LOG_WARNING()
xscale_arch_state()
    target_to_xscale()
    LOG_ERROR()
    arm_arch_state()
    LOG_USER()
xscale_assert_reset()
    target_to_xscale()
    target_was_examined()
    LOG_WARNING()
    LOG_DEBUG()
    target_state_name()
    jtag_add_reset()
    jtag_add_sleep()
    jtag_execute_queue()
    xscale_jtag_set_instr()
    buf_set_u32()
    xscale_write_dcsr()
    target_halt()
xscale_deassert_reset()
    target_to_xscale()
    LOG_DEBUG()
    xscale_free_trace_data()
        free()
    register_cache_invalidate()
    jtag_add_reset()
    jtag_add_sleep()
    jtag_add_runtest()
    jtag_execute_queue()
    buf_set_u32()
    xscale_write_dcsr()
    le_to_h_u32()
    xscale_load_ic()
        target_to_xscale()
        LOG_DEBUG()
        xscale_jtag_set_instr()
        buf_set_u32()
        memset()
        jtag_add_dr_scan()
        memcpy()
        parity()
        jtag_execute_queue()
    xscale_debug_entry()
        target_to_xscale()
        xscale_read_dcsr()
            target_to_xscale()
            xscale_jtag_set_instr()
            buf_set_u32()
            memset()
            jtag_add_dr_scan()
            jtag_check_value_mask()
            jtag_execute_queue()
            LOG_ERROR()
        xscale_receive()
            target_to_xscale()
            malloc()
            memset()
            xscale_jtag_set_instr()
            jtag_add_runtest()
            jtag_add_pathmove()
            jtag_add_dr_scan_check()
            jtag_add_callback()
            xscale_getbuf()
                buf_get_u32()
            jtag_execute_queue()
            LOG_ERROR()
            buf_get_u32()
            free()
        buf_set_u32()
        LOG_DEBUG()
        arm_set_cpsr()
        is_arm_mode()
        LOG_ERROR()
        arm_mode_name()
        arm_reg_current()
        buf_get_u32()
        exit()
        xscale_get_reg()
            target_to_xscale()
            strcmp()
            xscale_read_dcsr()
            xscale_read_tx()
                target_to_xscale()
                xscale_jtag_set_instr()
                memset()
                gettimeofday()
                timeval_add_time()
                jtag_add_pathmove()
                ARRAY_SIZE()
                jtag_add_dr_scan()
                jtag_check_value_mask()
                jtag_execute_queue()
                LOG_ERROR()
                timeval_compare()
                LOG_DEBUG()
                alive_sleep()
                keep_alive()
            xscale_send_u32()
            buf_cpy()
        armv4_5_identify_cache()
        xscale_read_trace()
            target_to_xscale()
            LOG_TARGET_ERROR()
            xscale_send_u32()
            xscale_receive()
            LOG_DEBUG()
            malloc()
            buf_get_u32()
        xscale_resume()
            target_to_xscale()
            LOG_DEBUG()
            LOG_TARGET_ERROR()
            target_free_all_working_areas()
            xscale_update_vectors()
                target_to_xscale()
                target_read_u32()
                ARMV4_5_B()
                xscale_invalidate_ic_line()
                    target_to_xscale()
                    xscale_jtag_set_instr()
                    buf_set_u32()
                    memset()
                    jtag_add_dr_scan()
                xscale_load_ic()
            buf_set_u32()
            buf_get_u32()
            arm_simulate_step()
            breakpoint_find()
            xscale_unset_breakpoint()
                target_to_xscale()
                LOG_TARGET_ERROR()
                LOG_WARNING()
                xscale_set_reg_u32()
                target_write_memory()
                xscale_send_u32()
            target_read_u32()
            LOG_ERROR()
            xscale_enable_single_step()
                target_to_xscale()
                breakpoint_find()
                buf_get_u32()
                xscale_unset_breakpoint()
                LOG_ERROR()
                exit()
                xscale_set_reg_u32()
            xscale_restore_banked()
                target_to_arm()
                LOG_TARGET_ERROR()
                armv4_5_number_to_mode()
                ARMV4_5_CORE_REG_MODE()
                xscale_send_u32()
                buf_get_u32()
            xscale_send_u32()
            xscale_debug_entry()
            xscale_disable_single_step()
                target_to_xscale()
                xscale_set_reg_u32()
            xscale_set_breakpoint()
            xscale_enable_breakpoints()
                xscale_set_breakpoint()
            xscale_enable_watchpoints()
                xscale_set_watchpoint()
                    target_to_xscale()
                    buf_get_u32()
                    LOG_TARGET_ERROR()
                    LOG_ERROR()
                    xscale_set_reg_u32()
                    watchpoint_set()
            xscale_free_trace_data()
            register_cache_invalidate()
            target_call_event_callbacks()
    xscale_resume()
xscale_deinit_target()
    target_to_xscale()
    xscale_free_reg_cache()
        target_to_xscale()
        ARRAY_SIZE()
        free()
        arm_free_reg_cache()
    free()
xscale_halt()
    target_to_xscale()
    LOG_DEBUG()
    target_state_name()
    LOG_ERROR()
    xscale_read_dcsr()
xscale_init_target()
    xscale_build_reg_cache()
        target_to_xscale()
        register_get_last_cache_p()
        malloc()
        ARRAY_SIZE()
        arm_build_reg_cache()
        calloc()
xscale_mmu()
    target_to_xscale()
    LOG_TARGET_ERROR()
xscale_poll()
    xscale_read_tx()
    xscale_debug_entry()
    LOG_USER()
    target_call_event_callbacks()
xscale_read_phys_memory()
    target_to_xscale()
    xscale_read_memory()
        target_to_xscale()
        LOG_DEBUG()
        LOG_TARGET_ERROR()
        xscale_send_u32()
        malloc()
        xscale_receive()
        free()
        target_buffer_set_u32()
        target_buffer_set_u16()
        LOG_ERROR()
        xscale_read_dcsr()
        buf_get_u32()
    LOG_ERROR()
    target_name()
xscale_remove_breakpoint()
    target_to_xscale()
    LOG_TARGET_ERROR()
    xscale_unset_breakpoint()
xscale_remove_watchpoint()
    target_to_xscale()
    LOG_TARGET_ERROR()
    xscale_unset_watchpoint()
        target_to_xscale()
        buf_get_u32()
        LOG_TARGET_ERROR()
        LOG_WARNING()
        xscale_set_reg_u32()
xscale_step()
    target_to_arm()
    LOG_TARGET_ERROR()
    buf_set_u32()
    buf_get_u32()
    arm_simulate_step()
    LOG_DEBUG()
    target_call_event_callbacks()
    breakpoint_find()
    xscale_unset_breakpoint()
    xscale_step_inner()
        target_to_xscale()
        arm_simulate_step()
        buf_get_u32()
        target_read_u32()
        LOG_ERROR()
        LOG_DEBUG()
        xscale_enable_single_step()
        xscale_restore_banked()
        xscale_send_u32()
        target_call_event_callbacks()
        register_cache_invalidate()
        xscale_debug_entry()
        xscale_disable_single_step()
    xscale_set_breakpoint()
xscale_target_create()
    LOG_ERROR()
    calloc()
    xscale_init_arch_info()
        memset()
        ARMV4_5_B()
        LOG_INFO()
        target_name()
        ARMV5_BKPT()
        ARMV5_T_BKPT()
        xscale_read_core_reg()
            LOG_ERROR()
        xscale_write_core_reg()
            LOG_ERROR()
        xscale_full_context()
            target_to_arm()
            LOG_DEBUG()
            LOG_TARGET_ERROR()
            malloc()
            armv4_5_number_to_mode()
            ARMV4_5_CORE_REG_MODE()
            xscale_send_u32()
            xscale_receive()
            buf_set_u32()
            free()
        arm_init_arch_info()
        xscale_get_ttb()
            target_to_xscale()
            xscale_get_reg()
            buf_get_u32()
        xscale_read_memory()
        xscale_write_memory()
            target_to_xscale()
            LOG_DEBUG()
            LOG_TARGET_ERROR()
            xscale_send_u32()
            target_buffer_get_u32()
            target_buffer_get_u16()
            LOG_ERROR()
            exit()
            xscale_send()
                target_to_xscale()
                xscale_jtag_set_instr()
                le_to_h_u32()
                be_to_h_u32()
                le_to_h_u16()
                be_to_h_u16()
                LOG_ERROR()
                buf_set_u32()
                jtag_add_dr_scan()
                jtag_execute_queue()
            xscale_read_dcsr()
            buf_get_u32()
        xscale_disable_mmu_caches()
            target_to_xscale()
            xscale_get_reg()
            buf_get_u32()
            xscale_send_u32()
            xscale_set_reg_u32()
        xscale_enable_mmu_caches()
            target_to_xscale()
            xscale_get_reg()
            buf_get_u32()
            xscale_set_reg_u32()
            xscale_send_u32()
xscale_virt2phys()
    target_to_xscale()
    LOG_ERROR()
    armv4_5_mmu_translate_va()
xscale_write_phys_memory()
    target_to_xscale()
    xscale_write_memory()
    LOG_ERROR()
    target_name()
xtensa_checksum_memory()
    LOG_WARNING()
xtensa_chip_arch_state()
xtensa_chip_examine()
    target_to_xtensa()
    xtensa_dm_examine()
        LOG_DEBUG()
        dap_put_ap()
        dap_find_get_ap()
        LOG_ERROR()
        dap_get_ap()
        mem_ap_init()
    xtensa_examine()
xtensa_chip_jim_configure()
    adiv5_jim_configure()
    LOG_DEBUG()
xtensa_chip_poll()
    xtensa_poll()
    target_call_event_callbacks()
    xtensa_fileio_detect_proc()
        target_to_xtensa()
        xtensa_cause_get()
        xtensa_reg_get()
        target_read_memory()
        LOG_ERROR()
        buf_get_u32()
        XTENSA_SYSCALL()
        LOG_TARGET_DEBUG()
xtensa_chip_target_create()
    adiv5_verify_config()
    LOG_DEBUG()
    calloc()
    LOG_ERROR()
    xtensa_chip_init_arch_info()
        xtensa_init_arch_info()
    free()
xtensa_chip_target_deinit()
    target_to_xtensa()
    xtensa_target_deinit()
    free()
xtensa_chip_target_init()
    xtensa_target_init()
    xtensa_fileio_init()
        malloc()
        LOG_TARGET_ERROR()
        free()
xtensa_chip_virt2phys()
xtensa_core_reg_get()
    strncmp()
    strtoul()
    LOG_WARNING()
xtensa_core_reg_set()
    assert()
    strncmp()
    strtoul()
    LOG_WARNING()
    buf_cpy()
xtensa_dm_device_id_read()
    xtensa_dm_queue_tdi_idle()
    xtensa_dm_queue_execute()
    buf_get_u32()
xtensa_dm_queue_pwr_reg_read()
    LOG_ERROR()
    mem_ap_read_buf()
    mem_ap_write_u32()
    xtensa_dm_add_set_ir()
        memset()
        buf_set_u32()
        jtag_add_ir_scan()
    xtensa_dm_add_dr_scan()
        memset()
        jtag_add_dr_scan()
xtensa_dm_queue_pwr_reg_write()
    LOG_ERROR()
    mem_ap_write_u32()
    xtensa_dm_add_set_ir()
    xtensa_dm_add_dr_scan()
xtensa_dm_queue_reg_read()
    LOG_ERROR()
    mem_ap_read_buf()
    xtensa_dm_add_set_ir()
    xtensa_dm_add_dr_scan()
xtensa_dm_queue_reg_write()
    LOG_ERROR()
    mem_ap_write_u32()
    xtensa_dm_add_set_ir()
    xtensa_dm_add_dr_scan()
xtensa_gdb_fileio_end()
    target_to_xtensa()
    LOG_TARGET_DEBUG()
    xtensa_reg_set_deep_relgen()
        target_to_xtensa()
        xtensa_reg_get()
        xtensa_windowbase_offset_to_canonical()
        xtensa_reg_set()
    xtensa_reg_get()
    xtensa_reg_set()
xtensa_gdb_query_custom()
    target_to_xtensa()
    LOG_TARGET_ERROR()
    strncmp()
    strcpy()
    strncasecmp()
    sscanf()
    LOG_TARGET_WARNING()
    strtoul()
    LOG_TARGET_DEBUG()
    LOG_ERROR()
    free()
    calloc()
    xtensa_gdbqc_qxtreg()
        target_to_xtensa()
        LOG_ERROR()
        strtoul()
        memset()
        LOG_DEBUG()
        xtensa_read_memory()
        strchr()
        strncpy()
        xtensa_write_memory()
            target_to_xtensa()
            ALIGN_DOWN()
            ALIGN_UP()
            LOG_TARGET_ERROR()
            xtensa_memory_op_validate_range()
            LOG_WARNING()
            malloc()
            xtensa_mark_register_dirty()
            xtensa_queue_dbg_reg_write()
            xtensa_queue_exec_ins()
            XT_INS_RSR()
            XT_INS_LDDR32P()
            XT_INS_L32I()
            XT_INS_WSR()
            xtensa_queue_dbg_reg_read()
            xtensa_dm_queue_execute()
            LOG_ERROR()
            free()
            xtensa_core_status_check()
            buf_bswap32()
            memcpy()
            buf_get_u32()
            XT_INS_SDDR32P()
            XT_INS_S32I()
            LOG_TARGET_INFO()
            xtensa_write_memory()
            LOG_TARGET_WARNING()
            xtensa_is_icacheable()
            xtensa_is_dcacheable()
            MIN()
            XT_INS_IHI()
            XT_INS_DHWBI()
        xtensa_reg_get()
        xtensa_queue_dbg_reg_write()
        xtensa_queue_exec_ins()
        XT_INS_RSR()
        xtensa_gdbqc_parse_exec_tie_ops()
            target_to_xtensa()
            strtoul()
            LOG_TARGET_ERROR()
            sprintf()
            strlen()
            LOG_TARGET_DEBUG()
            xtensa_queue_exec_ins_wide()
        xtensa_dm_queue_execute()
        LOG_TARGET_ERROR()
        xtensa_core_status_check()
        strcpy()
        sprintf()
        LOG_TARGET_DEBUG()
xtensa_get_gdb_arch()
xtensa_get_gdb_fileio_info()
    LOG_ERROR()
    target_to_xtensa()
    xtensa_reg_get()
    LOG_TARGET_DEBUG()
    snprintf()
    LOG_INFO()
xtensa_get_gdb_reg_list()
    target_to_xtensa()
    LOG_ERROR()
    LOG_DEBUG()
    calloc()
    assert()
    xtensa_reg_get_value()
xtensa_mmu_is_enabled()
    target_to_xtensa()
xtensa_set_permissive_mode()
    target_to_xtensa()
xtensa_write_buffer()
    xtensa_write_memory()
zephyr_cortex_m_stack_align()
    rtos_cortex_m_stack_align()
zephyr_create()
    target_type_name()
    LOG_INFO()
    strcmp()
    target_to_arc()
    CHECK_RETVAL()
    arc_jtag_read_aux_reg_one()
    LOG_DEBUG()
    LOG_ERROR()
zephyr_detect_rtos()
    LOG_INFO()
zephyr_get_arc_state()
    target_read_u32()
    rtos_generic_stack_read()
    buf_cpy()
    ARRAY_SIZE()
    LOG_ERROR()
zephyr_get_arm_state()
    rtos_generic_stack_read()
    target_buffer_get_u32()
    buf_cpy()
zephyr_get_symbol_list_to_lookup()
    malloc()
    LOG_ERROR()
    memcpy()
zephyr_get_thread_reg_list()
    LOG_INFO()
    free()
zephyr_update_threads()
    LOG_ERROR()
    target_read_u8()
    target_read_u32()
    LOG_DEBUG()
    zephyr_kptr()
    zephyr_fetch_thread_list()
        target_read_u32()
        zephyr_kptr()
        LOG_ERROR()
        zephyr_array_init()
        zephyr_fetch_thread()
            target_read_u32()
            target_read_u8()
            target_read_buffer()
            LOG_DEBUG()
        zephyr_array_append()
            realloc()
            LOG_ERROR()
        strdup()
        alloc_printf()
        LOG_DEBUG()
        rtos_free_threadlist()
        zephyr_array_detach_ptr()
            zephyr_array_init()
        free()
        zephyr_array_free()
            free()
            zephyr_array_init()
